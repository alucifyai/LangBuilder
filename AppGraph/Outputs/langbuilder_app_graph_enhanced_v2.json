{
	"app_graph": {
		"metadata": {
			"name": "LangBuilder Complete Application Graph",
			"version": "2.2.0",
			"description": "Comprehensive application graph with correct node counts - 15 schema entities, 36 interface nodes, 25 logic nodes, 20 test nodes, and 120 properly typed edges",
			"last_updated": "2025-09-02",
			"analysis_source": "Complete codebase analysis including MCP support, Voice Mode, File V2 features, RBAC preparation, and comprehensive UI/UX components",
			"node_counts": {
				"schema_nodes": 15,
				"interface_nodes": 36,
				"logic_nodes": 25,
				"test_nodes": 20,
				"total_edges": 120
			}
		},
		"nodes": {
			"schema_nodes": [
				{
					"id": "user_entity",
					"type": "schema",
					"name": "User",
					"description": "User entity with authentication, profile management, and system access control",
					"path": "src/backend/base/langflow/services/database/models/user/model.py",
					"graphql_schema": "type User {\n  id: UUID! @primary\n  username: String! @unique @indexed\n  password: String!\n  email: String\n  is_active: Boolean! @default(false)\n  is_superuser: Boolean! @default(false)\n  profile_image: String\n  created_at: DateTime! @default(now)\n  updated_at: DateTime! @default(now)\n  last_login_at: DateTime\n  store_api_key: String\n  optins: JSON @default({github_starred: false, dialog_dismissed: false, discord_clicked: false})\n  \n  # Relationships\n  api_keys: [ApiKey!]! @cascade(delete)\n  flows: [Flow!]!\n  variables: [Variable!]! @cascade(delete)\n  folders: [Folder!]! @cascade(delete)\n  files: [File!]!\n}\n\nenum AccessType {\n  PRIVATE\n  PUBLIC\n}"
				},
				{
					"id": "api_key_entity",
					"type": "schema",
					"name": "ApiKey",
					"description": "API authentication credentials for external system access and integration",
					"path": "src/backend/base/langflow/services/database/models/api_key/model.py",
					"graphql_schema": "type ApiKey {\n  id: UUID! @primary\n  name: String @indexed\n  api_key: String! @unique @indexed\n  created_at: DateTime! @default(now)\n  last_used_at: DateTime\n  total_uses: Int! @default(0)\n  is_active: Boolean! @default(true)\n  \n  # Foreign Keys\n  user_id: UUID! @indexed @foreign(user.id)\n  user: User!\n}"
				},
				{
					"id": "flow_entity",
					"type": "schema",
					"name": "Flow",
					"description": "AI workflow definition with components, execution logic, and MCP integration support",
					"path": "src/backend/base/langflow/services/database/models/flow/model.py",
					"graphql_schema": "type Flow {\n  id: UUID! @primary\n  name: String! @indexed\n  description: String @indexed\n  data: JSON  # Contains nodes and edges structure\n  icon: String  # Emoji or lucide icon\n  icon_bg_color: String  # Hex color starting with #\n  gradient: String\n  is_component: Boolean @default(false)\n  updated_at: DateTime @default(now)\n  webhook: Boolean @default(false)\n  endpoint_name: String @unique @indexed  # Alphanumeric with hyphens/underscores\n  tags: [String!] @default([])\n  locked: Boolean @default(false)\n  mcp_enabled: Boolean @default(false)  # MCP server exposure\n  action_name: String\n  action_description: String\n  access_type: AccessTypeEnum! @default(PRIVATE)  # PRIVATE or PUBLIC\n  fs_path: String  # File system path\n  \n  # Foreign Keys\n  user_id: UUID @indexed @foreign(user.id)\n  user: User!\n  folder_id: UUID @indexed @foreign(folder.id)\n  folder: Folder\n  \n  # Unique Constraints\n  @@unique([user_id, name])\n  @@unique([user_id, endpoint_name])\n}\n\nenum AccessTypeEnum {\n  PRIVATE\n  PUBLIC\n}"
				},
				{
					"id": "folder_entity",
					"type": "schema",
					"name": "Folder",
					"description": "Hierarchical folder organization system for flows and project management",
					"path": "src/backend/base/langflow/services/database/models/folder/model.py",
					"graphql_schema": "type Folder {\n  id: UUID! @primary\n  name: String! @indexed\n  description: String\n  auth_settings: JSON  # Authentication settings for the folder/project\n  \n  # Foreign Keys\n  parent_id: UUID @foreign(folder.id)\n  parent: Folder\n  user_id: UUID @foreign(user.id)\n  user: User!\n  \n  # Relationships\n  children: [Folder!]!\n  flows: [Flow!]! @cascade(delete)\n  \n  # Unique Constraints\n  @@unique([user_id, name])\n}"
				},
				{
					"id": "variable_entity",
					"type": "schema",
					"name": "Variable",
					"description": "Encrypted variable storage for credentials and sensitive configuration data",
					"path": "src/backend/base/langflow/services/database/models/variable/model.py",
					"graphql_schema": "type Variable {\n  id: UUID! @primary\n  name: String!\n  value: String! @encrypted  # Encrypted value\n  type: String  # e.g., \"CREDENTIAL\"\n  default_fields: [String!]\n  created_at: DateTime @default(now)\n  updated_at: DateTime\n  \n  # Foreign Keys\n  user_id: UUID! @foreign(user.id)\n  user: User!\n}"
				},
				{
					"id": "message_entity",
					"type": "schema",
					"name": "Message",
					"description": "Chat message storage with support for rich content, files, and voice mode integration",
					"path": "src/backend/base/langflow/services/database/models/message/model.py",
					"graphql_schema": "type Message {\n  id: UUID! @primary\n  timestamp: DateTime! @default(now)\n  sender: String!\n  sender_name: String!\n  session_id: String!\n  text: String!\n  files: [String!] @default([])\n  error: Boolean! @default(false)\n  edit: Boolean! @default(false)\n  properties: JSON  # Properties object\n  category: String! @default(\"message\")\n  content_blocks: [JSON!] @default([])  # Voice Mode support\n  \n  # Foreign Keys\n  flow_id: UUID @foreign(flow.id)\n}"
				},
				{
					"id": "transaction_entity",
					"type": "schema",
					"name": "Transaction",
					"description": "Flow execution transaction logging with input/output tracking and performance monitoring",
					"path": "src/backend/base/langflow/services/database/models/transactions/model.py",
					"graphql_schema": "type Transaction {\n  id: UUID! @primary\n  timestamp: DateTime! @default(now)\n  vertex_id: String!  # ID of the vertex/node in the flow\n  target_id: String\n  inputs: JSON  # Serialized with length limits\n  outputs: JSON  # Serialized with length limits\n  status: String!\n  error: String\n  \n  # Foreign Keys\n  flow_id: UUID! @foreign(flow.id)\n}"
				},
				{
					"id": "vertex_build_entity",
					"type": "schema",
					"name": "VertexBuild",
					"description": "Component build artifacts and execution state tracking for flow vertices",
					"path": "src/backend/base/langflow/services/database/models/vertex_builds/model.py",
					"graphql_schema": "type VertexBuild {\n  build_id: UUID! @primary\n  id: String!  # Vertex/component ID\n  timestamp: DateTime! @default(now)\n  data: JSON  # Serialized with limits\n  artifacts: JSON  # Serialized with limits\n  params: String  # Serialized parameters\n  valid: Boolean!\n  \n  # Foreign Keys\n  flow_id: UUID! @foreign(flow.id)\n}"
				},
				{
					"id": "file_entity",
					"type": "schema",
					"name": "File",
					"description": "File management system V2 with storage provider support and user association",
					"path": "src/backend/base/langflow/services/database/models/file/model.py",
					"graphql_schema": "type File {\n  id: UUID! @primary\n  name: String! @unique\n  path: String!\n  size: Int!\n  provider: String  # Storage provider (e.g., 'local', 's3')\n  created_at: DateTime! @default(now)\n  updated_at: DateTime! @default(now)\n  \n  # Foreign Keys\n  user_id: UUID! @foreign(user.id)\n  user: User!\n}"
				},
				{
					"id": "component_entity",
					"type": "schema",
					"name": "Component",
					"description": "Runtime component definition with template, documentation, and lifecycle management",
					"path": "src/backend/base/langflow/component_types/",
					"graphql_schema": "type Component {\n  display_name: String!\n  description: String!\n  icon: String\n  category: ComponentCategory!\n  inputs: [ComponentInput!]!\n  outputs: [ComponentOutput!]!\n  code: String!\n  template: JSON\n  documentation: String\n  beta: Boolean!\n  experimental: Boolean!\n}\n\nenum ComponentCategory {\n  INPUT_OUTPUT\n  TEXT_PROCESSING\n  AGENTS\n  CHAINS\n  DATA\n  EMBEDDINGS\n  LLMS\n  MEMORIES\n  TOOLS\n  RETRIEVERS\n  LOGIC\n  HELPERS\n  CUSTOM\n}\n\ntype ComponentInput {\n  name: String!\n  type: String!\n  required: Boolean!\n  description: String\n  default: String\n}\n\ntype ComponentOutput {\n  name: String!\n  type: String!\n  description: String\n}"
				},
				{
					"id": "vertex_entity",
					"type": "schema",
					"name": "Vertex",
					"description": "Graph runtime representation of flow nodes with state management and edge connections",
					"path": "src/backend/base/langflow/graph/vertex/",
					"graphql_schema": "type Vertex {\n  id: String!\n  display_name: String!\n  description: String\n  base_type: ComponentType!\n  inputs: [VertexInput!]!\n  outputs: [VertexOutput!]!\n  params: JSON\n  frozen: Boolean!\n  is_input: Boolean!\n  is_output: Boolean!\n  is_state: Boolean!\n  edges: [Edge!]!\n}\n\nenum ComponentType {\n  COMPONENT\n  CHAT_INPUT\n  CHAT_OUTPUT\n  TEXT_INPUT\n  TEXT_OUTPUT\n  DATA_INPUT\n  DATA_OUTPUT\n}\n\ntype VertexInput {\n  name: String!\n  type: String!\n  value: String\n  required: Boolean!\n}\n\ntype VertexOutput {\n  name: String!\n  type: String!\n  value: String\n}"
				},
				{
					"id": "edge_entity",
					"type": "schema",
					"name": "Edge",
					"description": "Graph runtime representation of connections between vertices with data flow management",
					"path": "src/backend/base/langflow/graph/edge/",
					"graphql_schema": "type Edge {\n  id: String!\n  source: Vertex!\n  target: Vertex!\n  source_handle: String!\n  target_handle: String!\n  data: JSON\n}"
				},
				{
					"id": "credential_entity",
					"type": "schema",
					"name": "Credential",
					"description": "Secure credential management for API keys, tokens, and authentication data",
					"path": "src/backend/base/langflow/services/credential/",
					"graphql_schema": "type Credential {\n  id: UUID! @primary\n  name: String! @unique\n  credential_type: CredentialType!\n  encrypted_value: String! @encrypted\n  metadata: JSON\n  created_at: DateTime! @default(now)\n  updated_at: DateTime! @default(now)\n  expires_at: DateTime\n  is_active: Boolean! @default(true)\n  \n  # Foreign Keys\n  user_id: UUID! @foreign(user.id)\n  user: User!\n}\n\nenum CredentialType {\n  API_KEY\n  OAUTH_TOKEN\n  DATABASE_CONNECTION\n  WEBHOOK_SECRET\n  CERTIFICATE\n  SSH_KEY\n}"
				},
				{
					"id": "store_entity",
					"type": "schema",
					"name": "Store",
					"description": "Component marketplace integration with sharing, discovery, and rating capabilities",
					"path": "src/backend/base/langflow/services/store/",
					"graphql_schema": "type Store {\n  id: UUID! @primary\n  name: String!\n  description: String!\n  flow_data: JSON!\n  tags: [String!]!\n  is_public: Boolean! @default(false)\n  downloads: Int! @default(0)\n  likes: Int! @default(0)\n  version: String!\n  author: String!\n  created_at: DateTime! @default(now)\n  updated_at: DateTime! @default(now)\n  \n  # Foreign Keys\n  user_id: UUID! @foreign(user.id)\n  user: User!\n}\n\ntype StoreRating {\n  id: UUID! @primary\n  rating: Int!\n  review: String\n  created_at: DateTime! @default(now)\n  \n  # Foreign Keys\n  store_id: UUID! @foreign(store.id)\n  user_id: UUID! @foreign(user.id)\n  store: Store!\n  user: User!\n}"
				},
				{
					"id": "global_variable_entity",
					"type": "schema",
					"name": "GlobalVariable",
					"description": "System-wide configuration variables and environment settings management",
					"path": "src/backend/base/langflow/services/variable/",
					"graphql_schema": "type GlobalVariable {\n  id: UUID! @primary\n  name: String! @unique\n  value: String!\n  type: GlobalVariableType!\n  description: String\n  is_secret: Boolean! @default(false)\n  created_at: DateTime! @default(now)\n  updated_at: DateTime! @default(now)\n  \n  # Access Control\n  user_id: UUID @foreign(user.id)  # null for system-wide variables\n  user: User\n}\n\nenum GlobalVariableType {\n  STRING\n  INTEGER\n  FLOAT\n  BOOLEAN\n  JSON\n  SECRET\n}"
				}
			],
			"interface_nodes": [
				{
					"id": "login_page",
					"type": "interface",
					"name": "LoginPage",
					"description": "User authentication interface with credential validation and auto-login support",
					"route": "/login",
					"component_path": "src/frontend/src/pages/LoginPage",
					"uidl_definition_physical": {
						"name": "LoginPage",
						"stateDefinitions": {
							"username": {
								"type": "string",
								"defaultValue": ""
							},
							"password": {
								"type": "string",
								"defaultValue": ""
							}
						},
						"node": {
							"type": "element",
							"content": {
								"elementType": "form",
								"name": "loginForm",
								"attrs": {
									"className": {
										"type": "static",
										"content": "h-screen w-full"
									}
								},
								"events": {
									"onSubmit": [
										{
											"type": "stateChange",
											"modifies": "username",
											"newState": {
												"type": "dynamic",
												"content": {
													"referenceType": "state",
													"id": "username"
												}
											}
										}
									]
								},
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "mainContainer",
											"attrs": {
												"className": {
													"type": "static",
													"content": "flex h-full w-full flex-col items-center justify-center bg-muted"
												}
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "formContainer",
														"attrs": {
															"className": {
																"type": "static",
																"content": "flex w-72 flex-col items-center justify-center gap-2"
															}
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "image",
																	"name": "langflowLogo",
																	"attrs": {
																		"src": {
																			"type": "static",
																			"content": "LangflowLogo.svg"
																		},
																		"alt": {
																			"type": "static",
																			"content": "Langflow logo"
																		},
																		"className": {
																			"type": "static",
																			"content": "mb-4 h-10 w-10 scale-[1.5]"
																		}
																	}
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "text",
																	"name": "signInTitle",
																	"semanticType": "span",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "mb-6 text-2xl font-semibold text-primary"
																		}
																	},
																	"children": [
																		{
																			"type": "static",
																			"content": "Sign in to Langflow"
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "usernameFieldContainer",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "mb-3 w-full"
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "label",
																				"name": "usernameLabel",
																				"attrs": {
																					"for": {
																						"type": "static",
																						"content": "username"
																					},
																					"className": {
																						"type": "static",
																						"content": "data-[invalid]:label-invalid"
																					}
																				},
																				"children": [
																					{
																						"type": "static",
																						"content": "Username "
																					},
																					{
																						"type": "element",
																						"content": {
																							"elementType": "text",
																							"semanticType": "span",
																							"attrs": {
																								"className": {
																									"type": "static",
																									"content": "font-medium text-destructive"
																								}
																							},
																							"children": [
																								{
																									"type": "static",
																									"content": "*"
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "input",
																				"name": "usernameInput",
																				"attrs": {
																					"type": {
																						"type": "static",
																						"content": "text"
																					},
																					"name": {
																						"type": "static",
																						"content": "username"
																					},
																					"placeholder": {
																						"type": "static",
																						"content": "Username"
																					},
																					"required": {
																						"type": "static",
																						"content": true
																					},
																					"className": {
																						"type": "static",
																						"content": "w-full"
																					},
																					"value": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "state",
																							"id": "username"
																						}
																					}
																				},
																				"events": {
																					"onChange": [
																						{
																							"type": "stateChange",
																							"modifies": "username",
																							"newState": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "event",
																									"id": "target.value"
																								}
																							}
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "text",
																				"name": "usernameErrorMessage",
																				"semanticType": "span",
																				"attrs": {
																					"className": {
																						"type": "static",
																						"content": "field-invalid"
																					}
																				},
																				"children": [
																					{
																						"type": "static",
																						"content": "Please enter your username"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "passwordFieldContainer",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "mb-3 w-full"
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "label",
																				"name": "passwordLabel",
																				"attrs": {
																					"for": {
																						"type": "static",
																						"content": "password"
																					},
																					"className": {
																						"type": "static",
																						"content": "data-[invalid]:label-invalid"
																					}
																				},
																				"children": [
																					{
																						"type": "static",
																						"content": "Password "
																					},
																					{
																						"type": "element",
																						"content": {
																							"elementType": "text",
																							"semanticType": "span",
																							"attrs": {
																								"className": {
																									"type": "static",
																									"content": "font-medium text-destructive"
																								}
																							},
																							"children": [
																								{
																									"type": "static",
																									"content": "*"
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "input",
																				"name": "passwordInput",
																				"attrs": {
																					"type": {
																						"type": "static",
																						"content": "password"
																					},
																					"name": {
																						"type": "static",
																						"content": "password"
																					},
																					"placeholder": {
																						"type": "static",
																						"content": "Password"
																					},
																					"required": {
																						"type": "static",
																						"content": true
																					},
																					"className": {
																						"type": "static",
																						"content": "w-full"
																					},
																					"value": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "state",
																							"id": "password"
																						}
																					}
																				},
																				"events": {
																					"onChange": [
																						{
																							"type": "stateChange",
																							"modifies": "password",
																							"newState": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "event",
																									"id": "target.value"
																								}
																							}
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "text",
																				"name": "passwordErrorMessage",
																				"semanticType": "span",
																				"attrs": {
																					"className": {
																						"type": "static",
																						"content": "field-invalid"
																					}
																				},
																				"children": [
																					{
																						"type": "static",
																						"content": "Please enter your password"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "signInButtonContainer",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "w-full"
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "button",
																				"name": "signInButton",
																				"attrs": {
																					"type": {
																						"type": "static",
																						"content": "submit"
																					},
																					"className": {
																						"type": "static",
																						"content": "mr-3 mt-6 w-full"
																					}
																				},
																				"children": [
																					{
																						"type": "static",
																						"content": "Sign in"
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "signUpButtonContainer",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "w-full"
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "link",
																				"name": "signUpLink",
																				"attrs": {
																					"href": {
																						"type": "static",
																						"content": "/signup"
																					}
																				},
																				"children": [
																					{
																						"type": "element",
																						"content": {
																							"elementType": "button",
																							"name": "signUpButton",
																							"attrs": {
																								"type": {
																									"type": "static",
																									"content": "button"
																								},
																								"className": {
																									"type": "static",
																									"content": "w-full"
																								}
																							},
																							"children": [
																								{
																									"type": "static",
																									"content": "Don't have an account? "
																								},
																								{
																									"type": "element",
																									"content": {
																										"elementType": "text",
																										"semanticType": "strong",
																										"children": [
																											{
																												"type": "static",
																												"content": "Sign Up"
																											}
																										]
																									}
																								}
																							]
																						}
																					}
																				]
																			}
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									}
								]
							}
						}
					}
				},
				{
					"id": "flow_dashboard",
					"type": "interface",
					"name": "FlowDashboard",
					"description": "Main application dashboard with flow management, search, and folder navigation",
					"route": "/flows",
					"component_path": "src/frontend/src/pages/FlowPage",
					"uidl_definition_physical": {
						"name": "FlowPage",
						"propDefinitions": {
							"view": {
								"type": "boolean",
								"defaultValue": false
							}
						},
						"stateDefinitions": {
							"isLoading": {
								"type": "boolean",
								"defaultValue": false
							},
							"currentFlow": {
								"type": "object",
								"defaultValue": null
							},
							"blocker": {
								"type": "object",
								"defaultValue": {
								}
							},
							"changesNotSaved": {
								"type": "boolean",
								"defaultValue": false
							},
							"isBuilding": {
								"type": "boolean",
								"defaultValue": false
							},
							"isMobile": {
								"type": "boolean",
								"defaultValue": false
							},
							"autoSaving": {
								"type": "boolean",
								"defaultValue": false
							},
							"updatedAt": {
								"type": "string",
								"defaultValue": ""
							}
						},
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "flowPageRoot",
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "flowPagePositioning",
											"attrs": {
												"className": {
													"type": "static",
													"content": "flow-page-positioning"
												}
											},
											"children": [
												{
													"type": "conditional",
													"content": {
														"reference": {
															"type": "dynamic",
															"content": {
																"referenceType": "state",
																"id": "currentFlow"
															}
														},
														"value": true,
														"node": {
															"type": "element",
															"content": {
																"elementType": "container",
																"name": "flowMainContainer",
																"attrs": {
																	"className": {
																		"type": "static",
																		"content": "flex h-full overflow-hidden"
																	}
																},
																"children": [
																	{
																		"type": "element",
																		"content": {
																			"elementType": "component",
																			"name": "sidebarProvider",
																			"semanticType": "SidebarProvider",
																			"attrs": {
																				"width": {
																					"type": "static",
																					"content": "17.5rem"
																				},
																				"defaultOpen": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "isMobile",
																						"operator": "!"
																					}
																				}
																			},
																			"children": [
																				{
																					"type": "conditional",
																					"content": {
																						"reference": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "prop",
																								"id": "view",
																								"operator": "!"
																							}
																						},
																						"value": true,
																						"node": {
																							"type": "element",
																							"content": {
																								"elementType": "component",
																								"name": "flowSidebarComponent",
																								"semanticType": "FlowSidebarComponent",
																								"attrs": {
																									"isLoading": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "state",
																											"id": "isLoading"
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				{
																					"type": "element",
																					"content": {
																						"elementType": "container",
																						"name": "mainContentArea",
																						"semanticType": "main",
																						"attrs": {
																							"className": {
																								"type": "static",
																								"content": "flex w-full overflow-hidden"
																							}
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "pageContainer",
																									"attrs": {
																										"className": {
																											"type": "static",
																											"content": "h-full w-full"
																										}
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "component",
																												"name": "pageComponent",
																												"semanticType": "Page",
																												"attrs": {
																													"setIsLoading": {
																														"type": "dynamic",
																														"content": {
																															"referenceType": "function",
																															"id": "setIsLoading"
																														}
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "container",
																															"name": "canvasWrapper",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "h-full w-full bg-canvas"
																																}
																															},
																															"children": [
																																{
																																	"type": "conditional",
																																	"content": {
																																		"reference": {
																																			"type": "dynamic",
																																			"content": {
																																				"referenceType": "state",
																																				"id": "showCanvas"
																																			}
																																		},
																																		"value": true,
																																		"node": {
																																			"type": "element",
																																			"content": {
																																				"elementType": "container",
																																				"name": "reactFlowContainer",
																																				"attrs": {
																																					"id": {
																																						"type": "static",
																																						"content": "react-flow-id"
																																					},
																																					"className": {
																																						"type": "static",
																																						"content": "h-full w-full bg-canvas"
																																					}
																																				},
																																				"children": [
																																					{
																																						"type": "conditional",
																																						"content": {
																																							"reference": {
																																								"type": "dynamic",
																																								"content": {
																																									"referenceType": "prop",
																																									"id": "view",
																																									"operator": "!"
																																								}
																																							},
																																							"value": true,
																																							"node": {
																																								"type": "element",
																																								"content": {
																																									"elementType": "container",
																																									"name": "flowToolsContainer",
																																									"children": [
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "component",
																																												"name": "logCanvasControls",
																																												"semanticType": "MemoizedLogCanvasControls"
																																											}
																																										},
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "component",
																																												"name": "canvasControls",
																																												"semanticType": "MemoizedCanvasControls",
																																												"attrs": {
																																													"setIsAddingNote": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "function",
																																															"id": "setIsAddingNote"
																																														}
																																													},
																																													"position": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "state",
																																															"id": "position"
																																														}
																																													},
																																													"shadowBoxWidth": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "state",
																																															"id": "shadowBoxWidth"
																																														}
																																													},
																																													"shadowBoxHeight": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "state",
																																															"id": "shadowBoxHeight"
																																														}
																																													}
																																												}
																																											}
																																										},
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "component",
																																												"name": "flowToolbar",
																																												"semanticType": "FlowToolbar"
																																											}
																																										}
																																									]
																																								}
																																							}
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "component",
																																							"name": "sidebarTrigger",
																																							"semanticType": "MemoizedSidebarTrigger"
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "component",
																																							"name": "selectionMenu",
																																							"semanticType": "SelectionMenu",
																																							"attrs": {
																																								"lastSelection": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "lastSelection"
																																									}
																																								},
																																								"isVisible": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "selectionMenuVisible"
																																									}
																																								},
																																								"nodes": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "lastSelection.nodes"
																																									}
																																								},
																																								"onClick": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "function",
																																										"id": "handleGroupNode"
																																									}
																																								}
																																							}
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "component",
																																							"name": "reactFlow",
																																							"semanticType": "ReactFlow",
																																							"attrs": {
																																								"nodes": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "nodes"
																																									}
																																								},
																																								"edges": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "edges"
																																									}
																																								},
																																								"onNodesChange": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "function",
																																										"id": "onNodesChangeWithHelperLines"
																																									}
																																								},
																																								"onEdgesChange": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "function",
																																										"id": "onEdgesChange"
																																									}
																																								},
																																								"onConnect": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "function",
																																										"id": "onConnectMod"
																																									}
																																								},
																																								"onInit": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "function",
																																										"id": "setReactFlowInstance"
																																									}
																																								},
																																								"nodeTypes": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "nodeTypes"
																																									}
																																								},
																																								"edgeTypes": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "edgeTypes"
																																									}
																																								},
																																								"className": {
																																									"type": "static",
																																									"content": "theme-attribution"
																																								},
																																								"minZoom": {
																																									"type": "static",
																																									"content": 0.2
																																								},
																																								"maxZoom": {
																																									"type": "static",
																																									"content": 8
																																								},
																																								"zoomOnScroll": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "prop",
																																										"id": "view",
																																										"operator": "!"
																																									}
																																								},
																																								"zoomOnPinch": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "prop",
																																										"id": "view",
																																										"operator": "!"
																																									}
																																								},
																																								"panOnDrag": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "prop",
																																										"id": "view",
																																										"operator": "!"
																																									}
																																								}
																																							},
																																							"children": [
																																								{
																																									"type": "element",
																																									"content": {
																																										"elementType": "component",
																																										"name": "flowBuildingComponent",
																																										"semanticType": "FlowBuildingComponent"
																																									}
																																								},
																																								{
																																									"type": "element",
																																									"content": {
																																										"elementType": "component",
																																										"name": "updateAllComponents",
																																										"semanticType": "UpdateAllComponents"
																																									}
																																								},
																																								{
																																									"type": "element",
																																									"content": {
																																										"elementType": "component",
																																										"name": "memoizedBackground",
																																										"semanticType": "MemoizedBackground"
																																									}
																																								},
																																								{
																																									"type": "conditional",
																																									"content": {
																																										"reference": {
																																											"type": "dynamic",
																																											"content": {
																																												"referenceType": "state",
																																												"id": "helperLineEnabled"
																																											}
																																										},
																																										"value": true,
																																										"node": {
																																											"type": "element",
																																											"content": {
																																												"elementType": "component",
																																												"name": "helperLines",
																																												"semanticType": "HelperLines",
																																												"attrs": {
																																													"helperLines": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "state",
																																															"id": "helperLines"
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "container",
																																							"name": "shadowBox",
																																							"attrs": {
																																								"id": {
																																									"type": "static",
																																									"content": "shadow-box"
																																								}
																																							},
																																							"style": {
																																								"position": {
																																									"type": "static",
																																									"content": "absolute"
																																								},
																																								"width": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "shadowBoxWidth"
																																									}
																																								},
																																								"height": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "shadowBoxHeight"
																																									}
																																								},
																																								"backgroundColor": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "shadowBoxBackgroundColor"
																																									}
																																								},
																																								"opacity": {
																																									"type": "static",
																																									"content": 0.7
																																								},
																																								"pointerEvents": {
																																									"type": "static",
																																									"content": "none"
																																								},
																																								"display": {
																																									"type": "static",
																																									"content": "none"
																																								}
																																							}
																																						}
																																					}
																																				]
																																			}
																																		},
																																		"fallbackNode": {
																																			"type": "element",
																																			"content": {
																																				"elementType": "container",
																																				"name": "loadingContainer",
																																				"attrs": {
																																					"className": {
																																						"type": "static",
																																						"content": "flex h-full w-full items-center justify-center"
																																					}
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "component",
																																							"name": "customLoader",
																																							"semanticType": "CustomLoader",
																																							"attrs": {
																																								"remSize": {
																																									"type": "static",
																																									"content": 30
																																								}
																																							}
																																						}
																																					}
																																				]
																																			}
																																		}
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												}
											]
										}
									},
									{
										"type": "conditional",
										"content": {
											"reference": {
												"type": "dynamic",
												"content": {
													"referenceType": "state",
													"id": "blocker.state"
												}
											},
											"value": "blocked",
											"node": {
												"type": "element",
												"content": {
													"elementType": "container",
													"name": "blockerModalContainer",
													"children": [
														{
															"type": "conditional",
															"content": {
																"reference": {
																	"type": "dynamic",
																	"content": {
																		"referenceType": "state",
																		"id": "isBuilding",
																		"operator": "!"
																	}
																},
																"value": true,
																"node": {
																	"type": "conditional",
																	"content": {
																		"reference": {
																			"type": "dynamic",
																			"content": {
																				"referenceType": "state",
																				"id": "currentSavedFlow"
																			}
																		},
																		"value": true,
																		"node": {
																			"type": "element",
																			"content": {
																				"elementType": "component",
																				"name": "saveChangesModal",
																				"semanticType": "SaveChangesModal",
																				"attrs": {
																					"onSave": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "function",
																							"id": "handleSave"
																						}
																					},
																					"onCancel": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "function",
																							"id": "blocker.reset"
																						}
																					},
																					"onProceed": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "function",
																							"id": "handleExit"
																						}
																					},
																					"flowName": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "state",
																							"id": "currentSavedFlow.name"
																						}
																					},
																					"lastSaved": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "state",
																							"id": "formattedUpdatedAt"
																						}
																					},
																					"autoSave": {
																						"type": "dynamic",
																						"content": {
																							"referenceType": "state",
																							"id": "autoSaving"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												}
											}
										}
									}
								]
							}
						}
					}
				},
				{
					"id": "flow_editor",
					"type": "interface",
					"name": "FlowEditor",
					"description": "Visual flow builder with drag-and-drop components, real-time collaboration, and execution monitoring",
					"route": "/flow/:id",
					"component_path": "src/frontend/src/pages/FlowPage",
					"uidl_definition_physical": {
						"name": "FlowEditor",
						"type": "page",
						"description": "Flow editor with canvas and toolbar",
						"content": {
							"elementType": "container",
							"name": "FlowEditorContainer",
							"attrs": {
								"className": "h-full w-full flex flex-col"
							},
							"children": [
								{
									"elementType": "div",
									"name": "FlowEditorHeader",
									"attrs": {
										"className": "flex items-center justify-between p-4 border-b"
									},
									"children": [
										{
											"elementType": "text",
											"content": "FlowEditor"
										},
										{
											"elementType": "button",
											"attrs": {
												"onClick": "handleRefresh",
												"className": "p-2 hover:bg-muted rounded"
											},
											"children": [
												{
													"elementType": "icon",
													"name": "refresh"
												}
											]
										}
									]
								},
								{
									"elementType": "div",
									"name": "FlowEditorContent",
									"attrs": {
										"className": "flex-1 p-4 overflow-auto"
									},
									"children": [
										{
											"elementType": "text",
											"content": "Flow editor with canvas and toolbar - Content area for FlowEditor"
										}
									]
								}
							]
						},
						"stateDefinitions": {
							"isLoading": {
								"type": "boolean",
								"defaultValue": false
							},
							"data": {
								"type": "array",
								"defaultValue": [

								]
							},
							"selectedItems": {
								"type": "array",
								"defaultValue": [

								]
							}
						},
						"actions": {
							"handleRefresh": {
								"type": "async",
								"handler": "refreshData"
							},
							"handleSubmit": {
								"type": "async",
								"handler": "submitForm"
							}
						}
					}
				},
				{
					"id": "playground_interface",
					"type": "interface",
					"name": "PlaygroundInterface",
					"description": "Interactive chat interface for testing flows with voice mode, file attachments, and session management",
					"route": "/playground/:id",
					"component_path": "src/frontend/src/pages/PlaygroundPage",
					"uidl_definition_physical": {
						"name": "PlaygroundPage",
						"stateDefinitions": {
							"currentSavedFlow": {
								"type": "object",
								"defaultValue": null
							},
							"currentFlowId": {
								"type": "string",
								"defaultValue": ""
							},
							"isLoading": {
								"type": "boolean",
								"defaultValue": false
							},
							"clientId": {
								"type": "string",
								"defaultValue": ""
							},
							"sidebarOpen": {
								"type": "boolean",
								"defaultValue": true
							},
							"visibleSession": {
								"type": "string",
								"defaultValue": ""
							},
							"sessionId": {
								"type": "string",
								"defaultValue": ""
							},
							"selectedViewField": {
								"type": "object",
								"defaultValue": null
							},
							"sessions": {
								"type": "array",
								"defaultValue": [

								]
							},
							"chatValue": {
								"type": "string",
								"defaultValue": ""
							},
							"isBuilding": {
								"type": "boolean",
								"defaultValue": false
							},
							"messages": {
								"type": "array",
								"defaultValue": [

								]
							}
						},
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "playgroundPageRoot",
								"attrs": {
									"className": {
										"type": "static",
										"content": "flex h-full w-full flex-col items-center justify-center align-middle"
									}
								},
								"children": [
									{
										"type": "conditional",
										"content": {
											"reference": {
												"type": "dynamic",
												"content": {
													"referenceType": "state",
													"id": "currentSavedFlow"
												}
											},
											"value": true,
											"node": {
												"type": "element",
												"content": {
													"elementType": "component",
													"name": "playgroundModal",
													"semanticType": "BaseModal",
													"attrs": {
														"open": {
															"type": "static",
															"content": true
														},
														"type": {
															"type": "static",
															"content": "full-screen"
														},
														"size": {
															"type": "static",
															"content": "x-large"
														},
														"className": {
															"type": "static",
															"content": "!rounded-[12px] p-0"
														}
													},
													"children": [
														{
															"type": "element",
															"content": {
																"elementType": "container",
																"name": "modalContent",
																"attrs": {
																	"className": {
																		"type": "static",
																		"content": "flex-max-width h-full"
																	}
																},
																"children": [
																	{
																		"type": "element",
																		"content": {
																			"elementType": "container",
																			"name": "playgroundSidebar",
																			"attrs": {
																				"className": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "computed",
																						"id": "sidebarOpen ? 'absolute z-50 lg:relative lg:w-1/5 lg:max-w-[280px]' : 'w-0'"
																					}
																				}
																			},
																			"children": [
																				{
																					"type": "element",
																					"content": {
																						"elementType": "container",
																						"name": "sidebarInner",
																						"attrs": {
																							"className": {
																								"type": "static",
																								"content": "relative flex h-full flex-col overflow-y-auto border-r border-border bg-muted p-4 text-center custom-scroll dark:bg-canvas pt-[15px]"
																							}
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "sidebarHeader",
																									"attrs": {
																										"className": {
																											"type": "static",
																											"content": "flex items-center justify-between gap-2 pb-8 align-middle"
																										}
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "flowTitleContainer",
																												"attrs": {
																													"className": {
																														"type": "static",
																														"content": "flex items-center gap-2"
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "container",
																															"name": "flowIcon",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "flex rounded p-1"
																																}
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "component",
																																		"name": "workflowIcon",
																																		"semanticType": "IconComponent",
																																		"attrs": {
																																			"name": {
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "state",
																																					"id": "currentSavedFlow.icon"
																																				}
																																			},
																																			"className": {
																																				"type": "static",
																																				"content": "h-3.5 w-3.5"
																																			}
																																		}
																																	}
																																}
																															]
																														}
																													},
																													{
																														"type": "conditional",
																														"content": {
																															"reference": {
																																"type": "dynamic",
																																"content": {
																																	"referenceType": "state",
																																	"id": "sidebarOpen"
																																}
																															},
																															"value": true,
																															"node": {
																																"type": "element",
																																"content": {
																																	"elementType": "text",
																																	"name": "playgroundTitle",
																																	"attrs": {
																																		"className": {
																																			"type": "static",
																																			"content": "truncate font-semibold"
																																		}
																																	},
																																	"children": [
																																		{
																																			"type": "dynamic",
																																			"content": {
																																				"referenceType": "state",
																																				"id": "currentSavedFlow.name"
																																			}
																																		}
																																	]
																																}
																															}
																														}
																													}
																												]
																											}
																										},
																										{
																											"type": "element",
																											"content": {
																												"elementType": "component",
																												"name": "hideSidebarTooltip",
																												"semanticType": "ShadTooltip",
																												"attrs": {
																													"content": {
																														"type": "static",
																														"content": "Hide sidebar"
																													},
																													"side": {
																														"type": "static",
																														"content": "right"
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "button",
																															"name": "toggleSidebarButton",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "flex h-8 w-8 items-center justify-center !p-0"
																																}
																															},
																															"events": {
																																"onClick": [
																																	{
																																		"type": "stateChange",
																																		"modifies": "sidebarOpen",
																																		"newState": {
																																			"type": "dynamic",
																																			"content": {
																																				"referenceType": "state",
																																				"id": "sidebarOpen",
																																				"operator": "!"
																																			}
																																		}
																																	}
																																]
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "component",
																																		"name": "sidebarToggleIcon",
																																		"semanticType": "IconComponent",
																																		"attrs": {
																																			"name": {
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "computed",
																																					"id": "sidebarOpen ? 'PanelLeftClose' : 'PanelLeftOpen'"
																																				}
																																			},
																																			"className": {
																																				"type": "static",
																																				"content": "h-[18px] w-[18px] text-ring"
																																			}
																																		}
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							},
																							{
																								"type": "conditional",
																								"content": {
																									"reference": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "state",
																											"id": "sidebarOpen"
																										}
																									},
																									"value": true,
																									"node": {
																										"type": "element",
																										"content": {
																											"elementType": "component",
																											"name": "sidebarOpenView",
																											"semanticType": "SidebarOpenView",
																											"attrs": {
																												"sessions": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "state",
																														"id": "sessions"
																													}
																												},
																												"visibleSession": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "state",
																														"id": "visibleSession"
																													}
																												},
																												"selectedViewField": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "state",
																														"id": "selectedViewField"
																													}
																												},
																												"playgroundPage": {
																													"type": "static",
																													"content": true
																												}
																											}
																										}
																									}
																								}
																							},
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "publishOptionsFooter",
																									"attrs": {
																										"className": {
																											"type": "static",
																											"content": "absolute bottom-2 left-0 flex w-full flex-col gap-8 border-t border-border px-2 py-4 transition-all"
																										}
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "themeSelector",
																												"attrs": {
																													"className": {
																														"type": "static",
																														"content": "flex items-center justify-between px-2"
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "text",
																															"name": "themeLabel",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "text-sm"
																																}
																															},
																															"children": [
																																{
																																	"type": "static",
																																	"content": "Theme"
																																}
																															]
																														}
																													},
																													{
																														"type": "element",
																														"content": {
																															"elementType": "component",
																															"name": "themeButtons",
																															"semanticType": "ThemeButtons"
																														}
																													}
																												]
																											}
																										},
																										{
																											"type": "element",
																											"content": {
																												"elementType": "button",
																												"name": "builtWithLangflowButton",
																												"attrs": {
																													"className": {
																														"type": "static",
																														"content": "w-full !rounded-xl shadow-lg"
																													}
																												},
																												"events": {
																													"onClick": [
																														{
																															"type": "action",
																															"calls": "openLangflowPage"
																														}
																													]
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "component",
																															"name": "langflowLogo",
																															"semanticType": "LangflowLogoColor"
																														}
																													},
																													{
																														"type": "element",
																														"content": {
																															"elementType": "text",
																															"name": "builtWithLabel",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "text-sm"
																																}
																															},
																															"children": [
																																{
																																	"type": "static",
																																	"content": "Built with Langflow"
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"type": "element",
																		"content": {
																			"elementType": "container",
																			"name": "mainPlaygroundArea",
																			"attrs": {
																				"className": {
																					"type": "static",
																					"content": "flex h-full min-w-96 flex-grow bg-background"
																				}
																			},
																			"children": [
																				{
																					"type": "conditional",
																					"content": {
																						"reference": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "state",
																								"id": "selectedViewField"
																							}
																						},
																						"value": true,
																						"node": {
																							"type": "element",
																							"content": {
																								"elementType": "component",
																								"name": "selectedViewField",
																								"semanticType": "SelectedViewField",
																								"attrs": {
																									"selectedViewField": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "state",
																											"id": "selectedViewField"
																										}
																									},
																									"haveChat": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "computed",
																											"id": "hasChat"
																										}
																									},
																									"sessions": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "state",
																											"id": "sessions"
																										}
																									},
																									"currentFlowId": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "state",
																											"id": "currentFlowId"
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				{
																					"type": "element",
																					"content": {
																						"elementType": "component",
																						"name": "chatViewWrapper",
																						"semanticType": "ChatViewWrapper",
																						"attrs": {
																							"playgroundPage": {
																								"type": "static",
																								"content": true
																							},
																							"selectedViewField": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "selectedViewField"
																								}
																							},
																							"visibleSession": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "visibleSession"
																								}
																							},
																							"sessions": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "sessions"
																								}
																							},
																							"sidebarOpen": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "sidebarOpen"
																								}
																							},
																							"currentFlowId": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "currentFlowId"
																								}
																							},
																							"isPlayground": {
																								"type": "static",
																								"content": true
																							},
																							"haveChat": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "computed",
																									"id": "hasChat"
																								}
																							},
																							"sessionId": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "sessionId"
																								}
																							},
																							"playgroundTitle": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "currentSavedFlow.name"
																								}
																							}
																						}
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										}
									}
								]
							}
						}
					}
				},
				{
					"id": "component_sidebar",
					"type": "interface",
					"name": "ComponentSidebar",
					"description": "Collapsible sidebar with component library, search, and drag-to-canvas functionality",
					"component_path": "src/frontend/src/components/SidebarComponent",
					"uidl_definition_physical": {
						"name": "SidebarComponent",
						"propDefinitions": {
							"defaultOpen": {
								"type": "boolean",
								"defaultValue": true
							},
							"open": {
								"type": "boolean",
								"defaultValue": null
							},
							"width": {
								"type": "string",
								"defaultValue": "19rem"
							},
							"side": {
								"type": "string",
								"defaultValue": "left"
							},
							"variant": {
								"type": "string",
								"defaultValue": "sidebar"
							},
							"collapsible": {
								"type": "string",
								"defaultValue": "offcanvas"
							}
						},
						"stateDefinitions": {
							"sidebarOpen": {
								"type": "boolean",
								"defaultValue": true
							},
							"sidebarState": {
								"type": "string",
								"defaultValue": "expanded"
							},
							"isMobile": {
								"type": "boolean",
								"defaultValue": false
							}
						},
						"node": {
							"type": "element",
							"content": {
								"elementType": "component",
								"name": "sidebarProvider",
								"semanticType": "SidebarProvider",
								"attrs": {
									"className": {
										"type": "static",
										"content": "group/sidebar-wrapper flex h-full w-full text-foreground has-[[data-variant=inset]]:bg-background"
									},
									"data-open": {
										"type": "dynamic",
										"content": {
											"referenceType": "state",
											"id": "sidebarOpen"
										}
									}
								},
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "component",
											"name": "tooltipProvider",
											"semanticType": "TooltipProvider",
											"attrs": {
												"delayDuration": {
													"type": "static",
													"content": 0
												}
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "component",
														"name": "mainSidebar",
														"semanticType": "Sidebar",
														"attrs": {
															"data-state": {
																"type": "dynamic",
																"content": {
																	"referenceType": "state",
																	"id": "sidebarState"
																}
															},
															"data-collapsible": {
																"type": "dynamic",
																"content": {
																	"referenceType": "prop",
																	"id": "collapsible"
																}
															},
															"data-variant": {
																"type": "dynamic",
																"content": {
																	"referenceType": "prop",
																	"id": "variant"
																}
															},
															"data-side": {
																"type": "dynamic",
																"content": {
																	"referenceType": "prop",
																	"id": "side"
																}
															},
															"className": {
																"type": "static",
																"content": "group peer relative block h-full flex-col"
															}
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "sidebarSpacing",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "relative h-full w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear group-data-[collapsible=offcanvas]:w-0 group-data-[side=right]:rotate-180"
																		}
																	}
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "sidebarContainer",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "absolute inset-y-0 z-50 flex h-full transition-[left,right,width] duration-200 ease-linear w-[--sidebar-width] max-sm:group-data-[state=collapsed]:w-[--sidebar-width-icon]"
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "container",
																				"name": "sidebarInner",
																				"attrs": {
																					"data-sidebar": {
																						"type": "static",
																						"content": "sidebar"
																					},
																					"className": {
																						"type": "static",
																						"content": "flex h-full w-full flex-col bg-background group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-border group-data-[variant=floating]:shadow max-sm:shadow-lg"
																					}
																				},
																				"children": [
																					{
																						"type": "element",
																						"content": {
																							"elementType": "component",
																							"name": "sidebarHeader",
																							"semanticType": "SidebarHeader",
																							"attrs": {
																								"data-sidebar": {
																									"type": "static",
																									"content": "header"
																								},
																								"className": {
																									"type": "static",
																									"content": "flex flex-col gap-2 p-2"
																								}
																							},
																							"children": [
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "sidebarInput",
																										"semanticType": "SidebarInput",
																										"attrs": {
																											"data-sidebar": {
																												"type": "static",
																												"content": "input"
																											},
																											"placeholder": {
																												"type": "static",
																												"content": "Search..."
																											},
																											"className": {
																												"type": "static",
																												"content": "h-8 w-full bg-background shadow-none focus-visible:ring-1 focus-visible:ring-ring"
																											}
																										}
																									}
																								}
																							]
																						}
																					},
																					{
																						"type": "element",
																						"content": {
																							"elementType": "component",
																							"name": "sidebarContent",
																							"semanticType": "SidebarContent",
																							"attrs": {
																								"data-sidebar": {
																									"type": "static",
																									"content": "content"
																								},
																								"className": {
																									"type": "static",
																									"content": "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden"
																								}
																							},
																							"children": [
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "sidebarGroup",
																										"semanticType": "SidebarGroup",
																										"attrs": {
																											"data-sidebar": {
																												"type": "static",
																												"content": "group"
																											},
																											"className": {
																												"type": "static",
																												"content": "relative flex w-full min-w-0 flex-col p-2"
																											}
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "sidebarGroupLabel",
																													"semanticType": "SidebarGroupLabel",
																													"attrs": {
																														"data-sidebar": {
																															"type": "static",
																															"content": "group-label"
																														},
																														"className": {
																															"type": "static",
																															"content": "flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-semibold text-foreground/70 outline-none ring-ring transition-[margin,opa] duration-200 ease-linear focus-visible:ring-1"
																														}
																													},
																													"children": [
																														{
																															"type": "static",
																															"content": "Navigation"
																														}
																													]
																												}
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "sidebarGroupContent",
																													"semanticType": "SidebarGroupContent",
																													"attrs": {
																														"data-sidebar": {
																															"type": "static",
																															"content": "group-content"
																														},
																														"className": {
																															"type": "static",
																															"content": "w-full text-sm"
																														}
																													},
																													"children": [
																														{
																															"type": "element",
																															"content": {
																																"elementType": "component",
																																"name": "sidebarMenu",
																																"semanticType": "SidebarMenu",
																																"attrs": {
																																	"data-sidebar": {
																																		"type": "static",
																																		"content": "menu"
																																	},
																																	"className": {
																																		"type": "static",
																																		"content": "flex w-full min-w-0 flex-col gap-1"
																																	}
																																},
																																"children": [
																																	{
																																		"type": "repeat",
																																		"content": {
																																			"iteratorName": "menuItem",
																																			"dataSource": {
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "state",
																																					"id": "menuItems"
																																				}
																																			},
																																			"node": {
																																				"type": "element",
																																				"content": {
																																					"elementType": "component",
																																					"name": "sidebarMenuItem",
																																					"semanticType": "SidebarMenuItem",
																																					"attrs": {
																																						"data-sidebar": {
																																							"type": "static",
																																							"content": "menu-item"
																																						},
																																						"className": {
																																							"type": "static",
																																							"content": "group/menu-item relative"
																																						}
																																					},
																																					"children": [
																																						{
																																							"type": "element",
																																							"content": {
																																								"elementType": "component",
																																								"name": "sidebarMenuButton",
																																								"semanticType": "SidebarMenuButton",
																																								"attrs": {
																																									"data-sidebar": {
																																										"type": "static",
																																										"content": "menu-button"
																																									},
																																									"data-active": {
																																										"type": "dynamic",
																																										"content": {
																																											"referenceType": "local",
																																											"id": "menuItem.isActive"
																																										}
																																									},
																																									"className": {
																																										"type": "static",
																																										"content": "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-ring transition-[width,height,padding] hover:bg-accent hover:text-accent-foreground focus-visible:ring-1"
																																									},
																																									"tooltip": {
																																										"type": "dynamic",
																																										"content": {
																																											"referenceType": "local",
																																											"id": "menuItem.tooltip"
																																										}
																																									}
																																								},
																																								"events": {
																																									"onClick": [
																																										{
																																											"type": "action",
																																											"calls": "handleMenuItemClick"
																																										}
																																									]
																																								},
																																								"children": [
																																									{
																																										"type": "element",
																																										"content": {
																																											"elementType": "component",
																																											"name": "menuItemIcon",
																																											"semanticType": "IconComponent",
																																											"attrs": {
																																												"name": {
																																													"type": "dynamic",
																																													"content": {
																																														"referenceType": "local",
																																														"id": "menuItem.icon"
																																													}
																																												},
																																												"className": {
																																													"type": "static",
																																													"content": "size-4 shrink-0"
																																												}
																																											}
																																										}
																																									},
																																									{
																																										"type": "element",
																																										"content": {
																																											"elementType": "text",
																																											"name": "menuItemLabel",
																																											"semanticType": "span",
																																											"attrs": {
																																												"className": {
																																													"type": "static",
																																													"content": "truncate"
																																												}
																																											},
																																											"children": [
																																												{
																																													"type": "dynamic",
																																													"content": {
																																														"referenceType": "local",
																																														"id": "menuItem.label"
																																													}
																																												}
																																											]
																																										}
																																									}
																																								]
																																							}
																																						},
																																						{
																																							"type": "conditional",
																																							"content": {
																																								"reference": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "local",
																																										"id": "menuItem.badge"
																																									}
																																								},
																																								"value": true,
																																								"node": {
																																									"type": "element",
																																									"content": {
																																										"elementType": "component",
																																										"name": "sidebarMenuBadge",
																																										"semanticType": "SidebarMenuBadge",
																																										"attrs": {
																																											"data-sidebar": {
																																												"type": "static",
																																												"content": "menu-badge"
																																											},
																																											"className": {
																																												"type": "static",
																																												"content": "pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-foreground"
																																											}
																																										},
																																										"children": [
																																											{
																																												"type": "dynamic",
																																												"content": {
																																													"referenceType": "local",
																																													"id": "menuItem.badge"
																																												}
																																											}
																																										]
																																									}
																																								}
																																							}
																																						},
																																						{
																																							"type": "conditional",
																																							"content": {
																																								"reference": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "local",
																																										"id": "menuItem.hasAction"
																																									}
																																								},
																																								"value": true,
																																								"node": {
																																									"type": "element",
																																									"content": {
																																										"elementType": "component",
																																										"name": "sidebarMenuAction",
																																										"semanticType": "SidebarMenuAction",
																																										"attrs": {
																																											"data-sidebar": {
																																												"type": "static",
																																												"content": "menu-action"
																																											},
																																											"className": {
																																												"type": "static",
																																												"content": "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-foreground outline-none ring-ring transition-transform hover:bg-accent hover:text-accent-foreground focus-visible:ring-1"
																																											},
																																											"showOnHover": {
																																												"type": "static",
																																												"content": true
																																											}
																																										},
																																										"events": {
																																											"onClick": [
																																												{
																																													"type": "action",
																																													"calls": "handleMenuAction"
																																												}
																																											]
																																										},
																																										"children": [
																																											{
																																												"type": "element",
																																												"content": {
																																													"elementType": "component",
																																													"name": "actionIcon",
																																													"semanticType": "IconComponent",
																																													"attrs": {
																																														"name": {
																																															"type": "dynamic",
																																															"content": {
																																																"referenceType": "local",
																																																"id": "menuItem.actionIcon"
																																															}
																																														},
																																														"className": {
																																															"type": "static",
																																															"content": "size-4 shrink-0"
																																														}
																																													}
																																												}
																																											}
																																										]
																																									}
																																								}
																																							}
																																						},
																																						{
																																							"type": "conditional",
																																							"content": {
																																								"reference": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "local",
																																										"id": "menuItem.subItems"
																																									}
																																								},
																																								"value": true,
																																								"node": {
																																									"type": "element",
																																									"content": {
																																										"elementType": "component",
																																										"name": "sidebarMenuSub",
																																										"semanticType": "SidebarMenuSub",
																																										"attrs": {
																																											"data-sidebar": {
																																												"type": "static",
																																												"content": "menu-sub"
																																											},
																																											"className": {
																																												"type": "static",
																																												"content": "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-border px-2.5 py-0.5"
																																											}
																																										},
																																										"children": [
																																											{
																																												"type": "repeat",
																																												"content": {
																																													"iteratorName": "subItem",
																																													"dataSource": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "local",
																																															"id": "menuItem.subItems"
																																														}
																																													},
																																													"node": {
																																														"type": "element",
																																														"content": {
																																															"elementType": "component",
																																															"name": "sidebarMenuSubItem",
																																															"semanticType": "SidebarMenuSubItem",
																																															"children": [
																																																{
																																																	"type": "element",
																																																	"content": {
																																																		"elementType": "component",
																																																		"name": "sidebarMenuSubButton",
																																																		"semanticType": "SidebarMenuSubButton",
																																																		"attrs": {
																																																			"data-sidebar": {
																																																				"type": "static",
																																																				"content": "menu-sub-button"
																																																			},
																																																			"data-active": {
																																																				"type": "dynamic",
																																																				"content": {
																																																					"referenceType": "local",
																																																					"id": "subItem.isActive"
																																																				}
																																																			},
																																																			"className": {
																																																				"type": "static",
																																																				"content": "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-foreground outline-none ring-ring hover:bg-accent hover:text-accent-foreground focus-visible:ring-1"
																																																			}
																																																		},
																																																		"events": {
																																																			"onClick": [
																																																				{
																																																					"type": "action",
																																																					"calls": "handleSubItemClick"
																																																				}
																																																			]
																																																		},
																																																		"children": [
																																																			{
																																																				"type": "element",
																																																				"content": {
																																																					"elementType": "component",
																																																					"name": "subItemIcon",
																																																					"semanticType": "IconComponent",
																																																					"attrs": {
																																																						"name": {
																																																							"type": "dynamic",
																																																							"content": {
																																																								"referenceType": "local",
																																																								"id": "subItem.icon"
																																																							}
																																																						},
																																																						"className": {
																																																							"type": "static",
																																																							"content": "size-4 shrink-0"
																																																						}
																																																					}
																																																				}
																																																			},
																																																			{
																																																				"type": "element",
																																																				"content": {
																																																					"elementType": "text",
																																																					"name": "subItemLabel",
																																																					"semanticType": "span",
																																																					"attrs": {
																																																						"className": {
																																																							"type": "static",
																																																							"content": "truncate"
																																																						}
																																																					},
																																																					"children": [
																																																						{
																																																							"type": "dynamic",
																																																							"content": {
																																																								"referenceType": "local",
																																																								"id": "subItem.label"
																																																							}
																																																						}
																																																					]
																																																				}
																																																			}
																																																		]
																																																	}
																																																}
																																															]
																																														}
																																													}
																																												}
																																											}
																																										]
																																									}
																																								}
																																							}
																																						}
																																					]
																																				}
																																			}
																																		}
																																	}
																																]
																															}
																														}
																													]
																												}
																											}
																										]
																									}
																								},
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "sidebarSeparator",
																										"semanticType": "SidebarSeparator",
																										"attrs": {
																											"data-sidebar": {
																												"type": "static",
																												"content": "separator"
																											},
																											"className": {
																												"type": "static",
																												"content": "mx-2 w-auto bg-border"
																											}
																										}
																									}
																								}
																							]
																						}
																					},
																					{
																						"type": "element",
																						"content": {
																							"elementType": "component",
																							"name": "sidebarFooter",
																							"semanticType": "SidebarFooter",
																							"attrs": {
																								"data-sidebar": {
																									"type": "static",
																									"content": "footer"
																								},
																								"className": {
																									"type": "static",
																									"content": "flex flex-col gap-2 p-2"
																								}
																							},
																							"children": [
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "userProfileButton",
																										"semanticType": "SidebarMenuButton",
																										"attrs": {
																											"size": {
																												"type": "static",
																												"content": "lg"
																											},
																											"className": {
																												"type": "static",
																												"content": "h-12 text-sm group-data-[collapsible=icon]:!p-0"
																											}
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "userAvatar",
																													"semanticType": "Avatar",
																													"attrs": {
																														"className": {
																															"type": "static",
																															"content": "h-8 w-8 rounded-lg"
																														}
																													}
																												}
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "container",
																													"name": "userInfo",
																													"attrs": {
																														"className": {
																															"type": "static",
																															"content": "grid flex-1 text-left text-sm leading-tight"
																														}
																													},
																													"children": [
																														{
																															"type": "element",
																															"content": {
																																"elementType": "text",
																																"name": "userName",
																																"semanticType": "span",
																																"attrs": {
																																	"className": {
																																		"type": "static",
																																		"content": "truncate font-semibold"
																																	}
																																},
																																"children": [
																																	{
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "state",
																																			"id": "currentUser.name"
																																		}
																																	}
																																]
																															}
																														},
																														{
																															"type": "element",
																															"content": {
																																"elementType": "text",
																																"name": "userEmail",
																																"semanticType": "span",
																																"attrs": {
																																	"className": {
																																		"type": "static",
																																		"content": "truncate text-xs"
																																	}
																																},
																																"children": [
																																	{
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "state",
																																			"id": "currentUser.email"
																																		}
																																	}
																																]
																															}
																														}
																													]
																												}
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "chevronUpIcon",
																													"semanticType": "IconComponent",
																													"attrs": {
																														"name": {
																															"type": "static",
																															"content": "ChevronsUpDown"
																														},
																														"className": {
																															"type": "static",
																															"content": "ml-auto size-4"
																														}
																													}
																												}
																											}
																										]
																									}
																								}
																							]
																						}
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "component",
																	"name": "sidebarRail",
																	"semanticType": "SidebarRail",
																	"attrs": {
																		"data-sidebar": {
																			"type": "static",
																			"content": "rail"
																		},
																		"aria-label": {
																			"type": "static",
																			"content": "Toggle Sidebar"
																		},
																		"title": {
																			"type": "static",
																			"content": "Toggle Sidebar"
																		},
																		"className": {
																			"type": "static",
																			"content": "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-border sm:flex"
																		}
																	},
																	"events": {
																		"onClick": [
																			{
																				"type": "stateChange",
																				"modifies": "sidebarOpen",
																				"newState": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "sidebarOpen",
																						"operator": "!"
																					}
																				}
																			}
																		]
																	}
																}
															}
														]
													}
												},
												{
													"type": "element",
													"content": {
														"elementType": "component",
														"name": "sidebarTrigger",
														"semanticType": "SidebarTrigger",
														"attrs": {
															"data-sidebar": {
																"type": "static",
																"content": "trigger"
															},
															"variant": {
																"type": "static",
																"content": "ghost"
															},
															"size": {
																"type": "static",
																"content": "icon"
															},
															"className": {
																"type": "static",
																"content": "h-7 w-7 text-muted-foreground"
															}
														},
														"events": {
															"onClick": [
																{
																	"type": "stateChange",
																	"modifies": "sidebarOpen",
																	"newState": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "sidebarOpen",
																			"operator": "!"
																		}
																	}
																}
															]
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "component",
																	"name": "langflowLogo",
																	"semanticType": "LangflowLogo",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "h-4 w-4"
																		}
																	}
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "text",
																	"name": "toggleSidebarLabel",
																	"semanticType": "span",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "sr-only"
																		}
																	},
																	"children": [
																		{
																			"type": "static",
																			"content": "Toggle Sidebar"
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									}
								]
							}
						}
					}
				},
				{
					"id": "flow_toolbar",
					"type": "interface",
					"name": "FlowToolbar",
					"description": "Action toolbar with save, build, run, share, and settings controls",
					"component_path": "src/frontend/src/components/FlowToolbarComponent",
					"uidl_definition_physical": {
						"name": "FlowToolbarComponent",
						"stateDefinitions": {
							"open": {
								"type": "boolean",
								"defaultValue": false
							},
							"openCodeModal": {
								"type": "boolean",
								"defaultValue": false
							},
							"openShareModal": {
								"type": "boolean",
								"defaultValue": false
							},
							"hasIO": {
								"type": "boolean",
								"defaultValue": false
							},
							"currentFlow": {
								"type": "object",
								"defaultValue": null
							},
							"isPublished": {
								"type": "boolean",
								"defaultValue": false
							},
							"openApiModal": {
								"type": "boolean",
								"defaultValue": false
							},
							"openExportModal": {
								"type": "boolean",
								"defaultValue": false
							},
							"openEmbedModal": {
								"type": "boolean",
								"defaultValue": false
							}
						},
						"node": {
							"type": "element",
							"content": {
								"elementType": "component",
								"name": "flowToolbarPanel",
								"semanticType": "Panel",
								"attrs": {
									"className": {
										"type": "static",
										"content": "!top-auto !m-2"
									},
									"position": {
										"type": "static",
										"content": "top-right"
									}
								},
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "toolbarContainer",
											"attrs": {
												"className": {
													"type": "static",
													"content": "hover:shadow-round-btn-shadow flex h-11 items-center justify-center gap-7 rounded-md border bg-background px-1.5 shadow transition-all"
												}
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "component",
														"name": "flowToolbarOptions",
														"semanticType": "FlowToolbarOptions",
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "toolbarOptionsContainer",
																	"attrs": {
																		"className": {
																			"type": "static",
																			"content": "flex items-center gap-1.5"
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "container",
																				"name": "playgroundButtonContainer",
																				"attrs": {
																					"className": {
																						"type": "static",
																						"content": "flex h-full w-full gap-1.5 rounded-sm transition-all"
																					}
																				},
																				"children": [
																					{
																						"type": "conditional",
																						"content": {
																							"reference": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "state",
																									"id": "hasIO"
																								}
																							},
																							"value": true,
																							"node": {
																								"type": "element",
																								"content": {
																									"elementType": "component",
																									"name": "playgroundModal",
																									"semanticType": "CustomIOModal",
																									"attrs": {
																										"open": {
																											"type": "dynamic",
																											"content": {
																												"referenceType": "state",
																												"id": "open"
																											}
																										},
																										"disable": {
																											"type": "dynamic",
																											"content": {
																												"referenceType": "state",
																												"id": "hasIO",
																												"operator": "!"
																											}
																										},
																										"canvasOpen": {
																											"type": "static",
																											"content": true
																										}
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "activePlaygroundButton",
																												"attrs": {
																													"data-testid": {
																														"type": "static",
																														"content": "playground-btn-flow-io"
																													},
																													"className": {
																														"type": "static",
																														"content": "playground-btn-flow-toolbar hover:bg-accent"
																													}
																												},
																												"events": {
																													"onClick": [
																														{
																															"type": "stateChange",
																															"modifies": "open",
																															"newState": {
																																"type": "dynamic",
																																"content": {
																																	"referenceType": "state",
																																	"id": "open",
																																	"operator": "!"
																																}
																															}
																														}
																													]
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "component",
																															"name": "playIcon",
																															"semanticType": "IconComponent",
																															"attrs": {
																																"name": {
																																	"type": "static",
																																	"content": "Play"
																																},
																																"className": {
																																	"type": "static",
																																	"content": "h-4 w-4 transition-all"
																																},
																																"strokeWidth": {
																																	"type": "dynamic",
																																	"content": {
																																		"referenceType": "computed",
																																		"id": "ENABLE_PUBLISH ? 2 : 1.5"
																																	}
																																}
																															}
																														}
																													},
																													{
																														"type": "element",
																														"content": {
																															"elementType": "text",
																															"name": "playgroundButtonLabel",
																															"semanticType": "span",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "hidden md:block"
																																}
																															},
																															"children": [
																																{
																																	"type": "dynamic",
																																	"content": {
																																		"referenceType": "constant",
																																		"id": "PLAYGROUND_BUTTON_NAME"
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							},
																							"fallbackNode": {
																								"type": "element",
																								"content": {
																									"elementType": "component",
																									"name": "disabledPlaygroundTooltip",
																									"semanticType": "ShadTooltip",
																									"attrs": {
																										"content": {
																											"type": "static",
																											"content": "Add a Chat Input or Chat Output to use the playground"
																										}
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "disabledPlaygroundWrapper",
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "container",
																															"name": "disabledPlaygroundButton",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "playground-btn-flow-toolbar cursor-not-allowed text-muted-foreground duration-150"
																																},
																																"data-testid": {
																																	"type": "static",
																																	"content": "playground-btn-flow"
																																}
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "component",
																																		"name": "disabledPlayIcon",
																																		"semanticType": "IconComponent",
																																		"attrs": {
																																			"name": {
																																				"type": "static",
																																				"content": "Play"
																																			},
																																			"className": {
																																				"type": "static",
																																				"content": "h-4 w-4 transition-all"
																																			}
																																		}
																																	}
																																},
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "text",
																																		"name": "disabledPlaygroundLabel",
																																		"semanticType": "span",
																																		"attrs": {
																																			"className": {
																																				"type": "static",
																																				"content": "hidden md:block"
																																			}
																																		},
																																		"children": [
																																			{
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "constant",
																																					"id": "PLAYGROUND_BUTTON_NAME"
																																				}
																																			}
																																		]
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							}
																						}
																					}
																				]
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "component",
																				"name": "publishDropdown",
																				"semanticType": "DropdownMenu",
																				"children": [
																					{
																						"type": "element",
																						"content": {
																							"elementType": "component",
																							"name": "publishDropdownTrigger",
																							"semanticType": "DropdownMenuTrigger",
																							"children": [
																								{
																									"type": "element",
																									"content": {
																										"elementType": "button",
																										"name": "shareButton",
																										"attrs": {
																											"variant": {
																												"type": "static",
																												"content": "ghost"
																											},
																											"size": {
																												"type": "static",
																												"content": "md"
																											},
																											"className": {
																												"type": "static",
																												"content": "!px-2.5 font-normal"
																											},
																											"data-testid": {
																												"type": "static",
																												"content": "publish-button"
																											}
																										},
																										"children": [
																											{
																												"type": "static",
																												"content": "Share"
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "chevronDownIcon",
																													"semanticType": "IconComponent",
																													"attrs": {
																														"name": {
																															"type": "static",
																															"content": "ChevronDown"
																														},
																														"className": {
																															"type": "static",
																															"content": "!h-5 !w-5"
																														}
																													}
																												}
																											}
																										]
																									}
																								}
																							]
																						}
																					},
																					{
																						"type": "element",
																						"content": {
																							"elementType": "component",
																							"name": "publishDropdownContent",
																							"semanticType": "DropdownMenuContent",
																							"attrs": {
																								"forceMount": {
																									"type": "static",
																									"content": true
																								},
																								"sideOffset": {
																									"type": "static",
																									"content": 7
																								},
																								"alignOffset": {
																									"type": "static",
																									"content": -2
																								},
																								"align": {
																									"type": "static",
																									"content": "end"
																								},
																								"className": {
																									"type": "static",
																									"content": "w-full min-w-[275px]"
																								}
																							},
																							"children": [
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "apiAccessMenuItem",
																										"semanticType": "DropdownMenuItem",
																										"attrs": {
																											"className": {
																												"type": "static",
																												"content": "deploy-dropdown-item group"
																											},
																											"data-testid": {
																												"type": "static",
																												"content": "api-access-item"
																											}
																										},
																										"events": {
																											"onClick": [
																												{
																													"type": "stateChange",
																													"modifies": "openApiModal",
																													"newState": {
																														"type": "static",
																														"content": true
																													}
																												}
																											]
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "apiAccessIcon",
																													"semanticType": "IconComponent",
																													"attrs": {
																														"name": {
																															"type": "static",
																															"content": "Code2"
																														},
																														"className": {
																															"type": "static",
																															"content": "icon-size mr-2"
																														}
																													}
																												}
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "text",
																													"name": "apiAccessLabel",
																													"semanticType": "span",
																													"children": [
																														{
																															"type": "static",
																															"content": "API access"
																														}
																													]
																												}
																											}
																										]
																									}
																								},
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "exportMenuItem",
																										"semanticType": "DropdownMenuItem",
																										"attrs": {
																											"className": {
																												"type": "static",
																												"content": "deploy-dropdown-item group"
																											}
																										},
																										"events": {
																											"onClick": [
																												{
																													"type": "stateChange",
																													"modifies": "openExportModal",
																													"newState": {
																														"type": "static",
																														"content": true
																													}
																												}
																											]
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "exportIcon",
																													"semanticType": "IconComponent",
																													"attrs": {
																														"name": {
																															"type": "static",
																															"content": "Download"
																														},
																														"className": {
																															"type": "static",
																															"content": "icon-size mr-2"
																														}
																													}
																												}
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "text",
																													"name": "exportLabel",
																													"semanticType": "span",
																													"children": [
																														{
																															"type": "static",
																															"content": "Export"
																														}
																													]
																												}
																											}
																										]
																									}
																								},
																								{
																									"type": "element",
																									"content": {
																										"elementType": "component",
																										"name": "mcpServerLink",
																										"semanticType": "CustomLink",
																										"attrs": {
																											"className": {
																												"type": "static",
																												"content": "flex-1"
																											},
																											"to": {
																												"type": "dynamic",
																												"content": {
																													"referenceType": "computed",
																													"id": "`/mcp/folder/${folderId}`"
																												}
																											},
																											"target": {
																												"type": "dynamic",
																												"content": {
																													"referenceType": "function",
																													"id": "customMcpOpen"
																												}
																											}
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "component",
																													"name": "mcpServerMenuItem",
																													"semanticType": "DropdownMenuItem",
																													"attrs": {
																														"className": {
																															"type": "static",
																															"content": "deploy-dropdown-item group"
																														},
																														"data-testid": {
																															"type": "static",
																															"content": "mcp-server-item"
																														}
																													},
																													"children": [
																														{
																															"type": "element",
																															"content": {
																																"elementType": "component",
																																"name": "mcpServerIcon",
																																"semanticType": "IconComponent",
																																"attrs": {
																																	"name": {
																																		"type": "static",
																																		"content": "Mcp"
																																	},
																																	"className": {
																																		"type": "static",
																																		"content": "icon-size mr-2"
																																	}
																																}
																															}
																														},
																														{
																															"type": "element",
																															"content": {
																																"elementType": "text",
																																"name": "mcpServerLabel",
																																"semanticType": "span",
																																"children": [
																																	{
																																		"type": "static",
																																		"content": "MCP Server"
																																	}
																																]
																															}
																														},
																														{
																															"type": "element",
																															"content": {
																																"elementType": "component",
																																"name": "externalLinkIcon",
																																"semanticType": "IconComponent",
																																"attrs": {
																																	"name": {
																																		"type": "static",
																																		"content": "ExternalLink"
																																	},
																																	"className": {
																																		"type": "static",
																																		"content": "icon-size ml-auto hidden group-hover:block"
																																	}
																																}
																															}
																														}
																													]
																												}
																											}
																										]
																									}
																								},
																								{
																									"type": "conditional",
																									"content": {
																										"reference": {
																											"type": "dynamic",
																											"content": {
																												"referenceType": "constant",
																												"id": "ENABLE_WIDGET"
																											}
																										},
																										"value": true,
																										"node": {
																											"type": "element",
																											"content": {
																												"elementType": "component",
																												"name": "embedMenuItem",
																												"semanticType": "DropdownMenuItem",
																												"attrs": {
																													"className": {
																														"type": "static",
																														"content": "deploy-dropdown-item group"
																													}
																												},
																												"events": {
																													"onClick": [
																														{
																															"type": "stateChange",
																															"modifies": "openEmbedModal",
																															"newState": {
																																"type": "static",
																																"content": true
																															}
																														}
																													]
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "component",
																															"name": "embedIcon",
																															"semanticType": "IconComponent",
																															"attrs": {
																																"name": {
																																	"type": "static",
																																	"content": "Columns2"
																																},
																																"className": {
																																	"type": "static",
																																	"content": "icon-size mr-2"
																																}
																															}
																														}
																													},
																													{
																														"type": "element",
																														"content": {
																															"elementType": "text",
																															"name": "embedLabel",
																															"semanticType": "span",
																															"children": [
																																{
																																	"type": "static",
																																	"content": "Embed into site"
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									}
																								},
																								{
																									"type": "conditional",
																									"content": {
																										"reference": {
																											"type": "dynamic",
																											"content": {
																												"referenceType": "constant",
																												"id": "ENABLE_PUBLISH"
																											}
																										},
																										"value": true,
																										"node": {
																											"type": "element",
																											"content": {
																												"elementType": "component",
																												"name": "shareablePlaygroundMenuItem",
																												"semanticType": "DropdownMenuItem",
																												"attrs": {
																													"className": {
																														"type": "static",
																														"content": "deploy-dropdown-item group"
																													},
																													"disabled": {
																														"type": "dynamic",
																														"content": {
																															"referenceType": "state",
																															"id": "hasIO",
																															"operator": "!"
																														}
																													},
																													"data-testid": {
																														"type": "static",
																														"content": "shareable-playground"
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "container",
																															"name": "shareablePlaygroundContent",
																															"attrs": {
																																"className": {
																																	"type": "static",
																																	"content": "flex w-full items-center justify-between"
																																}
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "container",
																																		"name": "shareablePlaygroundInfo",
																																		"attrs": {
																																			"className": {
																																				"type": "static",
																																				"content": "flex items-center"
																																			}
																																		},
																																		"children": [
																																			{
																																				"type": "element",
																																				"content": {
																																					"elementType": "component",
																																					"name": "shareablePlaygroundTooltip",
																																					"semanticType": "ShadTooltipComponent",
																																					"attrs": {
																																						"styleClasses": {
																																							"type": "static",
																																							"content": "truncate"
																																						},
																																						"side": {
																																							"type": "static",
																																							"content": "left"
																																						},
																																						"content": {
																																							"type": "dynamic",
																																							"content": {
																																								"referenceType": "computed",
																																								"id": "hasIO ? (isPublished ? encodeURI(`${domain}/playground/${flowId}`) : 'Activate to share a public version of this Playground') : 'Add a Chat Input or Chat Output to access your flow'"
																																							}
																																						}
																																					},
																																					"children": [
																																						{
																																							"type": "element",
																																							"content": {
																																								"elementType": "container",
																																								"name": "shareablePlaygroundIconContainer",
																																								"attrs": {
																																									"className": {
																																										"type": "static",
																																										"content": "flex items-center"
																																									}
																																								},
																																								"children": [
																																									{
																																										"type": "element",
																																										"content": {
																																											"elementType": "component",
																																											"name": "globeIcon",
																																											"semanticType": "IconComponent",
																																											"attrs": {
																																												"name": {
																																													"type": "static",
																																													"content": "Globe"
																																												},
																																												"className": {
																																													"type": "dynamic",
																																													"content": {
																																														"referenceType": "computed",
																																														"id": "`icon-size mr-2${!isPublished ? ' opacity-50' : ''}`"
																																													}
																																												}
																																											}
																																										}
																																									},
																																									{
																																										"type": "conditional",
																																										"content": {
																																											"reference": {
																																												"type": "dynamic",
																																												"content": {
																																													"referenceType": "state",
																																													"id": "isPublished"
																																												}
																																											},
																																											"value": true,
																																											"node": {
																																												"type": "element",
																																												"content": {
																																													"elementType": "component",
																																													"name": "shareablePlaygroundActiveLink",
																																													"semanticType": "CustomLink",
																																													"attrs": {
																																														"className": {
																																															"type": "static",
																																															"content": "flex-1"
																																														},
																																														"to": {
																																															"type": "dynamic",
																																															"content": {
																																																"referenceType": "computed",
																																																"id": "`/playground/${flowId}`"
																																															}
																																														},
																																														"target": {
																																															"type": "static",
																																															"content": "_blank"
																																														}
																																													},
																																													"children": [
																																														{
																																															"type": "element",
																																															"content": {
																																																"elementType": "text",
																																																"name": "shareablePlaygroundActiveLabel",
																																																"semanticType": "span",
																																																"children": [
																																																	{
																																																		"type": "static",
																																																		"content": "Shareable Playground"
																																																	}
																																																]
																																															}
																																														}
																																													]
																																												}
																																											},
																																											"fallbackNode": {
																																												"type": "element",
																																												"content": {
																																													"elementType": "text",
																																													"name": "shareablePlaygroundDisabledLabel",
																																													"semanticType": "span",
																																													"attrs": {
																																														"className": {
																																															"type": "dynamic",
																																															"content": {
																																																"referenceType": "computed",
																																																"id": "!isPublished ? 'opacity-50' : ''"
																																															}
																																														}
																																													},
																																													"children": [
																																														{
																																															"type": "static",
																																															"content": "Shareable Playground"
																																														}
																																													]
																																												}
																																											}
																																										}
																																									}
																																								]
																																							}
																																						}
																																					]
																																				}
																																			}
																																		]
																																	}
																																},
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "component",
																																		"name": "publishSwitch",
																																		"semanticType": "Switch",
																																		"attrs": {
																																			"data-testid": {
																																				"type": "static",
																																				"content": "publish-switch"
																																			},
																																			"className": {
																																				"type": "static",
																																				"content": "scale-[85%]"
																																			},
																																			"checked": {
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "state",
																																					"id": "isPublished"
																																				}
																																			},
																																			"disabled": {
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "state",
																																					"id": "hasIO",
																																					"operator": "!"
																																				}
																																			}
																																		},
																																		"events": {
																																			"onClick": [
																																				{
																																					"type": "action",
																																					"calls": "handlePublishedSwitch",
																																					"params": {
																																						"checked": {
																																							"type": "dynamic",
																																							"content": {
																																								"referenceType": "state",
																																								"id": "isPublished"
																																							}
																																						}
																																					}
																																				}
																																			]
																																		}
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									}
																								}
																							]
																						}
																					}
																				]
																			}
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									},
									{
										"type": "element",
										"content": {
											"elementType": "component",
											"name": "apiModal",
											"semanticType": "ApiModal",
											"attrs": {
												"open": {
													"type": "dynamic",
													"content": {
														"referenceType": "state",
														"id": "openApiModal"
													}
												}
											},
											"events": {
												"setOpen": [
													{
														"type": "stateChange",
														"modifies": "openApiModal",
														"newState": {
															"type": "dynamic",
															"content": {
																"referenceType": "event",
																"id": "value"
															}
														}
													}
												]
											}
										}
									},
									{
										"type": "element",
										"content": {
											"elementType": "component",
											"name": "embedModal",
											"semanticType": "EmbedModal",
											"attrs": {
												"open": {
													"type": "dynamic",
													"content": {
														"referenceType": "state",
														"id": "openEmbedModal"
													}
												},
												"flowId": {
													"type": "dynamic",
													"content": {
														"referenceType": "state",
														"id": "currentFlow.id"
													}
												},
												"flowName": {
													"type": "dynamic",
													"content": {
														"referenceType": "state",
														"id": "currentFlow.name"
													}
												},
												"isAuth": {
													"type": "dynamic",
													"content": {
														"referenceType": "state",
														"id": "isAuth"
													}
												},
												"tweaksBuildedObject": {
													"type": "static",
													"content": {
													}
												},
												"activeTweaks": {
													"type": "static",
													"content": false
												}
											},
											"events": {
												"setOpen": [
													{
														"type": "stateChange",
														"modifies": "openEmbedModal",
														"newState": {
															"type": "dynamic",
															"content": {
																"referenceType": "event",
																"id": "value"
															}
														}
													}
												]
											}
										}
									},
									{
										"type": "element",
										"content": {
											"elementType": "component",
											"name": "exportModal",
											"semanticType": "ExportModal",
											"attrs": {
												"open": {
													"type": "dynamic",
													"content": {
														"referenceType": "state",
														"id": "openExportModal"
													}
												}
											},
											"events": {
												"setOpen": [
													{
														"type": "stateChange",
														"modifies": "openExportModal",
														"newState": {
															"type": "dynamic",
															"content": {
																"referenceType": "event",
																"id": "value"
															}
														}
													}
												]
											}
										}
									}
								]
							}
						}
					}
				},
				{
					"id": "reactflow_canvas",
					"type": "interface",
					"name": "ReactFlowCanvas",
					"description": "Main canvas area for visual flow building with node manipulation and connection handling",
					"component_path": "src/frontend/src/components/ReactFlowWrapper",
					"uidl_definition_physical": {
						"name": "ReactFlowComponent",
						"propDefinitions": {
							"view": {
								"type": "boolean",
								"defaultValue": false
							},
							"setIsLoading": {
								"type": "function",
								"defaultValue": null
							}
						},
						"stateDefinitions": {
							"nodes": {
								"type": "array",
								"defaultValue": [

								]
							},
							"edges": {
								"type": "array",
								"defaultValue": [

								]
							},
							"reactFlowInstance": {
								"type": "object",
								"defaultValue": null
							},
							"isEmptyFlow": {
								"type": "boolean",
								"defaultValue": true
							},
							"selectionMenuVisible": {
								"type": "boolean",
								"defaultValue": false
							},
							"lastSelection": {
								"type": "object",
								"defaultValue": null
							},
							"isAddingNote": {
								"type": "boolean",
								"defaultValue": false
							},
							"helperLines": {
								"type": "object",
								"defaultValue": {
								}
							},
							"isDragging": {
								"type": "boolean",
								"defaultValue": false
							},
							"showCanvas": {
								"type": "boolean",
								"defaultValue": false
							},
							"isLocked": {
								"type": "boolean",
								"defaultValue": false
							},
							"helperLineEnabled": {
								"type": "boolean",
								"defaultValue": false
							},
							"shadowBoxWidth": {
								"type": "number",
								"defaultValue": 240
							},
							"shadowBoxHeight": {
								"type": "number",
								"defaultValue": 80
							},
							"shadowBoxBackgroundColor": {
								"type": "string",
								"defaultValue": "#3B82F6"
							}
						},
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "reactFlowWrapper",
								"attrs": {
									"className": {
										"type": "static",
										"content": "h-full w-full bg-canvas"
									}
								},
								"children": [
									{
										"type": "conditional",
										"content": {
											"reference": {
												"type": "dynamic",
												"content": {
													"referenceType": "state",
													"id": "showCanvas"
												}
											},
											"value": true,
											"node": {
												"type": "element",
												"content": {
													"elementType": "container",
													"name": "reactFlowContainer",
													"attrs": {
														"id": {
															"type": "static",
															"content": "react-flow-id"
														},
														"className": {
															"type": "static",
															"content": "h-full w-full bg-canvas"
														}
													},
													"children": [
														{
															"type": "conditional",
															"content": {
																"reference": {
																	"type": "dynamic",
																	"content": {
																		"referenceType": "prop",
																		"id": "view",
																		"operator": "!"
																	}
																},
																"value": true,
																"node": {
																	"type": "element",
																	"content": {
																		"elementType": "container",
																		"name": "flowControlsContainer",
																		"children": [
																			{
																				"type": "element",
																				"content": {
																					"elementType": "component",
																					"name": "logCanvasControls",
																					"semanticType": "MemoizedLogCanvasControls"
																				}
																			},
																			{
																				"type": "element",
																				"content": {
																					"elementType": "component",
																					"name": "canvasControls",
																					"semanticType": "MemoizedCanvasControls",
																					"attrs": {
																						"setIsAddingNote": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "function",
																								"id": "setIsAddingNote"
																							}
																						},
																						"position": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "state",
																								"id": "mousePosition"
																							}
																						},
																						"shadowBoxWidth": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "state",
																								"id": "shadowBoxWidth"
																							}
																						},
																						"shadowBoxHeight": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "state",
																								"id": "shadowBoxHeight"
																							}
																						}
																					}
																				}
																			},
																			{
																				"type": "element",
																				"content": {
																					"elementType": "component",
																					"name": "flowToolbar",
																					"semanticType": "FlowToolbar"
																				}
																			}
																		]
																	}
																}
															}
														},
														{
															"type": "element",
															"content": {
																"elementType": "component",
																"name": "sidebarTrigger",
																"semanticType": "MemoizedSidebarTrigger"
															}
														},
														{
															"type": "element",
															"content": {
																"elementType": "component",
																"name": "selectionMenu",
																"semanticType": "SelectionMenu",
																"attrs": {
																	"lastSelection": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "lastSelection"
																		}
																	},
																	"isVisible": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "selectionMenuVisible"
																		}
																	},
																	"nodes": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "lastSelection.nodes"
																		}
																	},
																	"onClick": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "handleGroupNode"
																		}
																	}
																}
															}
														},
														{
															"type": "element",
															"content": {
																"elementType": "component",
																"name": "mainReactFlow",
																"semanticType": "ReactFlow",
																"attrs": {
																	"nodes": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "nodes"
																		}
																	},
																	"edges": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "edges"
																		}
																	},
																	"onNodesChange": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onNodesChangeWithHelperLines"
																		}
																	},
																	"onEdgesChange": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onEdgesChange"
																		}
																	},
																	"onConnect": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "isLocked ? undefined : onConnectMod"
																		}
																	},
																	"disableKeyboardA11y": {
																		"type": "static",
																		"content": true
																	},
																	"onInit": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "setReactFlowInstance"
																		}
																	},
																	"nodeTypes": {
																		"type": "static",
																		"content": {
																			"genericNode": "GenericNode",
																			"noteNode": "NoteNode"
																		}
																	},
																	"edgeTypes": {
																		"type": "static",
																		"content": {
																			"default": "DefaultEdge"
																		}
																	},
																	"onReconnect": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "isLocked ? undefined : onEdgeUpdate"
																		}
																	},
																	"onReconnectStart": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "isLocked ? undefined : onEdgeUpdateStart"
																		}
																	},
																	"onReconnectEnd": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "isLocked ? undefined : onEdgeUpdateEnd"
																		}
																	},
																	"onNodeDrag": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onNodeDrag"
																		}
																	},
																	"onNodeDragStart": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onNodeDragStart"
																		}
																	},
																	"onNodeDragStop": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onNodeDragStop"
																		}
																	},
																	"onSelectionDragStart": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onSelectionDragStart"
																		}
																	},
																	"elevateEdgesOnSelect": {
																		"type": "static",
																		"content": true
																	},
																	"onSelectionEnd": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onSelectionEnd"
																		}
																	},
																	"onSelectionStart": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onSelectionStart"
																		}
																	},
																	"connectionRadius": {
																		"type": "static",
																		"content": 30
																	},
																	"connectionLineComponent": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "component",
																			"id": "ConnectionLineComponent"
																		}
																	},
																	"onDragOver": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onDragOver"
																		}
																	},
																	"onDrop": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onDrop"
																		}
																	},
																	"onSelectionChange": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onSelectionChange"
																		}
																	},
																	"deleteKeyCode": {
																		"type": "static",
																		"content": [

																		]
																	},
																	"fitView": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "isEmptyFlow ? false : true"
																		}
																	},
																	"fitViewOptions": {
																		"type": "static",
																		"content": {
																			"minZoom": 0.2,
																			"maxZoom": 8
																		}
																	},
																	"className": {
																		"type": "static",
																		"content": "theme-attribution"
																	},
																	"minZoom": {
																		"type": "static",
																		"content": 0.2
																	},
																	"maxZoom": {
																		"type": "static",
																		"content": 8
																	},
																	"zoomOnScroll": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "prop",
																			"id": "view",
																			"operator": "!"
																		}
																	},
																	"zoomOnPinch": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "prop",
																			"id": "view",
																			"operator": "!"
																		}
																	},
																	"panOnDrag": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "prop",
																			"id": "view",
																			"operator": "!"
																		}
																	},
																	"panActivationKeyCode": {
																		"type": "static",
																		"content": ""
																	},
																	"proOptions": {
																		"type": "static",
																		"content": {
																			"hideAttribution": true
																		}
																	},
																	"onPaneClick": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "onPaneClick"
																		}
																	},
																	"onEdgeClick": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "function",
																			"id": "handleEdgeClick"
																		}
																	}
																},
																"events": {
																	"onNodesChange": [
																		{
																			"type": "action",
																			"calls": "onNodesChangeWithHelperLines"
																		}
																	],
																	"onEdgesChange": [
																		{
																			"type": "action",
																			"calls": "onEdgesChange"
																		}
																	],
																	"onConnect": [
																		{
																			"type": "action",
																			"calls": "onConnectMod"
																		}
																	],
																	"onDragOver": [
																		{
																			"type": "action",
																			"calls": "onDragOver"
																		}
																	],
																	"onDrop": [
																		{
																			"type": "action",
																			"calls": "onDrop"
																		}
																	],
																	"onPaneClick": [
																		{
																			"type": "action",
																			"calls": "onPaneClick"
																		}
																	],
																	"onEdgeClick": [
																		{
																			"type": "action",
																			"calls": "handleEdgeClick"
																		}
																	],
																	"onSelectionChange": [
																		{
																			"type": "action",
																			"calls": "onSelectionChange"
																		}
																	]
																},
																"children": [
																	{
																		"type": "element",
																		"content": {
																			"elementType": "component",
																			"name": "flowBuildingComponent",
																			"semanticType": "FlowBuildingComponent"
																		}
																	},
																	{
																		"type": "element",
																		"content": {
																			"elementType": "component",
																			"name": "updateAllComponents",
																			"semanticType": "UpdateAllComponents"
																		}
																	},
																	{
																		"type": "element",
																		"content": {
																			"elementType": "component",
																			"name": "memoizedBackground",
																			"semanticType": "MemoizedBackground"
																		}
																	},
																	{
																		"type": "conditional",
																		"content": {
																			"reference": {
																				"type": "dynamic",
																				"content": {
																					"referenceType": "state",
																					"id": "helperLineEnabled"
																				}
																			},
																			"value": true,
																			"node": {
																				"type": "element",
																				"content": {
																					"elementType": "component",
																					"name": "helperLines",
																					"semanticType": "HelperLines",
																					"attrs": {
																						"helperLines": {
																							"type": "dynamic",
																							"content": {
																								"referenceType": "state",
																								"id": "helperLines"
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																]
															}
														},
														{
															"type": "element",
															"content": {
																"elementType": "container",
																"name": "shadowBox",
																"attrs": {
																	"id": {
																		"type": "static",
																		"content": "shadow-box"
																	}
																},
																"style": {
																	"position": {
																		"type": "static",
																		"content": "absolute"
																	},
																	"width": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "`${shadowBoxWidth}px`"
																		}
																	},
																	"height": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "computed",
																			"id": "`${shadowBoxHeight}px`"
																		}
																	},
																	"backgroundColor": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "shadowBoxBackgroundColor"
																		}
																	},
																	"opacity": {
																		"type": "static",
																		"content": 0.7
																	},
																	"pointerEvents": {
																		"type": "static",
																		"content": "none"
																	},
																	"display": {
																		"type": "static",
																		"content": "none"
																	}
																}
															}
														}
													]
												}
											},
											"fallbackNode": {
												"type": "element",
												"content": {
													"elementType": "container",
													"name": "loadingContainer",
													"attrs": {
														"className": {
															"type": "static",
															"content": "flex h-full w-full items-center justify-center"
														}
													},
													"children": [
														{
															"type": "element",
															"content": {
																"elementType": "component",
																"name": "customLoader",
																"semanticType": "CustomLoader",
																"attrs": {
																	"remSize": {
																		"type": "static",
																		"content": 30
																	}
																}
															}
														}
													]
												}
											}
										}
									}
								]
							}
						}
					}
				},
				{
					"id": "io_modal",
					"type": "interface",
					"name": "IOModal",
					"description": "Playground modal for flow testing with input fields, output display, and chat interface",
					"component_path": "src/frontend/src/modals/IOModal",
					"uidl_definition_physical": {
						"name": "IOModal",
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "IOModalContainer",
								"key": "iomodal-container",
								"style": {
									"display": "flex",
									"position": "relative",
									"width": "100%",
									"height": "100%"
								},
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "BaseModalOverlay",
											"key": "base-modal-overlay",
											"style": {
												"position": "fixed",
												"top": "0",
												"left": "0",
												"right": "0",
												"bottom": "0",
												"backgroundColor": "rgba(0, 0, 0, 0.8)",
												"display": "flex",
												"alignItems": "center",
												"justifyContent": "center",
												"zIndex": "50"
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "ModalContent",
														"key": "modal-content",
														"style": {
															"backgroundColor": "white",
															"borderRadius": "8px",
															"width": "90vw",
															"height": "90vh",
															"maxWidth": "1200px",
															"display": "flex",
															"overflow": "hidden",
															"boxShadow": "0 25px 50px -12px rgba(0, 0, 0, 0.25)"
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "SidebarContainer",
																	"key": "sidebar-container",
																	"style": {
																		"width": "280px",
																		"backgroundColor": "#f8f9fa",
																		"borderRight": "1px solid #e0e0e0",
																		"display": "flex",
																		"flexDirection": "column",
																		"transform": "translateX(0)",
																		"transition": "transform 0.3s ease"
																	},
																	"attrs": {
																		"data-state": {
																			"type": "dynamic",
																			"content": {
																				"referenceType": "state",
																				"id": "sidebarOpen"
																			}
																		}
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "container",
																				"name": "SidebarHeader",
																				"key": "sidebar-header",
																				"style": {
																					"padding": "12px",
																					"display": "flex",
																					"flexDirection": "column",
																					"gap": "8px"
																				},
																				"children": [
																					{
																						"type": "element",
																						"content": {
																							"elementType": "container",
																							"name": "ChatHeaderSection",
																							"key": "chat-header-section",
																							"style": {
																								"display": "flex",
																								"alignItems": "center",
																								"justifyContent": "space-between"
																							},
																							"children": [
																								{
																									"type": "element",
																									"content": {
																										"elementType": "container",
																										"name": "ChatTitleContainer",
																										"key": "chat-title-container",
																										"style": {
																											"display": "flex",
																											"alignItems": "center",
																											"gap": "8px"
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "icon",
																													"name": "MessagesSquareIcon",
																													"key": "messages-square-icon",
																													"style": {
																														"width": "18px",
																														"height": "18px",
																														"color": "#6366f1"
																													}
																												}
																											},
																											{
																												"type": "element",
																												"content": {
																													"elementType": "text",
																													"name": "ChatTitle",
																													"key": "chat-title",
																													"style": {
																														"fontSize": "14px",
																														"fontWeight": "normal"
																													}
																												}
																											}
																										]
																									}
																								},
																								{
																									"type": "element",
																									"content": {
																										"elementType": "button",
																										"name": "NewChatButton",
																										"key": "new-chat-button",
																										"style": {
																											"width": "32px",
																											"height": "32px",
																											"display": "flex",
																											"alignItems": "center",
																											"justifyContent": "center",
																											"padding": "0",
																											"backgroundColor": "transparent",
																											"border": "none",
																											"borderRadius": "4px",
																											"cursor": "pointer"
																										},
																										"events": {
																											"click": {
																												"type": "stateChange",
																												"transitions": [
																													{
																														"type": "stateChange",
																														"stateKey": "visibleSession",
																														"newValue": "undefined"
																													},
																													{
																														"type": "stateChange",
																														"stateKey": "selectedViewField",
																														"newValue": "undefined"
																													}
																												]
																											}
																										},
																										"children": [
																											{
																												"type": "element",
																												"content": {
																													"elementType": "icon",
																													"name": "PlusIcon",
																													"key": "plus-icon",
																													"style": {
																														"width": "18px",
																														"height": "18px",
																														"color": "#6366f1"
																													}
																												}
																											}
																										]
																									}
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "container",
																				"name": "SessionsList",
																				"key": "sessions-list",
																				"style": {
																					"display": "flex",
																					"flexDirection": "column",
																					"flex": "1",
																					"overflow": "auto"
																				},
																				"children": [
																					{
																						"type": "repeat",
																						"content": {
																							"node": {
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "SessionItem",
																									"key": "session-item",
																									"style": {
																										"padding": "8px 12px",
																										"margin": "2px 0",
																										"borderRadius": "4px",
																										"cursor": "pointer",
																										"display": "flex",
																										"alignItems": "center",
																										"justifyContent": "space-between"
																									},
																									"events": {
																										"click": {
																											"type": "stateChange",
																											"transitions": [
																												{
																													"type": "stateChange",
																													"stateKey": "visibleSession",
																													"newValue": {
																														"type": "dynamic",
																														"content": {
																															"referenceType": "local",
																															"id": "session"
																														}
																													}
																												}
																											]
																										}
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "text",
																												"name": "SessionName",
																												"key": "session-name",
																												"style": {
																													"fontSize": "14px",
																													"overflow": "hidden",
																													"textOverflow": "ellipsis",
																													"whiteSpace": "nowrap"
																												}
																											}
																										},
																										{
																											"type": "element",
																											"content": {
																												"elementType": "button",
																												"name": "DeleteSessionButton",
																												"key": "delete-session-button",
																												"style": {
																													"width": "16px",
																													"height": "16px",
																													"padding": "0",
																													"backgroundColor": "transparent",
																													"border": "none",
																													"cursor": "pointer"
																												},
																												"events": {
																													"click": {
																														"type": "propCall",
																														"calls": "handleDeleteSession"
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "icon",
																															"name": "TrashIcon",
																															"key": "trash-icon",
																															"style": {
																																"width": "14px",
																																"height": "14px",
																																"color": "#ef4444"
																															}
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							},
																							"dataSource": {
																								"type": "dynamic",
																								"content": {
																									"referenceType": "prop",
																									"id": "sessions"
																								}
																							}
																						}
																					}
																				]
																			}
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "MainContentArea",
																	"key": "main-content-area",
																	"style": {
																		"flex": "1",
																		"display": "flex",
																		"flexDirection": "column",
																		"position": "relative"
																	},
																	"children": [
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "container",
																						"name": "SelectedViewFieldContainer",
																						"key": "selected-view-field-container",
																						"style": {
																							"height": "100%",
																							"width": "100%",
																							"display": "flex",
																							"flexDirection": "column",
																							"padding": "16px",
																							"gap": "16px"
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "ViewFieldHeader",
																									"key": "view-field-header",
																									"style": {
																										"display": "flex",
																										"alignItems": "center",
																										"gap": "12px",
																										"fontSize": "20px",
																										"fontWeight": "600"
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "button",
																												"name": "BackButton",
																												"key": "back-button",
																												"style": {
																													"padding": "0",
																													"backgroundColor": "transparent",
																													"border": "none",
																													"cursor": "pointer"
																												},
																												"events": {
																													"click": {
																														"type": "stateChange",
																														"transitions": [
																															{
																																"type": "stateChange",
																																"stateKey": "selectedViewField",
																																"newValue": "undefined"
																															}
																														]
																													}
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "icon",
																															"name": "ArrowLeftIcon",
																															"key": "arrow-left-icon",
																															"style": {
																																"width": "24px",
																																"height": "24px"
																															}
																														}
																													}
																												]
																											}
																										},
																										{
																											"type": "element",
																											"content": {
																												"elementType": "text",
																												"name": "ViewFieldTitle",
																												"key": "view-field-title",
																												"style": {
																													"fontSize": "20px",
																													"fontWeight": "600"
																												}
																											}
																										}
																									]
																								}
																							},
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "ViewFieldContent",
																									"key": "view-field-content",
																									"style": {
																										"height": "100%",
																										"width": "100%",
																										"overflow": "auto"
																									}
																								}
																							}
																						]
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "selectedViewField"
																					}
																				}
																			}
																		},
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "container",
																						"name": "ChatViewContainer",
																						"key": "chat-view-container",
																						"style": {
																							"height": "100%",
																							"width": "100%",
																							"display": "flex",
																							"flexDirection": "column",
																							"justifyContent": "space-between",
																							"padding": "16px"
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "ChatHeader",
																									"key": "chat-header",
																									"style": {
																										"marginBottom": "16px",
																										"display": "flex",
																										"alignItems": "center",
																										"fontSize": "16px",
																										"fontWeight": "600",
																										"height": "5%",
																										"justifyContent": "space-between"
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "SidebarToggleContainer",
																												"key": "sidebar-toggle-container",
																												"style": {
																													"position": "absolute",
																													"left": "16px"
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "button",
																															"name": "ToggleSidebarButton",
																															"key": "toggle-sidebar-button",
																															"style": {
																																"width": "32px",
																																"height": "32px",
																																"padding": "0",
																																"backgroundColor": "transparent",
																																"border": "none",
																																"cursor": "pointer",
																																"borderRadius": "4px"
																															},
																															"events": {
																																"click": {
																																	"type": "stateChange",
																																	"transitions": [
																																		{
																																			"type": "stateChange",
																																			"stateKey": "sidebarOpen",
																																			"newValue": true
																																		}
																																	]
																																}
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "icon",
																																		"name": "PanelLeftOpenIcon",
																																		"key": "panel-left-open-icon",
																																		"style": {
																																			"width": "18px",
																																			"height": "18px",
																																			"color": "#6366f1"
																																		}
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										},
																										{
																											"type": "conditional",
																											"content": {
																												"node": {
																													"type": "element",
																													"content": {
																														"elementType": "container",
																														"name": "SessionTitleContainer",
																														"key": "session-title-container",
																														"style": {
																															"textAlign": "center",
																															"fontWeight": "600",
																															"overflow": "hidden",
																															"textOverflow": "ellipsis",
																															"whiteSpace": "nowrap",
																															"marginRight": "48px",
																															"flexGrow": "1"
																														},
																														"children": [
																															{
																																"type": "element",
																																"content": {
																																	"elementType": "text",
																																	"name": "SessionTitle",
																																	"key": "session-title",
																																	"style": {
																																		"fontSize": "16px",
																																		"fontWeight": "600"
																																	}
																																}
																															}
																														]
																													}
																												},
																												"reference": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "state",
																														"id": "visibleSession"
																													}
																												}
																											}
																										},
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "HeaderActionsContainer",
																												"key": "header-actions-container",
																												"style": {
																													"display": "flex",
																													"alignItems": "center",
																													"justifyContent": "center",
																													"borderRadius": "4px",
																													"position": "absolute",
																													"right": "48px",
																													"top": "8px",
																													"height": "32px"
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "button",
																															"name": "NewChatHeaderButton",
																															"key": "new-chat-header-button",
																															"style": {
																																"marginRight": "8px",
																																"height": "32px",
																																"width": "32px",
																																"padding": "0",
																																"backgroundColor": "transparent",
																																"border": "none",
																																"borderRadius": "4px",
																																"cursor": "pointer"
																															},
																															"events": {
																																"click": {
																																	"type": "stateChange",
																																	"transitions": [
																																		{
																																			"type": "stateChange",
																																			"stateKey": "visibleSession",
																																			"newValue": "undefined"
																																		},
																																		{
																																			"type": "stateChange",
																																			"stateKey": "selectedViewField",
																																			"newValue": "undefined"
																																		}
																																	]
																																}
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "icon",
																																		"name": "PlusHeaderIcon",
																																		"key": "plus-header-icon",
																																		"style": {
																																			"width": "18px",
																																			"height": "18px",
																																			"color": "#6366f1"
																																		}
																																	}
																																}
																															]
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							},
																							{
																								"type": "conditional",
																								"content": {
																									"node": {
																										"type": "element",
																										"content": {
																											"elementType": "container",
																											"name": "ChatMessagesArea",
																											"key": "chat-messages-area",
																											"style": {
																												"height": "100%",
																												"width": "100%",
																												"display": "flex",
																												"flexDirection": "column",
																												"borderRadius": "8px"
																											},
																											"children": [
																												{
																													"type": "element",
																													"content": {
																														"elementType": "container",
																														"name": "MessagesContainer",
																														"key": "messages-container",
																														"style": {
																															"flex": "1",
																															"overflow": "auto",
																															"padding": "16px 0"
																														},
																														"children": [
																															{
																																"type": "conditional",
																																"content": {
																																	"node": {
																																		"type": "repeat",
																																		"content": {
																																			"node": {
																																				"type": "element",
																																				"content": {
																																					"elementType": "container",
																																					"name": "ChatMessage",
																																					"key": "chat-message",
																																					"style": {
																																						"margin": "8px 0",
																																						"padding": "12px",
																																						"borderRadius": "8px",
																																						"maxWidth": "768px",
																																						"wordBreak": "break-word"
																																					},
																																					"children": [
																																						{
																																							"type": "element",
																																							"content": {
																																								"elementType": "text",
																																								"name": "MessageContent",
																																								"key": "message-content",
																																								"style": {
																																									"fontSize": "14px",
																																									"lineHeight": "1.5"
																																								}
																																							}
																																						}
																																					]
																																				}
																																			},
																																			"dataSource": {
																																				"type": "dynamic",
																																				"content": {
																																					"referenceType": "state",
																																					"id": "chatHistory"
																																				}
																																			}
																																		}
																																	},
																																	"reference": {
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "state",
																																			"id": "chatHistory"
																																		}
																																	},
																																	"value": {
																																		"type": "static",
																																		"content": [

																																		]
																																	},
																																	"condition": {
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "comp",
																																			"id": "chatHistory.length > 0"
																																		}
																																	}
																																}
																															},
																															{
																																"type": "conditional",
																																"content": {
																																	"node": {
																																		"type": "element",
																																		"content": {
																																			"elementType": "container",
																																			"name": "EmptyStateContainer",
																																			"key": "empty-state-container",
																																			"style": {
																																				"display": "flex",
																																				"height": "100%",
																																				"width": "100%",
																																				"flexDirection": "column",
																																				"alignItems": "center",
																																				"justifyContent": "center"
																																			},
																																			"children": [
																																				{
																																					"type": "element",
																																					"content": {
																																						"elementType": "container",
																																						"name": "EmptyStateContent",
																																						"key": "empty-state-content",
																																						"style": {
																																							"display": "flex",
																																							"flexDirection": "column",
																																							"alignItems": "center",
																																							"justifyContent": "center",
																																							"gap": "16px",
																																							"padding": "32px"
																																						},
																																						"children": [
																																							{
																																								"type": "element",
																																								"content": {
																																									"elementType": "image",
																																									"name": "LangflowLogo",
																																									"key": "langflow-logo",
																																									"style": {
																																										"height": "40px",
																																										"width": "40px",
																																										"transform": "scale(1.5)"
																																									},
																																									"attrs": {
																																										"src": "/assets/LangflowLogo.svg",
																																										"alt": "Langflow logo"
																																									}
																																								}
																																							},
																																							{
																																								"type": "element",
																																								"content": {
																																									"elementType": "container",
																																									"name": "EmptyStateText",
																																									"key": "empty-state-text",
																																									"style": {
																																										"display": "flex",
																																										"flexDirection": "column",
																																										"alignItems": "center",
																																										"justifyContent": "center"
																																									},
																																									"children": [
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "text",
																																												"name": "NewChatTitle",
																																												"key": "new-chat-title",
																																												"style": {
																																													"marginTop": "8px",
																																													"paddingBottom": "8px",
																																													"fontSize": "24px",
																																													"fontWeight": "600",
																																													"color": "#6366f1"
																																												}
																																											}
																																										},
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "text",
																																												"name": "NewChatSubtitle",
																																												"key": "new-chat-subtitle",
																																												"style": {
																																													"fontSize": "18px",
																																													"color": "#6b7280"
																																												}
																																											}
																																										}
																																									]
																																								}
																																							}
																																						]
																																					}
																																				}
																																			]
																																		}
																																	},
																																	"reference": {
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "state",
																																			"id": "chatHistory"
																																		}
																																	},
																																	"value": {
																																		"type": "static",
																																		"content": [

																																		]
																																	},
																																	"condition": {
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "comp",
																																			"id": "chatHistory.length === 0"
																																		}
																																	}
																																}
																															}
																														]
																													}
																												},
																												{
																													"type": "element",
																													"content": {
																														"elementType": "container",
																														"name": "ChatInputContainer",
																														"key": "chat-input-container",
																														"style": {
																															"margin": "auto",
																															"width": "100%",
																															"maxWidth": "768px",
																															"padding": "16px 0"
																														},
																														"children": [
																															{
																																"type": "element",
																																"content": {
																																	"elementType": "container",
																																	"name": "InputFieldContainer",
																																	"key": "input-field-container",
																																	"style": {
																																		"display": "flex",
																																		"alignItems": "flex-end",
																																		"gap": "8px",
																																		"padding": "12px",
																																		"backgroundColor": "#f8f9fa",
																																		"borderRadius": "8px",
																																		"border": "1px solid #e0e0e0"
																																	},
																																	"children": [
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "input",
																																				"name": "ChatMessageInput",
																																				"key": "chat-message-input",
																																				"style": {
																																					"flex": "1",
																																					"minHeight": "40px",
																																					"maxHeight": "120px",
																																					"padding": "8px 12px",
																																					"fontSize": "14px",
																																					"border": "none",
																																					"outline": "none",
																																					"backgroundColor": "transparent",
																																					"resize": "none"
																																				},
																																				"attrs": {
																																					"placeholder": "Type your message...",
																																					"rows": "1"
																																				}
																																			}
																																		},
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "button",
																																				"name": "SendMessageButton",
																																				"key": "send-message-button",
																																				"style": {
																																					"width": "40px",
																																					"height": "40px",
																																					"display": "flex",
																																					"alignItems": "center",
																																					"justifyContent": "center",
																																					"backgroundColor": "#6366f1",
																																					"color": "white",
																																					"border": "none",
																																					"borderRadius": "6px",
																																					"cursor": "pointer"
																																				},
																																				"events": {
																																					"click": {
																																						"type": "propCall",
																																						"calls": "sendMessage"
																																					}
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "icon",
																																							"name": "SendIcon",
																																							"key": "send-icon",
																																							"style": {
																																								"width": "18px",
																																								"height": "18px"
																																							}
																																						}
																																					}
																																				]
																																			}
																																		}
																																	]
																																}
																															}
																														]
																													}
																												}
																											]
																										}
																									},
																									"reference": {
																										"type": "dynamic",
																										"content": {
																											"referenceType": "state",
																											"id": "messagesFetched"
																										}
																									}
																								}
																							}
																						]
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "selectedViewField"
																					}
																				},
																				"value": {
																					"type": "static",
																					"content": null
																				},
																				"condition": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "comp",
																						"id": "!selectedViewField"
																					}
																				}
																			}
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						"stateDefinitions": {
							"sidebarOpen": {
								"type": "boolean",
								"defaultValue": true
							},
							"visibleSession": {
								"type": "string",
								"defaultValue": null
							},
							"selectedViewField": {
								"type": "object",
								"defaultValue": null
							},
							"messagesFetched": {
								"type": "boolean",
								"defaultValue": false
							},
							"chatHistory": {
								"type": "array",
								"defaultValue": [

								]
							},
							"isBuilding": {
								"type": "boolean",
								"defaultValue": false
							},
							"displayLoadingMessage": {
								"type": "boolean",
								"defaultValue": false
							},
							"canScroll": {
								"type": "boolean",
								"defaultValue": false
							},
							"scrolledUp": {
								"type": "boolean",
								"defaultValue": false
							},
							"isLlmResponding": {
								"type": "boolean",
								"defaultValue": false
							},
							"lastMessageContent": {
								"type": "string",
								"defaultValue": ""
							},
							"isDragging": {
								"type": "boolean",
								"defaultValue": false
							},
							"files": {
								"type": "array",
								"defaultValue": [

								]
							}
						},
						"propDefinitions": {
							"sessions": {
								"type": "array",
								"isRequired": true
							},
							"currentFlowId": {
								"type": "string",
								"isRequired": true
							},
							"playgroundPage": {
								"type": "boolean",
								"isRequired": false
							},
							"canvasOpen": {
								"type": "boolean",
								"isRequired": false
							},
							"setOpen": {
								"type": "function",
								"isRequired": false
							},
							"sendMessage": {
								"type": "function",
								"isRequired": true
							},
							"handleDeleteSession": {
								"type": "function",
								"isRequired": true
							},
							"setActiveSession": {
								"type": "function",
								"isRequired": true
							},
							"sessionId": {
								"type": "string",
								"isRequired": false
							},
							"playgroundTitle": {
								"type": "string",
								"isRequired": false
							},
							"inputs": {
								"type": "array",
								"isRequired": false
							},
							"outputs": {
								"type": "array",
								"isRequired": false
							},
							"nodes": {
								"type": "array",
								"isRequired": false
							}
						}
					}
				},
				{
					"id": "message_list",
					"type": "interface",
					"name": "MessageList",
					"description": "Scrollable message container with rich content rendering, streaming support, and voice integration",
					"component_path": "src/frontend/src/components/ChatWidget",
					"uidl_definition_physical": {
						"name": "ChatWidget",
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "ChatWidgetContainer",
								"key": "chat-widget-container",
								"style": {
									"display": "block",
									"width": "100%",
									"height": "100%",
									"position": "relative"
								},
								"attrs": {
									"className": {
										"type": "dynamic",
										"content": {
											"referenceType": "prop",
											"id": "className"
										}
									}
								},
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "ChatScriptLoaderContainer",
											"key": "chat-script-loader-container",
											"style": {
												"display": "none"
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "script",
														"name": "LangflowEmbeddedChatScript",
														"key": "langflow-embedded-chat-script",
														"attrs": {
															"src": "https://cdn.jsdelivr.net/gh/langflow-ai/langflow-embedded-chat@main/dist/build/static/js/bundle.min.js",
															"async": true,
															"type": "text/javascript"
														}
													}
												}
											]
										}
									},
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "LangflowChatWidget",
											"key": "langflow-chat-widget",
											"style": {
												"width": "100%",
												"height": "100%",
												"border": "none",
												"borderRadius": "8px",
												"overflow": "hidden"
											},
											"attrs": {
												"data-widget-type": "langflow-chat",
												"data-host-url": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "host_url"
													}
												},
												"data-flow-id": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "flow_id"
													}
												},
												"data-chat-inputs": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_inputs"
													}
												},
												"data-input-value": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "input_value"
													}
												},
												"data-input-type": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "input_type"
													}
												},
												"data-output-type": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "output_type"
													}
												},
												"data-output-value": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "output_value"
													}
												},
												"data-tweaks": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "tweaks"
													}
												},
												"data-session-id": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "session_id"
													}
												},
												"data-chat-position": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_position"
													}
												},
												"data-chat-window-open": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_window_open"
													}
												},
												"data-error-message-text": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "error_message_text"
													}
												},
												"data-placeholder-sending": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "placeholder_sending"
													}
												},
												"data-placeholder": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "placeholder"
													}
												},
												"data-send-icon-src": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "send_icon_src"
													}
												},
												"data-bot-message-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "bot_message_style"
													}
												},
												"data-user-message-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "user_message_style"
													}
												},
												"data-chat-input-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_input_style"
													}
												},
												"data-chat-input-container-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_input_container_style"
													}
												},
												"data-chat-output-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_output_style"
													}
												},
												"data-footer-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "footer_style"
													}
												},
												"data-chat-window-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_window_style"
													}
												},
												"data-chat-container-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_container_style"
													}
												},
												"data-send-button-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "send_button_style"
													}
												},
												"data-chat-trigger-style": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "chat_trigger_style"
													}
												},
												"data-online-message": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "online_message"
													}
												},
												"data-offline-message": {
													"type": "dynamic",
													"content": {
														"referenceType": "prop",
														"id": "offline_message"
													}
												}
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "ChatWidgetPlaceholder",
														"key": "chat-widget-placeholder",
														"style": {
															"width": "100%",
															"height": "400px",
															"backgroundColor": "#f8f9fa",
															"border": "2px dashed #e0e0e0",
															"borderRadius": "8px",
															"display": "flex",
															"flexDirection": "column",
															"alignItems": "center",
															"justifyContent": "center",
															"padding": "32px",
															"textAlign": "center"
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "ChatIconContainer",
																	"key": "chat-icon-container",
																	"style": {
																		"width": "64px",
																		"height": "64px",
																		"backgroundColor": "#6366f1",
																		"borderRadius": "50%",
																		"display": "flex",
																		"alignItems": "center",
																		"justifyContent": "center",
																		"marginBottom": "16px"
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "icon",
																				"name": "ChatBubbleIcon",
																				"key": "chat-bubble-icon",
																				"style": {
																					"width": "32px",
																					"height": "32px",
																					"color": "white"
																				}
																			}
																		}
																	]
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "text",
																	"name": "ChatWidgetTitle",
																	"key": "chat-widget-title",
																	"style": {
																		"fontSize": "18px",
																		"fontWeight": "600",
																		"color": "#374151",
																		"marginBottom": "8px"
																	}
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "text",
																	"name": "ChatWidgetDescription",
																	"key": "chat-widget-description",
																	"style": {
																		"fontSize": "14px",
																		"color": "#6b7280",
																		"lineHeight": "1.5",
																		"maxWidth": "300px"
																	}
																}
															},
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "LoadingIndicator",
																	"key": "loading-indicator",
																	"style": {
																		"marginTop": "16px",
																		"display": "flex",
																		"alignItems": "center",
																		"gap": "8px"
																	},
																	"children": [
																		{
																			"type": "element",
																			"content": {
																				"elementType": "container",
																				"name": "LoadingSpinner",
																				"key": "loading-spinner",
																				"style": {
																					"width": "16px",
																					"height": "16px",
																					"border": "2px solid #e0e0e0",
																					"borderTop": "2px solid #6366f1",
																					"borderRadius": "50%",
																					"animation": "spin 1s linear infinite"
																				}
																			}
																		},
																		{
																			"type": "element",
																			"content": {
																				"elementType": "text",
																				"name": "LoadingText",
																				"key": "loading-text",
																				"style": {
																					"fontSize": "12px",
																					"color": "#6b7280"
																				}
																			}
																		}
																	]
																}
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						"stateDefinitions": {
							"scriptLoaded": {
								"type": "boolean",
								"defaultValue": false
							},
							"widgetInitialized": {
								"type": "boolean",
								"defaultValue": false
							},
							"isLoading": {
								"type": "boolean",
								"defaultValue": true
							},
							"errorState": {
								"type": "string",
								"defaultValue": null
							}
						},
						"propDefinitions": {
							"className": {
								"type": "string",
								"isRequired": false
							},
							"host_url": {
								"type": "string",
								"isRequired": true,
								"defaultValue": "http://localhost:7860"
							},
							"flow_id": {
								"type": "string",
								"isRequired": true,
								"defaultValue": "YOUR_FLOW_ID"
							},
							"chat_inputs": {
								"type": "object",
								"isRequired": false
							},
							"input_value": {
								"type": "string",
								"isRequired": false
							},
							"input_type": {
								"type": "string",
								"isRequired": false
							},
							"output_type": {
								"type": "string",
								"isRequired": false
							},
							"output_value": {
								"type": "string",
								"isRequired": false
							},
							"tweaks": {
								"type": "object",
								"isRequired": false
							},
							"session_id": {
								"type": "string",
								"isRequired": false
							},
							"chat_position": {
								"type": "string",
								"isRequired": false,
								"defaultValue": "bottom-right"
							},
							"chat_window_open": {
								"type": "boolean",
								"isRequired": false,
								"defaultValue": false
							},
							"error_message_text": {
								"type": "string",
								"isRequired": false,
								"defaultValue": "Something went wrong"
							},
							"placeholder_sending": {
								"type": "string",
								"isRequired": false,
								"defaultValue": "Sending..."
							},
							"placeholder": {
								"type": "string",
								"isRequired": false,
								"defaultValue": "Type your message..."
							},
							"send_icon_src": {
								"type": "string",
								"isRequired": false
							},
							"bot_message_style": {
								"type": "object",
								"isRequired": false
							},
							"user_message_style": {
								"type": "object",
								"isRequired": false
							},
							"chat_input_style": {
								"type": "object",
								"isRequired": false
							},
							"chat_input_container_style": {
								"type": "object",
								"isRequired": false
							},
							"chat_output_style": {
								"type": "object",
								"isRequired": false
							},
							"footer_style": {
								"type": "object",
								"isRequired": false
							},
							"chat_window_style": {
								"type": "object",
								"isRequired": false
							},
							"chat_container_style": {
								"type": "object",
								"isRequired": false
							},
							"send_button_style": {
								"type": "object",
								"isRequired": false
							},
							"chat_trigger_style": {
								"type": "object",
								"isRequired": false
							},
							"online_message": {
								"type": "string",
								"isRequired": false,
								"defaultValue": "We're online!"
							},
							"offline_message": {
								"type": "string",
								"isRequired": false,
								"defaultValue": "We're currently offline"
							}
						},
						"designLanguage": {
							"tokens": {
								"colors": {
									"primary": "#6366f1",
									"background": "#ffffff",
									"muted": "#f8f9fa",
									"border": "#e0e0e0",
									"text": "#374151",
									"textMuted": "#6b7280"
								},
								"spacing": {
									"xs": "4px",
									"sm": "8px",
									"md": "16px",
									"lg": "32px",
									"xl": "64px"
								},
								"borderRadius": {
									"sm": "4px",
									"md": "8px",
									"full": "50%"
								},
								"fontSize": {
									"sm": "12px",
									"base": "14px",
									"lg": "18px"
								},
								"fontWeight": {
									"normal": "400",
									"semibold": "600"
								}
							}
						}
					}
				},
				{
					"id": "chat_input",
					"type": "interface",
					"name": "ChatInput",
					"description": "Multi-modal input interface with text, file attachments, voice recording, and send controls",
					"component_path": "src/frontend/src/components/ChatInput",
					"uidl_definition_physical": {
						"name": "ChatInput",
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "ChatInputContainer",
								"key": "chat-input-container",
								"style": {
									"width": "100%",
									"height": "100%"
								},
								"children": [
									{
										"type": "conditional",
										"content": {
											"node": {
												"type": "element",
												"content": {
													"elementType": "container",
													"name": "NoInputView",
													"key": "no-input-view",
													"style": {
														"display": "flex",
														"height": "100%",
														"width": "100%",
														"flexDirection": "column",
														"alignItems": "center",
														"justifyContent": "center"
													},
													"children": [
														{
															"type": "element",
															"content": {
																"elementType": "container",
																"name": "NoInputContent",
																"key": "no-input-content",
																"style": {
																	"display": "flex",
																	"width": "100%",
																	"flexDirection": "column",
																	"alignItems": "center",
																	"justifyContent": "center",
																	"gap": "12px",
																	"borderRadius": "8px",
																	"border": "1px solid #e0e0e0",
																	"backgroundColor": "#f8f9fa",
																	"padding": "8px",
																	"paddingTop": "16px",
																	"paddingBottom": "16px"
																},
																"children": [
																	{
																		"type": "conditional",
																		"content": {
																			"node": {
																				"type": "element",
																				"content": {
																					"elementType": "button",
																					"name": "RunFlowButton",
																					"key": "run-flow-button",
																					"style": {
																						"fontWeight": "600",
																						"backgroundColor": "#6366f1",
																						"color": "white",
																						"padding": "8px 16px",
																						"borderRadius": "6px",
																						"border": "none",
																						"cursor": "pointer"
																					},
																					"attrs": {
																						"data-testid": "button-send"
																					},
																					"events": {
																						"click": {
																							"type": "propCall",
																							"calls": "sendMessage",
																							"args": [
																								{
																									"repeat": 1
																								}
																							]
																						}
																					},
																					"children": [
																						{
																							"type": "element",
																							"content": {
																								"elementType": "text",
																								"name": "RunFlowText",
																								"key": "run-flow-text"
																							}
																						}
																					]
																				}
																			},
																			"reference": {
																				"type": "dynamic",
																				"content": {
																					"referenceType": "state",
																					"id": "isBuilding"
																				}
																			},
																			"value": {
																				"type": "static",
																				"content": false
																			},
																			"condition": {
																				"type": "dynamic",
																				"content": {
																					"referenceType": "comp",
																					"id": "!isBuilding"
																				}
																			}
																		}
																	},
																	{
																		"type": "conditional",
																		"content": {
																			"node": {
																				"type": "element",
																				"content": {
																					"elementType": "button",
																					"name": "StopBuildingButton",
																					"key": "stop-building-button",
																					"style": {
																						"backgroundColor": "#f8f9fa",
																						"color": "#374151",
																						"padding": "8px 16px",
																						"borderRadius": "6px",
																						"border": "none",
																						"cursor": "pointer"
																					},
																					"attrs": {
																						"data-testid": "button-stop"
																					},
																					"events": {
																						"click": {
																							"type": "propCall",
																							"calls": "stopBuilding"
																						}
																					},
																					"children": [
																						{
																							"type": "element",
																							"content": {
																								"elementType": "container",
																								"name": "StopButtonContent",
																								"key": "stop-button-content",
																								"style": {
																									"display": "flex",
																									"alignItems": "center",
																									"gap": "8px",
																									"borderRadius": "8px",
																									"fontSize": "14px",
																									"fontWeight": "500"
																								},
																								"children": [
																									{
																										"type": "element",
																										"content": {
																											"elementType": "text",
																											"name": "StopText",
																											"key": "stop-text"
																										}
																									},
																									{
																										"type": "element",
																										"content": {
																											"elementType": "container",
																											"name": "LoadingSpinner",
																											"key": "loading-spinner",
																											"style": {
																												"width": "16px",
																												"height": "16px",
																												"border": "2px solid #e0e0e0",
																												"borderTop": "2px solid #6366f1",
																												"borderRadius": "50%",
																												"animation": "spin 1s linear infinite"
																											}
																										}
																									}
																								]
																							}
																						}
																					]
																				}
																			},
																			"reference": {
																				"type": "dynamic",
																				"content": {
																					"referenceType": "state",
																					"id": "isBuilding"
																				}
																			},
																			"value": {
																				"type": "static",
																				"content": true
																			},
																			"condition": {
																				"type": "dynamic",
																				"content": {
																					"referenceType": "comp",
																					"id": "isBuilding"
																				}
																			}
																		}
																	},
																	{
																		"type": "element",
																		"content": {
																			"elementType": "text",
																			"name": "NoInputHelpText",
																			"key": "no-input-help-text",
																			"style": {
																				"color": "#6b7280",
																				"fontSize": "14px",
																				"textAlign": "center"
																			},
																			"children": [
																				{
																					"type": "element",
																					"content": {
																						"elementType": "text",
																						"name": "AddText",
																						"key": "add-text"
																					}
																				},
																				{
																					"type": "element",
																					"content": {
																						"elementType": "link",
																						"name": "ChatInputDocLink",
																						"key": "chat-input-doc-link",
																						"style": {
																							"textDecoration": "underline",
																							"textUnderlineOffset": "4px"
																						},
																						"attrs": {
																							"href": "https://docs.langflow.org/components-io#chat-input",
																							"target": "_blank",
																							"rel": "noopener"
																						}
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											"reference": {
												"type": "dynamic",
												"content": {
													"referenceType": "prop",
													"id": "noInput"
												}
											}
										}
									},
									{
										"type": "conditional",
										"content": {
											"node": {
												"type": "element",
												"content": {
													"elementType": "container",
													"name": "AnimatedInputContainer",
													"key": "animated-input-container",
													"style": {
														"width": "100%",
														"height": "100%"
													},
													"children": [
														{
															"type": "conditional",
															"content": {
																"node": {
																	"type": "element",
																	"content": {
																		"elementType": "container",
																		"name": "VoiceAssistantContainer",
																		"key": "voice-assistant-container",
																		"style": {
																			"opacity": "1",
																			"transition": "opacity 0.2s ease"
																		},
																		"children": [
																			{
																				"type": "element",
																				"content": {
																					"elementType": "container",
																					"name": "VoiceAssistantPlaceholder",
																					"key": "voice-assistant-placeholder",
																					"style": {
																						"width": "100%",
																						"height": "200px",
																						"backgroundColor": "#f8f9fa",
																						"border": "2px dashed #e0e0e0",
																						"borderRadius": "8px",
																						"display": "flex",
																						"alignItems": "center",
																						"justifyContent": "center",
																						"padding": "32px"
																					},
																					"children": [
																						{
																							"type": "element",
																							"content": {
																								"elementType": "text",
																								"name": "VoiceAssistantText",
																								"key": "voice-assistant-text",
																								"style": {
																									"fontSize": "16px",
																									"color": "#6b7280"
																								}
																							}
																						}
																					]
																				}
																			}
																		]
																	}
																},
																"reference": {
																	"type": "dynamic",
																	"content": {
																		"referenceType": "state",
																		"id": "showAudioInput"
																	}
																},
																"value": {
																	"type": "static",
																	"content": true
																},
																"condition": {
																	"type": "dynamic",
																	"content": {
																		"referenceType": "comp",
																		"id": "showAudioInput && !newSessionCloseVoiceAssistant"
																	}
																}
															}
														},
														{
															"type": "conditional",
															"content": {
																"node": {
																	"type": "element",
																	"content": {
																		"elementType": "container",
																		"name": "InputWrapperContainer",
																		"key": "input-wrapper-container",
																		"style": {
																			"opacity": "1",
																			"transition": "opacity 0.2s ease"
																		},
																		"children": [
																			{
																				"type": "element",
																				"content": {
																					"elementType": "container",
																					"name": "InputWrapperMain",
																					"key": "input-wrapper-main",
																					"style": {
																						"display": "flex",
																						"width": "100%",
																						"flexDirection": "column-reverse"
																					},
																					"children": [
																						{
																							"type": "element",
																							"content": {
																								"elementType": "container",
																								"name": "InputFieldContainer",
																								"key": "input-field-container",
																								"style": {
																									"display": "flex",
																									"width": "100%",
																									"flexDirection": "column",
																									"borderRadius": "8px",
																									"border": "1px solid #e0e0e0",
																									"padding": "16px"
																								},
																								"attrs": {
																									"data-testid": "input-wrapper"
																								},
																								"children": [
																									{
																										"type": "element",
																										"content": {
																											"elementType": "textarea",
																											"name": "ChatMessageTextarea",
																											"key": "chat-message-textarea",
																											"style": {
																												"resize": "none",
																												"maxHeight": "150px",
																												"overflow": "hidden",
																												"width": "100%",
																												"border": "none",
																												"backgroundColor": "transparent",
																												"outline": "none",
																												"padding": "0",
																												"fontSize": "14px"
																											},
																											"attrs": {
																												"data-testid": "input-chat-playground",
																												"rows": "1",
																												"placeholder": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "state",
																														"id": "placeholderText"
																													}
																												},
																												"disabled": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "comp",
																														"id": "isBuilding || noInput"
																													}
																												},
																												"value": {
																													"type": "dynamic",
																													"content": {
																														"referenceType": "state",
																														"id": "chatValue"
																													}
																												}
																											},
																											"events": {
																												"keyDown": {
																													"type": "stateChange",
																													"transitions": [
																														{
																															"type": "propCall",
																															"calls": "checkSendingOk"
																														}
																													]
																												},
																												"onChange": {
																													"type": "stateChange",
																													"transitions": [
																														{
																															"type": "stateChange",
																															"stateKey": "chatValue",
																															"newValue": {
																																"type": "dynamic",
																																"content": {
																																	"referenceType": "local",
																																	"id": "event.target.value"
																																}
																															}
																														}
																													]
																												}
																											}
																										}
																									},
																									{
																										"type": "element",
																										"content": {
																											"elementType": "container",
																											"name": "FilePreviewContainer",
																											"key": "file-preview-container",
																											"style": {
																												"display": "flex",
																												"width": "100%",
																												"alignItems": "center",
																												"gap": "8px",
																												"paddingTop": "8px",
																												"paddingBottom": "8px",
																												"overflow": "auto"
																											},
																											"children": [
																												{
																													"type": "repeat",
																													"content": {
																														"node": {
																															"type": "element",
																															"content": {
																																"elementType": "container",
																																"name": "FilePreviewItem",
																																"key": "file-preview-item",
																																"style": {
																																	"position": "relative",
																																	"display": "inline-flex",
																																	"alignItems": "center",
																																	"gap": "8px",
																																	"padding": "8px",
																																	"backgroundColor": "#f8f9fa",
																																	"borderRadius": "6px",
																																	"border": "1px solid #e0e0e0"
																																},
																																"children": [
																																	{
																																		"type": "element",
																																		"content": {
																																			"elementType": "image",
																																			"name": "FilePreviewImage",
																																			"key": "file-preview-image",
																																			"style": {
																																				"width": "32px",
																																				"height": "32px",
																																				"objectFit": "cover",
																																				"borderRadius": "4px"
																																			}
																																		}
																																	},
																																	{
																																		"type": "element",
																																		"content": {
																																			"elementType": "button",
																																			"name": "DeleteFileButton",
																																			"key": "delete-file-button",
																																			"style": {
																																				"position": "absolute",
																																				"top": "-4px",
																																				"right": "-4px",
																																				"width": "16px",
																																				"height": "16px",
																																				"backgroundColor": "#ef4444",
																																				"color": "white",
																																				"borderRadius": "50%",
																																				"border": "none",
																																				"cursor": "pointer",
																																				"fontSize": "10px"
																																			},
																																			"events": {
																																				"click": {
																																					"type": "propCall",
																																					"calls": "handleDeleteFile"
																																				}
																																			},
																																			"children": [
																																				{
																																					"type": "element",
																																					"content": {
																																						"elementType": "icon",
																																						"name": "XIcon",
																																						"key": "x-icon",
																																						"style": {
																																							"width": "8px",
																																							"height": "8px"
																																						}
																																					}
																																				}
																																			]
																																		}
																																	}
																																]
																															}
																														},
																														"dataSource": {
																															"type": "dynamic",
																															"content": {
																																"referenceType": "state",
																																"id": "files"
																															}
																														}
																													}
																												}
																											]
																										}
																									},
																									{
																										"type": "element",
																										"content": {
																											"elementType": "container",
																											"name": "InputActionsContainer",
																											"key": "input-actions-container",
																											"style": {
																												"display": "flex",
																												"width": "100%",
																												"alignItems": "flex-end",
																												"justifyContent": "space-between"
																											},
																											"children": [
																												{
																													"type": "element",
																													"content": {
																														"elementType": "container",
																														"name": "UploadButtonContainer",
																														"key": "upload-button-container",
																														"style": {
																															"cursor": {
																																"type": "dynamic",
																																"content": {
																																	"referenceType": "comp",
																																	"id": "isBuilding ? 'not-allowed' : 'pointer'"
																																}
																															}
																														},
																														"children": [
																															{
																																"type": "conditional",
																																"content": {
																																	"node": {
																																		"type": "element",
																																		"content": {
																																			"elementType": "container",
																																			"name": "UploadFileTooltipWrapper",
																																			"key": "upload-file-tooltip-wrapper",
																																			"style": {
																																				"position": "relative"
																																			},
																																			"children": [
																																				{
																																					"type": "element",
																																					"content": {
																																						"elementType": "input",
																																						"name": "HiddenFileInput",
																																						"key": "hidden-file-input",
																																						"style": {
																																							"display": "none"
																																						},
																																						"attrs": {
																																							"type": "file",
																																							"accept": "image/png,image/jpg,image/jpeg",
																																							"disabled": {
																																								"type": "dynamic",
																																								"content": {
																																									"referenceType": "state",
																																									"id": "isBuilding"
																																								}
																																							}
																																						},
																																						"events": {
																																							"change": {
																																								"type": "propCall",
																																								"calls": "handleFileChange"
																																							}
																																						}
																																					}
																																				},
																																				{
																																					"type": "element",
																																					"content": {
																																						"elementType": "button",
																																						"name": "AttachImageButton",
																																						"key": "attach-image-button",
																																						"style": {
																																							"padding": "8px",
																																							"backgroundColor": "transparent",
																																							"border": "none",
																																							"cursor": {
																																								"type": "dynamic",
																																								"content": {
																																									"referenceType": "comp",
																																									"id": "isBuilding ? 'not-allowed' : 'pointer'"
																																								}
																																							},
																																							"color": {
																																								"type": "dynamic",
																																								"content": {
																																									"referenceType": "comp",
																																									"id": "isBuilding ? '#9ca3af' : '#6b7280'"
																																								}
																																							}
																																						},
																																						"attrs": {
																																							"disabled": {
																																								"type": "dynamic",
																																								"content": {
																																									"referenceType": "state",
																																									"id": "isBuilding"
																																								}
																																							}
																																						},
																																						"events": {
																																							"click": {
																																								"type": "propCall",
																																								"calls": "handleButtonClick"
																																							}
																																						},
																																						"children": [
																																							{
																																								"type": "element",
																																								"content": {
																																									"elementType": "icon",
																																									"name": "ImageIcon",
																																									"key": "image-icon",
																																									"style": {
																																										"width": "18px",
																																										"height": "18px"
																																									}
																																								}
																																							}
																																						]
																																					}
																																				}
																																			]
																																		}
																																	},
																																	"reference": {
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "comp",
																																			"id": "!playgroundPage || (playgroundPage && ENABLE_IMAGE_ON_PLAYGROUND)"
																																		}
																																	}
																																}
																															}
																														]
																													}
																												},
																												{
																													"type": "element",
																													"content": {
																														"elementType": "container",
																														"name": "RightActionsContainer",
																														"key": "right-actions-container",
																														"style": {
																															"display": "flex",
																															"alignItems": "center",
																															"gap": "8px"
																														},
																														"children": [
																															{
																																"type": "conditional",
																																"content": {
																																	"node": {
																																		"type": "element",
																																		"content": {
																																			"elementType": "button",
																																			"name": "VoiceAssistantButton",
																																			"key": "voice-assistant-button",
																																			"style": {
																																				"padding": "8px",
																																				"backgroundColor": "transparent",
																																				"border": "none",
																																				"cursor": "pointer",
																																				"borderRadius": "4px"
																																			},
																																			"events": {
																																				"click": {
																																					"type": "stateChange",
																																					"transitions": [
																																						{
																																							"type": "stateChange",
																																							"stateKey": "showAudioInput",
																																							"newValue": true
																																						}
																																					]
																																				}
																																			},
																																			"children": [
																																				{
																																					"type": "element",
																																					"content": {
																																						"elementType": "icon",
																																						"name": "MicrophoneIcon",
																																						"key": "microphone-icon",
																																						"style": {
																																							"width": "18px",
																																							"height": "18px"
																																						}
																																					}
																																				}
																																			]
																																		}
																																	},
																																	"reference": {
																																		"type": "dynamic",
																																		"content": {
																																			"referenceType": "comp",
																																			"id": "ENABLE_VOICE_ASSISTANT"
																																		}
																																	}
																																}
																															},
																															{
																																"type": "element",
																																"content": {
																																	"elementType": "container",
																																	"name": "SendButtonContainer",
																																	"key": "send-button-container",
																																	"style": {
																																		"marginLeft": {
																																			"type": "dynamic",
																																			"content": {
																																				"referenceType": "comp",
																																				"id": "playgroundPage ? 'auto' : '0'"
																																			}
																																		}
																																	},
																																	"children": [
																																		{
																																			"type": "conditional",
																																			"content": {
																																				"node": {
																																					"type": "element",
																																					"content": {
																																						"elementType": "button",
																																						"name": "StopButton",
																																						"key": "stop-button",
																																						"style": {
																																							"backgroundColor": "#f8f9fa",
																																							"color": "#374151",
																																							"padding": "8px 16px",
																																							"borderRadius": "6px",
																																							"border": "none",
																																							"cursor": "pointer"
																																						},
																																						"attrs": {
																																							"data-testid": "button-stop"
																																						},
																																						"events": {
																																							"click": {
																																								"type": "stateChange",
																																								"transitions": [
																																									{
																																										"type": "propCall",
																																										"calls": "stopBuilding"
																																									}
																																								]
																																							}
																																						},
																																						"children": [
																																							{
																																								"type": "element",
																																								"content": {
																																									"elementType": "container",
																																									"name": "StopButtonContent",
																																									"key": "stop-button-content",
																																									"style": {
																																										"display": "flex",
																																										"alignItems": "center",
																																										"gap": "8px",
																																										"fontSize": "14px",
																																										"fontWeight": "500"
																																									},
																																									"children": [
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "text",
																																												"name": "StopButtonText",
																																												"key": "stop-button-text"
																																											}
																																										},
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "container",
																																												"name": "StopButtonSpinner",
																																												"key": "stop-button-spinner",
																																												"style": {
																																													"width": "16px",
																																													"height": "16px",
																																													"border": "2px solid #e0e0e0",
																																													"borderTop": "2px solid #6366f1",
																																													"borderRadius": "50%",
																																													"animation": "spin 1s linear infinite"
																																												}
																																											}
																																										}
																																									]
																																								}
																																							}
																																						]
																																					}
																																				},
																																				"reference": {
																																					"type": "dynamic",
																																					"content": {
																																						"referenceType": "comp",
																																						"id": "isBuilding || files.some(file => file.loading)"
																																					}
																																				}
																																			}
																																		},
																																		{
																																			"type": "conditional",
																																			"content": {
																																				"node": {
																																					"type": "element",
																																					"content": {
																																						"elementType": "button",
																																						"name": "SendButton",
																																						"key": "send-button",
																																						"style": {
																																							"backgroundColor": {
																																								"type": "dynamic",
																																								"content": {
																																									"referenceType": "comp",
																																									"id": "chatValue ? '#6366f1' : '#6366f1'"
																																								}
																																							},
																																							"color": "white",
																																							"padding": "8px 16px",
																																							"borderRadius": "6px",
																																							"border": "none",
																																							"cursor": "pointer"
																																						},
																																						"attrs": {
																																							"data-testid": "button-send"
																																						},
																																						"events": {
																																							"click": {
																																								"type": "propCall",
																																								"calls": "send"
																																							}
																																						},
																																						"children": [
																																							{
																																								"type": "element",
																																								"content": {
																																									"elementType": "container",
																																									"name": "SendButtonContent",
																																									"key": "send-button-content",
																																									"style": {
																																										"display": "flex",
																																										"alignItems": "center",
																																										"gap": "8px",
																																										"fontSize": "14px",
																																										"fontWeight": "500"
																																									},
																																									"children": [
																																										{
																																											"type": "element",
																																											"content": {
																																												"elementType": "text",
																																												"name": "SendButtonText",
																																												"key": "send-button-text"
																																											}
																																										}
																																									]
																																								}
																																							}
																																						]
																																					}
																																				},
																																				"reference": {
																																					"type": "dynamic",
																																					"content": {
																																						"referenceType": "comp",
																																						"id": "!(isBuilding || files.some(file => file.loading)) && !noInput"
																																					}
																																				}
																																			}
																																		}
																																	]
																																}
																															}
																														]
																													}
																												}
																											]
																										}
																									}
																								]
																							}
																						}
																					]
																				}
																			}
																		]
																	}
																},
																"reference": {
																	"type": "dynamic",
																	"content": {
																		"referenceType": "state",
																		"id": "showAudioInput"
																	}
																},
																"value": {
																	"type": "static",
																	"content": false
																},
																"condition": {
																	"type": "dynamic",
																	"content": {
																		"referenceType": "comp",
																		"id": "!showAudioInput || newSessionCloseVoiceAssistant"
																	}
																}
															}
														}
													]
												}
											},
											"reference": {
												"type": "dynamic",
												"content": {
													"referenceType": "prop",
													"id": "noInput"
												}
											},
											"value": {
												"type": "static",
												"content": false
											},
											"condition": {
												"type": "dynamic",
												"content": {
													"referenceType": "comp",
													"id": "!noInput"
												}
											}
										}
									}
								]
							}
						},
						"stateDefinitions": {
							"isBuilding": {
								"type": "boolean",
								"defaultValue": false
							},
							"showAudioInput": {
								"type": "boolean",
								"defaultValue": false
							},
							"newSessionCloseVoiceAssistant": {
								"type": "boolean",
								"defaultValue": false
							},
							"chatValue": {
								"type": "string",
								"defaultValue": ""
							},
							"files": {
								"type": "array",
								"defaultValue": [

								]
							},
							"isDragging": {
								"type": "boolean",
								"defaultValue": false
							},
							"placeholderText": {
								"type": "string",
								"defaultValue": "Send a message..."
							},
							"isVoiceAssistantActive": {
								"type": "boolean",
								"defaultValue": false
							}
						},
						"propDefinitions": {
							"sendMessage": {
								"type": "function",
								"isRequired": true
							},
							"inputRef": {
								"type": "object",
								"isRequired": false
							},
							"noInput": {
								"type": "boolean",
								"isRequired": false,
								"defaultValue": false
							},
							"files": {
								"type": "array",
								"isRequired": false,
								"defaultValue": [

								]
							},
							"setFiles": {
								"type": "function",
								"isRequired": false
							},
							"isDragging": {
								"type": "boolean",
								"isRequired": false,
								"defaultValue": false
							},
							"playgroundPage": {
								"type": "boolean",
								"isRequired": false,
								"defaultValue": false
							},
							"stopBuilding": {
								"type": "function",
								"isRequired": false
							},
							"checkSendingOk": {
								"type": "function",
								"isRequired": false
							},
							"handleFileChange": {
								"type": "function",
								"isRequired": false
							},
							"handleButtonClick": {
								"type": "function",
								"isRequired": false
							},
							"handleDeleteFile": {
								"type": "function",
								"isRequired": false
							},
							"currentFlowId": {
								"type": "string",
								"isRequired": false
							}
						},
						"designLanguage": {
							"tokens": {
								"colors": {
									"primary": "#6366f1",
									"background": "#ffffff",
									"muted": "#f8f9fa",
									"border": "#e0e0e0",
									"text": "#374151",
									"textMuted": "#6b7280",
									"error": "#ef4444",
									"success": "#10b981"
								},
								"spacing": {
									"xs": "4px",
									"sm": "8px",
									"md": "12px",
									"lg": "16px",
									"xl": "32px"
								},
								"borderRadius": {
									"sm": "4px",
									"md": "6px",
									"lg": "8px",
									"full": "50%"
								},
								"fontSize": {
									"sm": "12px",
									"base": "14px",
									"lg": "16px",
									"xl": "18px"
								},
								"fontWeight": {
									"normal": "400",
									"medium": "500",
									"semibold": "600"
								},
								"shadows": {
									"sm": "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
									"md": "0 4px 6px -1px rgba(0, 0, 0, 0.1)"
								}
							}
						}
					}
				},
				{
					"id": "voice_assistant",
					"type": "interface",
					"name": "VoiceAssistant",
					"description": "Voice interaction component with real-time audio processing, VAD, and provider selection",
					"component_path": "src/frontend/src/components/VoiceAssistant",
					"uidl_definition_physical": {
						"name": "VoiceAssistant",
						"node": {
							"type": "element",
							"content": {
								"elementType": "container",
								"name": "VoiceAssistantContainer",
								"key": "voice-assistant-container",
								"style": {
									"margin": "auto",
									"display": "flex",
									"width": "100%",
									"maxWidth": "324px",
									"alignItems": "center",
									"justifyContent": "center",
									"borderRadius": "8px",
									"border": "1px solid #e0e0e0",
									"backgroundColor": "#ffffff",
									"padding": "8px 16px",
									"boxShadow": "0 25px 50px -12px rgba(0, 0, 0, 0.25)"
								},
								"attrs": {
									"data-testid": "voice-assistant-container"
								},
								"children": [
									{
										"type": "element",
										"content": {
											"elementType": "container",
											"name": "VoiceAssistantContent",
											"key": "voice-assistant-content",
											"style": {
												"display": "flex",
												"alignItems": "center",
												"gap": {
													"type": "dynamic",
													"content": {
														"referenceType": "comp",
														"id": "hasOpenAIAPIKey ? '12px' : '8px'"
													}
												}
											},
											"children": [
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "MicrophoneButtonContainer",
														"key": "microphone-button-container",
														"style": {
															"position": "relative"
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "button",
																	"name": "MicrophoneToggleButton",
																	"key": "microphone-toggle-button",
																	"style": {
																		"padding": "8px",
																		"backgroundColor": "transparent",
																		"border": "none",
																		"cursor": "pointer",
																		"borderRadius": "4px"
																	},
																	"events": {
																		"click": {
																			"type": "propCall",
																			"calls": "handleToggleRecording"
																		}
																	},
																	"children": [
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "icon",
																						"name": "MicrophoneIcon",
																						"key": "microphone-icon",
																						"style": {
																							"width": "16px",
																							"height": "16px",
																							"color": "#6b7280"
																						}
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "isRecording"
																					}
																				},
																				"value": {
																					"type": "static",
																					"content": true
																				}
																			}
																		},
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "icon",
																						"name": "MicrophoneOffIcon",
																						"key": "microphone-off-icon",
																						"style": {
																							"width": "16px",
																							"height": "16px",
																							"color": "#6b7280"
																						}
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "isRecording"
																					}
																				},
																				"value": {
																					"type": "static",
																					"content": false
																				}
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "WaveformVisualizerContainer",
														"key": "waveform-visualizer-container",
														"style": {
															"display": "flex",
															"height": "20px",
															"flex": "1",
															"alignItems": "center",
															"justifyContent": "center"
														},
														"children": [
															{
																"type": "repeat",
																"content": {
																	"node": {
																		"type": "element",
																		"content": {
																			"elementType": "container",
																			"name": "WaveformBar",
																			"key": "waveform-bar",
																			"style": {
																				"marginLeft": "1px",
																				"marginRight": "1px",
																				"width": "2px",
																				"borderRadius": "4px",
																				"transition": "all 0.2s ease",
																				"backgroundColor": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "comp",
																						"id": "isRecording && soundDetected ? '#ef4444' : '#6b7280'"
																					}
																				},
																				"height": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "local",
																						"id": "height + '%'"
																					}
																				}
																			}
																		}
																	},
																	"dataSource": {
																		"type": "dynamic",
																		"content": {
																			"referenceType": "state",
																			"id": "barHeights"
																		}
																	}
																}
															}
														]
													}
												},
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "RecordingTimeDisplay",
														"key": "recording-time-display",
														"style": {
															"minWidth": "50px",
															"cursor": "default",
															"textAlign": "center",
															"fontFamily": "monospace",
															"fontSize": "14px",
															"fontWeight": "500",
															"color": "#6b7280"
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "text",
																	"name": "RecordingTime",
																	"key": "recording-time",
																	"style": {
																		"fontSize": "14px",
																		"fontFamily": "monospace",
																		"fontWeight": "500"
																	}
																}
															}
														]
													}
												},
												{
													"type": "element",
													"content": {
														"elementType": "container",
														"name": "SettingsDropdownContainer",
														"key": "settings-dropdown-container",
														"style": {
															"position": "relative"
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "container",
																	"name": "SettingsDropdownMenu",
																	"key": "settings-dropdown-menu",
																	"style": {
																		"position": "relative"
																	},
																	"children": [
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "button",
																						"name": "SettingsButton",
																						"key": "settings-button",
																						"style": {
																							"padding": "8px",
																							"backgroundColor": "transparent",
																							"border": "none",
																							"cursor": "pointer",
																							"borderRadius": "4px"
																						},
																						"attrs": {
																							"data-testid": "voice-assistant-settings-icon"
																						},
																						"events": {
																							"click": {
																								"type": "stateChange",
																								"transitions": [
																									{
																										"type": "stateChange",
																										"stateKey": "showSettingsModal",
																										"newValue": true
																									}
																								]
																							}
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "icon",
																									"name": "SettingsIcon",
																									"key": "settings-icon",
																									"style": {
																										"position": "relative",
																										"top": "2px",
																										"width": "16px",
																										"height": "16px",
																										"color": "#6b7280"
																									}
																								}
																							}
																						]
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "hasOpenAIAPIKey"
																					}
																				},
																				"value": {
																					"type": "static",
																					"content": true
																				}
																			}
																		},
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "button",
																						"name": "AddAPIKeyButton",
																						"key": "add-api-key-button",
																						"style": {
																							"width": "32px",
																							"height": "32px",
																							"padding": "8px",
																							"backgroundColor": "#fef3c7",
																							"border": "1px solid #f59e0b",
																							"borderRadius": "6px",
																							"cursor": "pointer"
																						},
																						"attrs": {
																							"data-testid": "voice-assistant-settings-icon-without-openai"
																						},
																						"events": {
																							"click": {
																								"type": "stateChange",
																								"transitions": [
																									{
																										"type": "stateChange",
																										"stateKey": "showSettingsModal",
																										"newValue": true
																									}
																								]
																							}
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "icon",
																									"name": "KeyIcon",
																									"key": "key-icon",
																									"style": {
																										"width": "16px",
																										"height": "16px",
																										"color": "#d97706"
																									}
																								}
																							}
																						]
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "hasOpenAIAPIKey"
																					}
																				},
																				"value": {
																					"type": "static",
																					"content": false
																				}
																			}
																		},
																		{
																			"type": "conditional",
																			"content": {
																				"node": {
																					"type": "element",
																					"content": {
																						"elementType": "container",
																						"name": "SettingsModalOverlay",
																						"key": "settings-modal-overlay",
																						"style": {
																							"position": "absolute",
																							"top": "calc(100% + 18px)",
																							"right": "0",
																							"width": "324px",
																							"backgroundColor": "white",
																							"borderRadius": "12px",
																							"boxShadow": "0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
																							"zIndex": "50",
																							"border": "1px solid #e5e7eb"
																						},
																						"children": [
																							{
																								"type": "element",
																								"content": {
																									"elementType": "container",
																									"name": "SettingsModalContent",
																									"key": "settings-modal-content",
																									"style": {
																										"borderRadius": "24px"
																									},
																									"children": [
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "SettingsModalHeader",
																												"key": "settings-modal-header",
																												"style": {
																													"padding": "16px",
																													"borderBottom": "1px solid #e5e7eb"
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "text",
																															"name": "SettingsModalTitle",
																															"key": "settings-modal-title",
																															"style": {
																																"fontSize": "18px",
																																"fontWeight": "600",
																																"color": "#111827"
																															}
																														}
																													}
																												]
																											}
																										},
																										{
																											"type": "element",
																											"content": {
																												"elementType": "container",
																												"name": "SettingsModalBody",
																												"key": "settings-modal-body",
																												"style": {
																													"width": "100%",
																													"display": "flex",
																													"flexDirection": "column",
																													"gap": "16px",
																													"padding": "16px"
																												},
																												"children": [
																													{
																														"type": "element",
																														"content": {
																															"elementType": "container",
																															"name": "OpenAIAPIKeySection",
																															"key": "openai-api-key-section",
																															"style": {
																																"display": "grid",
																																"width": "100%",
																																"alignItems": "center",
																																"gap": "8px"
																															},
																															"children": [
																																{
																																	"type": "element",
																																	"content": {
																																		"elementType": "container",
																																		"name": "OpenAIKeyLabelContainer",
																																		"key": "openai-key-label-container",
																																		"style": {
																																			"display": "flex",
																																			"alignItems": "center",
																																			"fontSize": "14px"
																																		},
																																		"children": [
																																			{
																																				"type": "element",
																																				"content": {
																																					"elementType": "text",
																																					"name": "OpenAIKeyLabel",
																																					"key": "openai-key-label"
																																				}
																																			},
																																			{
																																				"type": "element",
																																				"content": {
																																					"elementType": "text",
																																					"name": "RequiredAsterisk",
																																					"key": "required-asterisk",
																																					"style": {
																																						"marginLeft": "4px",
																																						"color": "#ef4444"
																																					}
																																				}
																																			},
																																			{
																																				"type": "element",
																																				"content": {
																																					"elementType": "container",
																																					"name": "InfoTooltipContainer",
																																					"key": "info-tooltip-container",
																																					"style": {
																																						"marginLeft": "4px"
																																					},
																																					"children": [
																																						{
																																							"type": "element",
																																							"content": {
																																								"elementType": "icon",
																																								"name": "InfoIcon",
																																								"key": "info-icon",
																																								"style": {
																																									"position": "relative",
																																									"top": "-3px",
																																									"left": "4px",
																																									"width": "14px",
																																									"height": "14px",
																																									"color": "#9ca3af"
																																								}
																																							}
																																						}
																																					]
																																				}
																																			}
																																		]
																																	}
																																},
																																{
																																	"type": "conditional",
																																	"content": {
																																		"node": {
																																			"type": "element",
																																			"content": {
																																				"elementType": "input",
																																				"name": "OpenAIAPIKeyInput",
																																				"key": "openai-api-key-input",
																																				"style": {
																																					"width": "100%",
																																					"padding": "8px 12px",
																																					"border": "1px solid #d1d5db",
																																					"borderRadius": "6px",
																																					"fontSize": "14px",
																																					"outline": "none"
																																				},
																																				"attrs": {
																																					"type": "password",
																																					"id": "openai-api-key",
																																					"placeholder": "Enter your OpenAI API key",
																																					"value": {
																																						"type": "dynamic",
																																						"content": {
																																							"referenceType": "state",
																																							"id": "openaiApiKey"
																																						}
																																					}
																																				},
																																				"events": {
																																					"change": {
																																						"type": "stateChange",
																																						"transitions": [
																																							{
																																								"type": "stateChange",
																																								"stateKey": "openaiApiKey",
																																								"newValue": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "local",
																																										"id": "event.target.value"
																																									}
																																								}
																																							}
																																						]
																																					}
																																				}
																																			}
																																		},
																																		"reference": {
																																			"type": "dynamic",
																																			"content": {
																																				"referenceType": "comp",
																																				"id": "!hasOpenAIAPIKey || isEditingOpenAIKey"
																																			}
																																		}
																																	}
																																},
																																{
																																	"type": "conditional",
																																	"content": {
																																		"node": {
																																			"type": "element",
																																			"content": {
																																				"elementType": "button",
																																				"name": "EditOpenAIKeyButton",
																																				"key": "edit-openai-key-button",
																																				"style": {
																																					"width": "100%",
																																					"padding": "8px 16px",
																																					"backgroundColor": "#6366f1",
																																					"color": "white",
																																					"border": "none",
																																					"borderRadius": "6px",
																																					"cursor": "pointer",
																																					"fontSize": "14px",
																																					"fontWeight": "500"
																																				},
																																				"events": {
																																					"click": {
																																						"type": "stateChange",
																																						"transitions": [
																																							{
																																								"type": "stateChange",
																																								"stateKey": "isEditingOpenAIKey",
																																								"newValue": true
																																							}
																																						]
																																					}
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "text",
																																							"name": "EditButtonText",
																																							"key": "edit-button-text"
																																						}
																																					}
																																				]
																																			}
																																		},
																																		"reference": {
																																			"type": "dynamic",
																																			"content": {
																																				"referenceType": "comp",
																																				"id": "hasOpenAIAPIKey && !isEditingOpenAIKey"
																																			}
																																		}
																																	}
																																}
																															]
																														}
																													},
																													{
																														"type": "conditional",
																														"content": {
																															"node": {
																																"type": "element",
																																"content": {
																																	"elementType": "container",
																																	"name": "ButtonActionsContainer",
																																	"key": "button-actions-container",
																																	"style": {
																																		"display": "flex",
																																		"gap": "8px"
																																	},
																																	"children": [
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "button",
																																				"name": "CancelButton",
																																				"key": "cancel-button",
																																				"style": {
																																					"width": "100%",
																																					"padding": "8px 16px",
																																					"backgroundColor": "#6366f1",
																																					"color": "white",
																																					"border": "none",
																																					"borderRadius": "6px",
																																					"cursor": "pointer",
																																					"fontSize": "14px",
																																					"fontWeight": "500"
																																				},
																																				"attrs": {
																																					"data-testid": "voice-assistant-settings-modal-cancel-button"
																																				},
																																				"events": {
																																					"click": {
																																						"type": "stateChange",
																																						"transitions": [
																																							{
																																								"type": "stateChange",
																																								"stateKey": "isEditingOpenAIKey",
																																								"newValue": false
																																							}
																																						]
																																					}
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "text",
																																							"name": "CancelButtonText",
																																							"key": "cancel-button-text"
																																						}
																																					}
																																				]
																																			}
																																		},
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "button",
																																				"name": "SaveButton",
																																				"key": "save-button",
																																				"style": {
																																					"width": "100%",
																																					"padding": "8px 16px",
																																					"backgroundColor": {
																																						"type": "dynamic",
																																						"content": {
																																							"referenceType": "comp",
																																							"id": "openaiApiKey ? '#10b981' : '#9ca3af'"
																																						}
																																					},
																																					"color": "white",
																																					"border": "none",
																																					"borderRadius": "6px",
																																					"cursor": {
																																						"type": "dynamic",
																																						"content": {
																																							"referenceType": "comp",
																																							"id": "openaiApiKey ? 'pointer' : 'not-allowed'"
																																						}
																																					},
																																					"fontSize": "14px",
																																					"fontWeight": "500"
																																				},
																																				"attrs": {
																																					"data-testid": "voice-assistant-settings-modal-save-button",
																																					"disabled": {
																																						"type": "dynamic",
																																						"content": {
																																							"referenceType": "comp",
																																							"id": "!openaiApiKey"
																																						}
																																					}
																																				},
																																				"events": {
																																					"click": {
																																						"type": "propCall",
																																						"calls": "handleClickSaveApiKey"
																																					}
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "text",
																																							"name": "SaveButtonText",
																																							"key": "save-button-text"
																																						}
																																					}
																																				]
																																			}
																																		}
																																	]
																																}
																															},
																															"reference": {
																																"type": "dynamic",
																																"content": {
																																	"referenceType": "comp",
																																	"id": "!hasOpenAIAPIKey || isEditingOpenAIKey"
																																}
																															}
																														}
																													},
																													{
																														"type": "conditional",
																														"content": {
																															"node": {
																																"type": "element",
																																"content": {
																																	"elementType": "container",
																																	"name": "AdvancedSettingsContainer",
																																	"key": "advanced-settings-container",
																																	"style": {
																																		"display": "flex",
																																		"flexDirection": "column",
																																		"gap": "16px"
																																	},
																																	"children": [
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "container",
																																				"name": "ElevenLabsAPIKeySection",
																																				"key": "elevenlabs-api-key-section",
																																				"style": {
																																					"display": "grid",
																																					"width": "100%",
																																					"alignItems": "center",
																																					"gap": "8px"
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "container",
																																							"name": "ElevenLabsKeyLabelContainer",
																																							"key": "elevenlabs-key-label-container",
																																							"style": {
																																								"display": "flex",
																																								"alignItems": "center",
																																								"fontSize": "14px"
																																							},
																																							"children": [
																																								{
																																									"type": "element",
																																									"content": {
																																										"elementType": "text",
																																										"name": "ElevenLabsKeyLabel",
																																										"key": "elevenlabs-key-label"
																																									}
																																								},
																																								{
																																									"type": "element",
																																									"content": {
																																										"elementType": "icon",
																																										"name": "ElevenLabsInfoIcon",
																																										"key": "elevenlabs-info-icon",
																																										"style": {
																																											"marginLeft": "4px",
																																											"width": "14px",
																																											"height": "14px",
																																											"color": "#9ca3af"
																																										}
																																									}
																																								}
																																							]
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "input",
																																							"name": "ElevenLabsAPIKeyInput",
																																							"key": "elevenlabs-api-key-input",
																																							"style": {
																																								"width": "100%",
																																								"padding": "8px 12px",
																																								"border": "1px solid #d1d5db",
																																								"borderRadius": "6px",
																																								"fontSize": "14px",
																																								"outline": "none"
																																							},
																																							"attrs": {
																																								"type": "password",
																																								"id": "eleven-labs-api-key",
																																								"placeholder": "Enter your ElevenLabs API key",
																																								"value": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "elevenLabsApiKey"
																																									}
																																								}
																																							},
																																							"events": {
																																								"change": {
																																									"type": "stateChange",
																																									"transitions": [
																																										{
																																											"type": "stateChange",
																																											"stateKey": "elevenLabsApiKey",
																																											"newValue": {
																																												"type": "dynamic",
																																												"content": {
																																													"referenceType": "local",
																																													"id": "event.target.value"
																																												}
																																											}
																																										}
																																									]
																																								}
																																							}
																																						}
																																					}
																																				]
																																			}
																																		},
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "container",
																																				"name": "VoiceSelectionSection",
																																				"key": "voice-selection-section",
																																				"style": {
																																					"display": "grid",
																																					"width": "100%",
																																					"alignItems": "center",
																																					"gap": "8px"
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "text",
																																							"name": "VoiceSelectionLabel",
																																							"key": "voice-selection-label",
																																							"style": {
																																								"fontSize": "14px",
																																								"fontWeight": "500"
																																							}
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "select",
																																							"name": "VoiceSelectionDropdown",
																																							"key": "voice-selection-dropdown",
																																							"style": {
																																								"width": "100%",
																																								"padding": "8px 12px",
																																								"border": "1px solid #d1d5db",
																																								"borderRadius": "6px",
																																								"fontSize": "14px",
																																								"outline": "none"
																																							},
																																							"attrs": {
																																								"value": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "selectedVoice"
																																									}
																																								}
																																							},
																																							"events": {
																																								"change": {
																																									"type": "stateChange",
																																									"transitions": [
																																										{
																																											"type": "stateChange",
																																											"stateKey": "selectedVoice",
																																											"newValue": {
																																												"type": "dynamic",
																																												"content": {
																																													"referenceType": "local",
																																													"id": "event.target.value"
																																												}
																																											}
																																										}
																																									]
																																								}
																																							},
																																							"children": [
																																								{
																																									"type": "repeat",
																																									"content": {
																																										"node": {
																																											"type": "element",
																																											"content": {
																																												"elementType": "option",
																																												"name": "VoiceOption",
																																												"key": "voice-option",
																																												"attrs": {
																																													"value": {
																																														"type": "dynamic",
																																														"content": {
																																															"referenceType": "local",
																																															"id": "voice.value"
																																														}
																																													}
																																												}
																																											}
																																										},
																																										"dataSource": {
																																											"type": "dynamic",
																																											"content": {
																																												"referenceType": "state",
																																												"id": "allVoices"
																																											}
																																										}
																																									}
																																								}
																																							]
																																						}
																																					}
																																				]
																																			}
																																		},
																																		{
																																			"type": "element",
																																			"content": {
																																				"elementType": "container",
																																				"name": "LanguageSelectionSection",
																																				"key": "language-selection-section",
																																				"style": {
																																					"display": "grid",
																																					"width": "100%",
																																					"alignItems": "center",
																																					"gap": "8px"
																																				},
																																				"children": [
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "text",
																																							"name": "LanguageSelectionLabel",
																																							"key": "language-selection-label",
																																							"style": {
																																								"fontSize": "14px",
																																								"fontWeight": "500"
																																							}
																																						}
																																					},
																																					{
																																						"type": "element",
																																						"content": {
																																							"elementType": "select",
																																							"name": "LanguageSelectionDropdown",
																																							"key": "language-selection-dropdown",
																																							"style": {
																																								"width": "100%",
																																								"padding": "8px 12px",
																																								"border": "1px solid #d1d5db",
																																								"borderRadius": "6px",
																																								"fontSize": "14px",
																																								"outline": "none"
																																							},
																																							"attrs": {
																																								"value": {
																																									"type": "dynamic",
																																									"content": {
																																										"referenceType": "state",
																																										"id": "preferredLanguage"
																																									}
																																								}
																																							},
																																							"events": {
																																								"change": {
																																									"type": "stateChange",
																																									"transitions": [
																																										{
																																											"type": "stateChange",
																																											"stateKey": "preferredLanguage",
																																											"newValue": {
																																												"type": "dynamic",
																																												"content": {
																																													"referenceType": "local",
																																													"id": "event.target.value"
																																												}
																																											}
																																										}
																																									]
																																								}
																																							}
																																						}
																																					}
																																				]
																																			}
																																		}
																																	]
																																}
																															},
																															"reference": {
																																"type": "dynamic",
																																"content": {
																																	"referenceType": "comp",
																																	"id": "hasOpenAIAPIKey && !isEditingOpenAIKey"
																																}
																															}
																														}
																													}
																												]
																											}
																										}
																									]
																								}
																							}
																						]
																					}
																				},
																				"reference": {
																					"type": "dynamic",
																					"content": {
																						"referenceType": "state",
																						"id": "showSettingsModal"
																					}
																				}
																			}
																		}
																	]
																}
															}
														]
													}
												},
												{
													"type": "element",
													"content": {
														"elementType": "button",
														"name": "CloseVoiceAssistantButton",
														"key": "close-voice-assistant-button",
														"style": {
															"padding": "8px",
															"backgroundColor": "transparent",
															"border": "none",
															"cursor": "pointer",
															"borderRadius": "4px"
														},
														"attrs": {
															"data-testid": "voice-assistant-close-button"
														},
														"events": {
															"click": {
																"type": "propCall",
																"calls": "handleCloseAudioInput"
															}
														},
														"children": [
															{
																"type": "element",
																"content": {
																	"elementType": "icon",
																	"name": "CloseIcon",
																	"key": "close-icon",
																	"style": {
																		"width": "16px",
																		"height": "16px",
																		"color": "#6b7280"
																	}
																}
															}
														]
													}
												}
											]
										}
									}
								]
							}
						},
						"stateDefinitions": {
							"recordingTime": {
								"type": "number",
								"defaultValue": 0
							},
							"isRecording": {
								"type": "boolean",
								"defaultValue": false
							},
							"status": {
								"type": "string",
								"defaultValue": ""
							},
							"message": {
								"type": "string",
								"defaultValue": ""
							},
							"showSettingsModal": {
								"type": "boolean",
								"defaultValue": false
							},
							"addKey": {
								"type": "boolean",
								"defaultValue": false
							},
							"barHeights": {
								"type": "array",
								"defaultValue": [
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20,
									20
								]
							},
							"preferredLanguage": {
								"type": "string",
								"defaultValue": "en-US"
							},
							"isEditingOpenAIKey": {
								"type": "boolean",
								"defaultValue": false
							},
							"soundDetected": {
								"type": "boolean",
								"defaultValue": false
							},
							"hasOpenAIAPIKey": {
								"type": "boolean",
								"defaultValue": false
							},
							"openaiApiKey": {
								"type": "string",
								"defaultValue": ""
							},
							"elevenLabsApiKey": {
								"type": "string",
								"defaultValue": ""
							},
							"selectedVoice": {
								"type": "string",
								"defaultValue": "alloy"
							},
							"allVoices": {
								"type": "array",
								"defaultValue": [

								]
							},
							"selectedMicrophone": {
								"type": "string",
								"defaultValue": ""
							}
						},
						"propDefinitions": {
							"flowId": {
								"type": "string",
								"isRequired": true
							},
							"setShowAudioInput": {
								"type": "function",
								"isRequired": true
							},
							"handleToggleRecording": {
								"type": "function",
								"isRequired": false
							},
							"handleCloseAudioInput": {
								"type": "function",
								"isRequired": false
							},
							"handleClickSaveApiKey": {
								"type": "function",
								"isRequired": false
							},
							"initializeAudio": {
								"type": "function",
								"isRequired": false
							},
							"startRecording": {
								"type": "function",
								"isRequired": false
							},
							"stopRecording": {
								"type": "function",
								"isRequired": false
							},
							"startConversation": {
								"type": "function",
								"isRequired": false
							}
						},
						"designLanguage": {
							"tokens": {
								"colors": {
									"primary": "#6366f1",
									"background": "#ffffff",
									"muted": "#f8f9fa",
									"border": "#e0e0e0",
									"text": "#374151",
									"textMuted": "#6b7280",
									"error": "#ef4444",
									"success": "#10b981",
									"warning": "#f59e0b",
									"warningBg": "#fef3c7",
									"warningBorder": "#f59e0b",
									"warningText": "#d97706",
									"recording": "#ef4444"
								},
								"spacing": {
									"xs": "4px",
									"sm": "8px",
									"md": "12px",
									"lg": "16px",
									"xl": "24px",
									"2xl": "32px"
								},
								"borderRadius": {
									"sm": "4px",
									"md": "6px",
									"lg": "8px",
									"xl": "12px",
									"2xl": "24px",
									"full": "50%"
								},
								"fontSize": {
									"xs": "12px",
									"sm": "14px",
									"base": "16px",
									"lg": "18px",
									"xl": "20px"
								},
								"fontWeight": {
									"normal": "400",
									"medium": "500",
									"semibold": "600"
								},
								"shadows": {
									"sm": "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
									"md": "0 4px 6px -1px rgba(0, 0, 0, 0.1)",
									"lg": "0 10px 15px -3px rgba(0, 0, 0, 0.1)",
									"xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)"
								},
								"transitions": {
									"fast": "0.2s ease",
									"medium": "0.3s ease"
								}
							}
						}
					}
				},
				{
					"id": "folder_sidebar",
					"type": "interface",
					"name": "FolderSidebar",
					"description": "Hierarchical folder navigation with create, rename, delete, and drag-drop organization",
					"component_path": "src/frontend/src/components/FolderSidebarComponent",
					"uidl_definition_physical": {
                        "name": "FolderSidebarComponent",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "FolderSidebarContainer",
                            "key": "folder-sidebar-container",
                            "style": {
                                "display": "flex",
                                "flexDirection": "column",
                                "width": "280px",
                                "height": "100vh",
                                "backgroundColor": "white",
                                "borderRight": "1px solid #e5e7eb"
                            },
                            "attrs": {
                                "data-testid": "project-sidebar"
                            },
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "container",
                                    "name": "SidebarHeader",
                                    "key": "sidebar-header",
                                    "style": {
                                    "padding": "4px 16px",
                                    "borderBottom": "1px solid #f3f4f6"
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "content": {
                                        "node": {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "GetStartedProgressContainer",
                                            "key": "get-started-progress-container",
                                            "style": {
                                                "marginBottom": "16px"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "GetStartedProgressCard",
                                                    "key": "get-started-progress-card",
                                                    "style": {
                                                    "padding": "12px",
                                                    "backgroundColor": "#f8fafc",
                                                    "borderRadius": "8px",
                                                    "border": "1px solid #e2e8f0"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "GetStartedTitle",
                                                        "key": "get-started-title",
                                                        "style": {
                                                            "fontSize": "14px",
                                                            "fontWeight": "600",
                                                            "marginBottom": "8px"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "ProgressActions",
                                                        "key": "progress-actions",
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "gap": "8px"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "button",
                                                                "name": "GithubStarButton",
                                                                "key": "github-star-button",
                                                                "style": {
                                                                "padding": "6px 12px",
                                                                "fontSize": "12px",
                                                                "backgroundColor": "#374151",
                                                                "color": "white",
                                                                "borderRadius": "4px",
                                                                "border": "none",
                                                                "cursor": "pointer"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "StarButtonText",
                                                                    "key": "star-button-text"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "button",
                                                                "name": "DiscordJoinButton",
                                                                "key": "discord-join-button",
                                                                "style": {
                                                                "padding": "6px 12px",
                                                                "fontSize": "12px",
                                                                "backgroundColor": "#5865f2",
                                                                "color": "white",
                                                                "borderRadius": "4px",
                                                                "border": "none",
                                                                "cursor": "pointer"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "DiscordButtonText",
                                                                    "key": "discord-button-text"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "SeparatorLine",
                                                    "key": "separator-line",
                                                    "style": {
                                                    "margin": "4px -16px",
                                                    "width": "280px",
                                                    "height": "1px",
                                                    "backgroundColor": "#e5e7eb"
                                                    }
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "state",
                                            "id": "isDismissedDialog"
                                            }
                                        },
                                        "value": {
                                            "type": "static",
                                            "content": false
                                        },
                                        "condition": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "!isDismissedDialog && userData"
                                            }
                                        }
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "HeaderActionsContainer",
                                        "key": "header-actions-container",
                                        "style": {
                                            "display": "flex",
                                            "alignItems": "center",
                                            "justifyContent": "space-between",
                                            "gap": "8px",
                                            "paddingTop": "8px"
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "button",
                                                "name": "SidebarToggleButton",
                                                "key": "sidebar-toggle-button",
                                                "style": {
                                                "display": "block",
                                                "padding": "8px",
                                                "backgroundColor": "transparent",
                                                "border": "none",
                                                "cursor": "pointer",
                                                "borderRadius": "4px"
                                                },
                                                "attrs": {
                                                "className": "lg:hidden"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "icon",
                                                    "name": "PanelLeftCloseIcon",
                                                    "key": "panel-left-close-icon",
                                                    "style": {
                                                        "width": "16px",
                                                        "height": "16px"
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "text",
                                                "name": "ProjectsTitle",
                                                "key": "projects-title",
                                                "style": {
                                                "flex": "1",
                                                "fontSize": "14px",
                                                "fontWeight": "500"
                                                }
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "HeaderButtonsContainer",
                                                "key": "header-buttons-container",
                                                "style": {
                                                "display": "flex",
                                                "alignItems": "center",
                                                "gap": "4px"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "UploadButtonTooltip",
                                                    "key": "upload-button-tooltip",
                                                    "style": {
                                                        "position": "relative"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "button",
                                                            "name": "UploadFolderButton",
                                                            "key": "upload-folder-button",
                                                            "style": {
                                                            "width": "28px",
                                                            "height": "28px",
                                                            "padding": "0",
                                                            "backgroundColor": "transparent",
                                                            "border": "none",
                                                            "cursor": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "comp",
                                                                "id": "isUpdatingFolder ? 'not-allowed' : 'pointer'"
                                                                }
                                                            },
                                                            "borderRadius": "4px",
                                                            "color": "#71717a"
                                                            },
                                                            "attrs": {
                                                            "disabled": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "isUpdatingFolder"
                                                                }
                                                            }
                                                            },
                                                            "events": {
                                                            "click": {
                                                                "type": "propCall",
                                                                "calls": "handleUploadFlowsToFolder"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "icon",
                                                                "name": "UploadIcon",
                                                                "key": "upload-icon",
                                                                "style": {
                                                                    "width": "16px",
                                                                    "height": "16px"
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "AddButtonTooltip",
                                                    "key": "add-button-tooltip",
                                                    "style": {
                                                        "position": "relative"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "button",
                                                            "name": "AddNewProjectButton",
                                                            "key": "add-new-project-button",
                                                            "style": {
                                                            "width": "28px",
                                                            "height": "28px",
                                                            "padding": "0",
                                                            "backgroundColor": "transparent",
                                                            "border": "none",
                                                            "cursor": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "comp",
                                                                "id": "isUpdatingFolder ? 'not-allowed' : 'pointer'"
                                                                }
                                                            },
                                                            "borderRadius": "4px",
                                                            "color": "#71717a"
                                                            },
                                                            "attrs": {
                                                            "data-testid": "add-project-button",
                                                            "disabled": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "isUpdatingFolder"
                                                                }
                                                            }
                                                            },
                                                            "events": {
                                                            "click": {
                                                                "type": "propCall",
                                                                "calls": "addNewFolder"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "LoadingSpinner",
                                                                    "key": "loading-spinner",
                                                                    "style": {
                                                                        "width": "16px",
                                                                        "height": "16px",
                                                                        "border": "2px solid #e5e7eb",
                                                                        "borderTop": "2px solid #6366f1",
                                                                        "borderRadius": "50%",
                                                                        "animation": "spin 1s linear infinite"
                                                                    }
                                                                    }
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isPending"
                                                                    }
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "icon",
                                                                    "name": "PlusIcon",
                                                                    "key": "plus-icon",
                                                                    "style": {
                                                                        "width": "16px",
                                                                        "height": "16px"
                                                                    }
                                                                    }
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isPending"
                                                                    }
                                                                },
                                                                "value": {
                                                                    "type": "static",
                                                                    "content": false
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "container",
                                    "name": "SidebarContent",
                                    "key": "sidebar-content",
                                    "style": {
                                    "flex": "1",
                                    "overflow": "auto"
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "ProjectsListContainer",
                                        "key": "projects-list-container",
                                        "style": {
                                            "padding": "8px 16px",
                                            "paddingTop": "8px"
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "ProjectsMenu",
                                                "key": "projects-menu",
                                                "style": {
                                                "display": "flex",
                                                "flexDirection": "column",
                                                "gap": "2px"
                                                },
                                                "children": [
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "repeat",
                                                        "content": {
                                                        "node": {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "ProjectMenuItem",
                                                            "key": "project-menu-item",
                                                            "style": {
                                                                "position": "relative",
                                                                "marginBottom": "2px"
                                                            },
                                                            "attrs": {
                                                                "className": "group/menu-button"
                                                            },
                                                            "events": {
                                                                "mouseEnter": {
                                                                "type": "stateChange",
                                                                "transitions": [
                                                                    {
                                                                    "type": "stateChange",
                                                                    "stateKey": "hoveredFolderId",
                                                                    "newValue": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "local",
                                                                        "id": "item.id"
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                },
                                                                "mouseLeave": {
                                                                "type": "stateChange",
                                                                "transitions": [
                                                                    {
                                                                    "type": "stateChange",
                                                                    "stateKey": "hoveredFolderId",
                                                                    "newValue": null
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "ProjectItemContainer",
                                                                    "key": "project-item-container",
                                                                    "style": {
                                                                    "position": "relative",
                                                                    "display": "flex",
                                                                    "width": "100%"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "button",
                                                                        "name": "ProjectButton",
                                                                        "key": "project-button",
                                                                        "style": {
                                                                            "flexGrow": "1",
                                                                            "paddingRight": "32px",
                                                                            "padding": "8px 12px",
                                                                            "backgroundColor": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "comp",
                                                                                "id": "checkPathName(item.id) ? '#f3f4f6' : (hoveredFolderId === item.id ? '#f9fafb' : 'transparent')"
                                                                            }
                                                                            },
                                                                            "borderRadius": "6px",
                                                                            "border": "none",
                                                                            "cursor": "pointer",
                                                                            "textAlign": "left",
                                                                            "transition": "background-color 0.2s ease"
                                                                        },
                                                                        "attrs": {
                                                                            "data-testid": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "'sidebar-nav-' + item.name"
                                                                            }
                                                                            }
                                                                        },
                                                                        "events": {
                                                                            "click": {
                                                                            "type": "propCall",
                                                                            "calls": "handleChangeFolder",
                                                                            "args": [
                                                                                {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "item.id"
                                                                                }
                                                                                }
                                                                            ]
                                                                            },
                                                                            "dragOver": {
                                                                            "type": "propCall",
                                                                            "calls": "dragOver"
                                                                            },
                                                                            "dragEnter": {
                                                                            "type": "propCall",
                                                                            "calls": "dragEnter"
                                                                            },
                                                                            "dragLeave": {
                                                                            "type": "propCall",
                                                                            "calls": "dragLeave"
                                                                            },
                                                                            "drop": {
                                                                            "type": "propCall",
                                                                            "calls": "onDrop"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "ProjectButtonContent",
                                                                                "key": "project-button-content",
                                                                                "style": {
                                                                                "display": "flex",
                                                                                "width": "100%",
                                                                                "alignItems": "center",
                                                                                "justifyContent": "space-between",
                                                                                "gap": "8px"
                                                                                },
                                                                                "events": {
                                                                                "doubleClick": {
                                                                                    "type": "propCall",
                                                                                    "calls": "handleDoubleClick"
                                                                                }
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "ProjectNameContainer",
                                                                                    "key": "project-name-container",
                                                                                    "style": {
                                                                                        "display": "flex",
                                                                                        "flex": "1",
                                                                                        "alignItems": "center",
                                                                                        "gap": "8px"
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "conditional",
                                                                                        "content": {
                                                                                            "node": {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "input",
                                                                                                "name": "EditProjectNameInput",
                                                                                                "key": "edit-project-name-input",
                                                                                                "style": {
                                                                                                "width": "100%",
                                                                                                "padding": "4px 8px",
                                                                                                "border": "1px solid #d1d5db",
                                                                                                "borderRadius": "4px",
                                                                                                "fontSize": "14px",
                                                                                                "outline": "none"
                                                                                                },
                                                                                                "attrs": {
                                                                                                "type": "text",
                                                                                                "value": {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "foldersNames[item.name]"
                                                                                                    }
                                                                                                }
                                                                                                },
                                                                                                "events": {
                                                                                                "change": {
                                                                                                    "type": "propCall",
                                                                                                    "calls": "handleEditFolderName"
                                                                                                },
                                                                                                "keyDown": {
                                                                                                    "type": "propCall",
                                                                                                    "calls": "handleKeyDownFn"
                                                                                                },
                                                                                                "blur": {
                                                                                                    "type": "propCall",
                                                                                                    "calls": "handleEditNameFolder"
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            },
                                                                                            "reference": {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "comp",
                                                                                                "id": "editFolderName?.edit && !isUpdatingFolder"
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                        },
                                                                                        {
                                                                                        "type": "conditional",
                                                                                        "content": {
                                                                                            "node": {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "ProjectName",
                                                                                                "key": "project-name",
                                                                                                "style": {
                                                                                                "display": "block",
                                                                                                "width": "0",
                                                                                                "flexGrow": "1",
                                                                                                "overflow": "hidden",
                                                                                                "textOverflow": "ellipsis",
                                                                                                "whiteSpace": "nowrap",
                                                                                                "fontSize": "14px",
                                                                                                "opacity": "1"
                                                                                                }
                                                                                            }
                                                                                            },
                                                                                            "reference": {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "comp",
                                                                                                "id": "!(editFolderName?.edit && !isUpdatingFolder)"
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "ProjectOptionsContainer",
                                                                        "key": "project-options-container",
                                                                        "style": {
                                                                            "position": "absolute",
                                                                            "right": "8px",
                                                                            "top": "7px",
                                                                            "display": "flex",
                                                                            "alignItems": "center"
                                                                        },
                                                                        "events": {
                                                                            "click": {
                                                                            "type": "stopPropagation"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "ProjectOptionsDropdown",
                                                                                "key": "project-options-dropdown",
                                                                                "style": {
                                                                                "position": "relative"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "button",
                                                                                    "name": "OptionsMenuTrigger",
                                                                                    "key": "options-menu-trigger",
                                                                                    "style": {
                                                                                        "width": "fit-content",
                                                                                        "padding": "4px",
                                                                                        "backgroundColor": "transparent",
                                                                                        "border": "none",
                                                                                        "cursor": "pointer",
                                                                                        "borderRadius": "4px"
                                                                                    },
                                                                                    "attrs": {
                                                                                        "data-testid": "more-options-button"
                                                                                    },
                                                                                    "events": {
                                                                                        "click": {
                                                                                        "type": "stateChange",
                                                                                        "transitions": [
                                                                                            {
                                                                                            "type": "stateChange",
                                                                                            "stateKey": "showOptionsMenu",
                                                                                            "newValue": true
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "icon",
                                                                                            "name": "MoreHorizontalIcon",
                                                                                            "key": "more-horizontal-icon",
                                                                                            "style": {
                                                                                            "width": "16px",
                                                                                            "height": "16px",
                                                                                            "strokeWidth": "1.5",
                                                                                            "padding": "0",
                                                                                            "color": "#6b7280",
                                                                                            "display": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                "referenceType": "comp",
                                                                                                "id": "checkPathName(item.id) ? 'block' : 'hidden'"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "conditional",
                                                                                    "content": {
                                                                                    "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "OptionsMenuContent",
                                                                                        "key": "options-menu-content",
                                                                                        "style": {
                                                                                            "position": "absolute",
                                                                                            "top": "100%",
                                                                                            "right": "0",
                                                                                            "backgroundColor": "white",
                                                                                            "border": "1px solid #e5e7eb",
                                                                                            "borderRadius": "6px",
                                                                                            "boxShadow": "0 4px 6px -1px rgba(0, 0, 0, 0.1)",
                                                                                            "zIndex": "50",
                                                                                            "minWidth": "120px"
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "conditional",
                                                                                            "content": {
                                                                                                "node": {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "button",
                                                                                                    "name": "RenameProjectOption",
                                                                                                    "key": "rename-project-option",
                                                                                                    "style": {
                                                                                                    "width": "100%",
                                                                                                    "padding": "8px 12px",
                                                                                                    "fontSize": "12px",
                                                                                                    "textAlign": "left",
                                                                                                    "backgroundColor": "transparent",
                                                                                                    "border": "none",
                                                                                                    "cursor": "pointer",
                                                                                                    "borderRadius": "4px"
                                                                                                    },
                                                                                                    "attrs": {
                                                                                                    "data-testid": "btn-rename-project"
                                                                                                    },
                                                                                                    "events": {
                                                                                                    "click": {
                                                                                                        "type": "propCall",
                                                                                                        "calls": "handleSelectFolderToRename"
                                                                                                    }
                                                                                                    },
                                                                                                    "children": [
                                                                                                    {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                        "elementType": "container",
                                                                                                        "name": "RenameOptionContent",
                                                                                                        "key": "rename-option-content",
                                                                                                        "style": {
                                                                                                            "display": "flex",
                                                                                                            "alignItems": "center",
                                                                                                            "gap": "8px"
                                                                                                        },
                                                                                                        "children": [
                                                                                                            {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                                "elementType": "icon",
                                                                                                                "name": "SquarePenIcon",
                                                                                                                "key": "square-pen-icon",
                                                                                                                "style": {
                                                                                                                "width": "14px",
                                                                                                                "height": "14px"
                                                                                                                }
                                                                                                            }
                                                                                                            },
                                                                                                            {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                                "elementType": "text",
                                                                                                                "name": "RenameText",
                                                                                                                "key": "rename-text"
                                                                                                            }
                                                                                                            }
                                                                                                        ]
                                                                                                        }
                                                                                                    }
                                                                                                    ]
                                                                                                }
                                                                                                },
                                                                                                "reference": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "comp",
                                                                                                    "id": "item.name !== DEFAULT_FOLDER"
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "button",
                                                                                                "name": "DownloadProjectOption",
                                                                                                "key": "download-project-option",
                                                                                                "style": {
                                                                                                "width": "100%",
                                                                                                "padding": "8px 12px",
                                                                                                "fontSize": "12px",
                                                                                                "textAlign": "left",
                                                                                                "backgroundColor": "transparent",
                                                                                                "border": "none",
                                                                                                "cursor": "pointer",
                                                                                                "borderRadius": "4px"
                                                                                                },
                                                                                                "attrs": {
                                                                                                "data-testid": "btn-download-project"
                                                                                                },
                                                                                                "events": {
                                                                                                "click": {
                                                                                                    "type": "propCall",
                                                                                                    "calls": "handleDownloadFolder"
                                                                                                }
                                                                                                },
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "DownloadOptionContent",
                                                                                                    "key": "download-option-content",
                                                                                                    "style": {
                                                                                                        "display": "flex",
                                                                                                        "alignItems": "center",
                                                                                                        "gap": "8px"
                                                                                                    },
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "icon",
                                                                                                            "name": "DownloadIcon",
                                                                                                            "key": "download-icon",
                                                                                                            "style": {
                                                                                                            "width": "14px",
                                                                                                            "height": "14px"
                                                                                                            }
                                                                                                        }
                                                                                                        },
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "text",
                                                                                                            "name": "DownloadText",
                                                                                                            "key": "download-text"
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "conditional",
                                                                                            "content": {
                                                                                                "node": {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "button",
                                                                                                    "name": "DeleteProjectOption",
                                                                                                    "key": "delete-project-option",
                                                                                                    "style": {
                                                                                                    "width": "100%",
                                                                                                    "padding": "8px 12px",
                                                                                                    "fontSize": "12px",
                                                                                                    "textAlign": "left",
                                                                                                    "backgroundColor": "transparent",
                                                                                                    "border": "none",
                                                                                                    "cursor": "pointer",
                                                                                                    "borderRadius": "4px",
                                                                                                    "color": "#dc2626"
                                                                                                    },
                                                                                                    "attrs": {
                                                                                                    "data-testid": "btn-delete-project"
                                                                                                    },
                                                                                                    "events": {
                                                                                                    "click": {
                                                                                                        "type": "propCall",
                                                                                                        "calls": "handleDeleteFolder"
                                                                                                    }
                                                                                                    },
                                                                                                    "children": [
                                                                                                    {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                        "elementType": "container",
                                                                                                        "name": "DeleteOptionContent",
                                                                                                        "key": "delete-option-content",
                                                                                                        "style": {
                                                                                                            "display": "flex",
                                                                                                            "alignItems": "center",
                                                                                                            "gap": "8px"
                                                                                                        },
                                                                                                        "children": [
                                                                                                            {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                                "elementType": "icon",
                                                                                                                "name": "TrashIcon",
                                                                                                                "key": "trash-icon",
                                                                                                                "style": {
                                                                                                                "width": "14px",
                                                                                                                "height": "14px"
                                                                                                                }
                                                                                                            }
                                                                                                            },
                                                                                                            {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                                "elementType": "text",
                                                                                                                "name": "DeleteText",
                                                                                                                "key": "delete-text"
                                                                                                            }
                                                                                                            }
                                                                                                        ]
                                                                                                        }
                                                                                                    }
                                                                                                    ]
                                                                                                }
                                                                                                },
                                                                                                "reference": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "comp",
                                                                                                    "id": "index > 0"
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    },
                                                                                    "reference": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "showOptionsMenu"
                                                                                        }
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "folders"
                                                            }
                                                        }
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "loading"
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "static",
                                                        "content": false
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "SkeletonLoadingContainer",
                                                        "key": "skeleton-loading-container",
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "gap": "8px"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "SkeletonItem1",
                                                                "key": "skeleton-item-1",
                                                                "style": {
                                                                "height": "40px",
                                                                "backgroundColor": "#f3f4f6",
                                                                "borderRadius": "6px",
                                                                "animation": "pulse 1.5s ease-in-out infinite"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "SkeletonItem2",
                                                                "key": "skeleton-item-2",
                                                                "style": {
                                                                "height": "40px",
                                                                "backgroundColor": "#f3f4f6",
                                                                "borderRadius": "6px",
                                                                "animation": "pulse 1.5s ease-in-out infinite"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "loading"
                                                        }
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "FlexSpacer",
                                        "key": "flex-spacer",
                                        "style": {
                                            "flex": "1"
                                        }
                                        }
                                    },
                                    {
                                        "type": "conditional",
                                        "content": {
                                        "node": {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "MCPServerNoticeContainer",
                                            "key": "mcp-server-notice-container",
                                            "style": {
                                                "padding": "8px"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "MCPNoticeCard",
                                                    "key": "mcp-notice-card",
                                                    "style": {
                                                    "padding": "12px",
                                                    "backgroundColor": "#fef3c7",
                                                    "borderRadius": "8px",
                                                    "border": "1px solid #f59e0b"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "MCPNoticeTitle",
                                                        "key": "mcp-notice-title",
                                                        "style": {
                                                            "fontSize": "14px",
                                                            "fontWeight": "600",
                                                            "marginBottom": "4px"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "MCPNoticeMessage",
                                                        "key": "mcp-notice-message",
                                                        "style": {
                                                            "fontSize": "12px",
                                                            "color": "#92400e"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "button",
                                                        "name": "DismissMCPNoticeButton",
                                                        "key": "dismiss-mcp-notice-button",
                                                        "style": {
                                                            "marginTop": "8px",
                                                            "padding": "4px 8px",
                                                            "fontSize": "12px",
                                                            "backgroundColor": "#d97706",
                                                            "color": "white",
                                                            "border": "none",
                                                            "borderRadius": "4px",
                                                            "cursor": "pointer"
                                                        },
                                                        "events": {
                                                            "click": {
                                                            "type": "propCall",
                                                            "calls": "handleDismissMcpDialog"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "DismissButtonText",
                                                                "key": "dismiss-button-text"
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "ENABLE_MCP_NOTICE && !isDismissedMcpDialog"
                                            }
                                        }
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "conditional",
                                "content": {
                                    "node": {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "SidebarFooter",
                                        "key": "sidebar-footer",
                                        "style": {
                                        "borderTop": "1px solid #e5e7eb",
                                        "padding": "8px"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "FooterContent",
                                            "key": "footer-content",
                                            "style": {
                                                "display": "grid",
                                                "width": "100%",
                                                "alignItems": "center",
                                                "gap": "8px"
                                            },
                                            "children": [
                                                {
                                                "type": "conditional",
                                                "content": {
                                                    "node": {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "button",
                                                        "name": "CustomStoreButton",
                                                        "key": "custom-store-button",
                                                        "style": {
                                                        "width": "100%",
                                                        "padding": "8px 12px",
                                                        "backgroundColor": "transparent",
                                                        "border": "none",
                                                        "cursor": "pointer",
                                                        "borderRadius": "6px",
                                                        "textAlign": "left",
                                                        "fontSize": "14px"
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "StoreButtonText",
                                                            "key": "store-button-text"
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    },
                                                    "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "comp",
                                                        "id": "ENABLE_DATASTAX_LANGFLOW"
                                                    }
                                                    }
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "button",
                                                    "name": "MyFilesButton",
                                                    "key": "my-files-button",
                                                    "style": {
                                                    "width": "100%",
                                                    "padding": "8px 12px",
                                                    "backgroundColor": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "checkPathFiles ? '#f3f4f6' : 'transparent'"
                                                        }
                                                    },
                                                    "border": "none",
                                                    "cursor": "pointer",
                                                    "borderRadius": "6px",
                                                    "textAlign": "left",
                                                    "fontSize": "14px",
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "gap": "8px"
                                                    },
                                                    "events": {
                                                    "click": {
                                                        "type": "propCall",
                                                        "calls": "handleFilesClick"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "icon",
                                                        "name": "FileIcon",
                                                        "key": "file-icon",
                                                        "style": {
                                                            "width": "16px",
                                                            "height": "16px"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "MyFilesText",
                                                        "key": "my-files-text"
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    },
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "comp",
                                        "id": "ENABLE_FILE_MANAGEMENT"
                                    }
                                    }
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "loading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "folders": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "foldersNames": {
                            "type": "object",
                            "defaultValue": {}
                            },
                            "editFolders": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "hoveredFolderId": {
                            "type": "string",
                            "defaultValue": null
                            },
                            "isDismissedDialog": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isGithubStarred": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isDiscordJoined": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isDismissedMcpDialog": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isUpdatingFolder": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isPending": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "showOptionsMenu": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "folderIdDragging": {
                            "type": "string",
                            "defaultValue": null
                            },
                            "myCollectionId": {
                            "type": "string",
                            "defaultValue": ""
                            }
                        },
                        "propDefinitions": {
                            "handleChangeFolder": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleDeleteFolder": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleFilesClick": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleUploadFlowsToFolder": {
                            "type": "function",
                            "isRequired": false
                            },
                            "addNewFolder": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleDownloadFolder": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleEditFolderName": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleEditNameFolder": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleDoubleClick": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleSelectFolderToRename": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleKeyDownFn": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleDismissMcpDialog": {
                            "type": "function",
                            "isRequired": false
                            },
                            "checkPathName": {
                            "type": "function",
                            "isRequired": false
                            },
                            "dragOver": {
                            "type": "function",
                            "isRequired": false
                            },
                            "dragEnter": {
                            "type": "function",
                            "isRequired": false
                            },
                            "dragLeave": {
                            "type": "function",
                            "isRequired": false
                            },
                            "onDrop": {
                            "type": "function",
                            "isRequired": false
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "primary": "#6366f1",
                                "background": "#ffffff",
                                "muted": "#f8f9fa",
                                "border": "#e5e7eb",
                                "text": "#374151",
                                "textMuted": "#6b7280",
                                "accent": "#f3f4f6",
                                "accentHover": "#f9fafb",
                                "error": "#dc2626",
                                "warning": "#f59e0b",
                                "warningBg": "#fef3c7",
                                "warningText": "#92400e",
                                "github": "#374151",
                                "discord": "#5865f2",
                                "skeleton": "#f3f4f6"
                            },
                            "spacing": {
                                "xs": "4px",
                                "sm": "8px",
                                "md": "12px",
                                "lg": "16px",
                                "xl": "32px"
                            },
                            "borderRadius": {
                                "sm": "4px",
                                "md": "6px",
                                "lg": "8px"
                            },
                            "fontSize": {
                                "xs": "12px",
                                "sm": "14px",
                                "base": "16px",
                                "lg": "18px"
                            },
                            "fontWeight": {
                                "normal": "400",
                                "medium": "500",
                                "semibold": "600"
                            },
                            "shadows": {
                                "sm": "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
                                "md": "0 4px 6px -1px rgba(0, 0, 0, 0.1)"
                            },
                            "animations": {
                                "pulse": "pulse 1.5s ease-in-out infinite",
                                "spin": "spin 1s linear infinite"
                            }
                            }
                        }
                        }
				},
				{
					"id": "flow_grid",
					"type": "interface",
					"name": "FlowGrid",
					"description": "Responsive grid display of flows with cards, thumbnails, actions, and bulk operations",
					"component_path": "src/frontend/src/components/FlowGrid",
					"uidl_definition_physical": {
                        "name": "FlowGrid",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "FlowGridContainer",
                            "key": "flow-grid-container",
                            "style": {
                                "display": "flex",
                                "height": "100%",
                                "width": "100%",
                                "flexDirection": "column",
                                "overflowY": "auto"
                            },
                            "attrs": {
                                "data-testid": "cards-wrapper"
                            },
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "container",
                                    "name": "MainContentWrapper",
                                    "key": "main-content-wrapper",
                                    "style": {
                                    "display": "flex",
                                    "height": "100%",
                                    "width": "100%",
                                    "flexDirection": "column"
                                    },
                                    "attrs": {
                                    "className": "3xl:container"
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "content": {
                                        "node": {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "CustomBannerContainer",
                                            "key": "custom-banner-container",
                                            "style": {
                                                "width": "100%",
                                                "padding": "16px",
                                                "backgroundColor": "#f8fafc",
                                                "borderRadius": "8px",
                                                "marginBottom": "16px"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "text",
                                                    "name": "BannerText",
                                                    "key": "banner-text",
                                                    "style": {
                                                    "fontSize": "14px",
                                                    "color": "#374151"
                                                    }
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "ENABLE_DATASTAX_LANGFLOW"
                                            }
                                        }
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "MainContentArea",
                                        "key": "main-content-area",
                                        "style": {
                                            "display": "flex",
                                            "flex": "1",
                                            "flexDirection": "column",
                                            "justifyContent": "flex-start",
                                            "padding": "16px"
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "ContentContainer",
                                                "key": "content-container",
                                                "style": {
                                                "display": "flex",
                                                "height": "100%",
                                                "flexDirection": "column",
                                                "justifyContent": "flex-start"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "HeaderSection",
                                                    "key": "header-section",
                                                    "style": {
                                                        "width": "100%"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "TitleSection",
                                                            "key": "title-section",
                                                            "style": {
                                                            "display": "flex",
                                                            "alignItems": "center",
                                                            "paddingBottom": "16px",
                                                            "fontSize": "14px",
                                                            "fontWeight": "500"
                                                            },
                                                            "attrs": {
                                                            "data-testid": "mainpage_title"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "container",
                                                                "name": "SidebarTriggerContainer",
                                                                "key": "sidebar-trigger-container",
                                                                "style": {
                                                                    "height": "28px",
                                                                    "width": "40px",
                                                                    "transition": "all 0.3s ease"
                                                                },
                                                                "attrs": {
                                                                    "className": "lg:hidden"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "LogoContainer",
                                                                        "key": "logo-container",
                                                                        "style": {
                                                                        "position": "relative",
                                                                        "left": "0",
                                                                        "opacity": "1",
                                                                        "transition": "all 0.3s ease"
                                                                        },
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "button",
                                                                            "name": "SidebarToggleButton",
                                                                            "key": "sidebar-toggle-button",
                                                                            "style": {
                                                                                "padding": "8px",
                                                                                "backgroundColor": "transparent",
                                                                                "border": "none",
                                                                                "cursor": "pointer",
                                                                                "borderRadius": "4px"
                                                                            },
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "image",
                                                                                    "name": "LangflowLogo",
                                                                                    "key": "langflow-logo",
                                                                                    "style": {
                                                                                    "height": "16px",
                                                                                    "width": "16px"
                                                                                    },
                                                                                    "attrs": {
                                                                                    "src": "/assets/LangflowLogo.svg",
                                                                                    "alt": "Langflow logo"
                                                                                    }
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "FolderTitle",
                                                                "key": "folder-title",
                                                                "style": {
                                                                    "fontSize": "14px",
                                                                    "fontWeight": "500"
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "node": {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "TabsAndActionsContainer",
                                                                "key": "tabs-and-actions-container",
                                                                "style": {
                                                                "width": "100%"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "TabsContainer",
                                                                    "key": "tabs-container",
                                                                    "style": {
                                                                        "display": "flex",
                                                                        "flexDirection": "row-reverse",
                                                                        "paddingBottom": "16px"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "container",
                                                                            "name": "TabBorderLine",
                                                                            "key": "tab-border-line",
                                                                            "style": {
                                                                            "width": "100%",
                                                                            "borderBottom": "1px solid #e5e7eb"
                                                                            }
                                                                        }
                                                                        },
                                                                        {
                                                                        "type": "repeat",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "button",
                                                                                "name": "TabButton",
                                                                                "key": "tab-button",
                                                                                "style": {
                                                                                "borderBottom": {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "comp",
                                                                                    "id": "flowType === tabType ? '2px solid #111827' : '1px solid #e5e7eb'"
                                                                                    }
                                                                                },
                                                                                "color": {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "comp",
                                                                                    "id": "flowType === tabType ? '#111827' : '#6b7280'"
                                                                                    }
                                                                                },
                                                                                "whiteSpace": "nowrap",
                                                                                "padding": "8px",
                                                                                "paddingTop": "4px",
                                                                                "paddingBottom": "8px",
                                                                                "fontSize": "14px",
                                                                                "backgroundColor": "transparent",
                                                                                "border": "none",
                                                                                "cursor": "pointer"
                                                                                },
                                                                                "attrs": {
                                                                                "data-testid": {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "tabType + '-btn'"
                                                                                    }
                                                                                }
                                                                                },
                                                                                "events": {
                                                                                "click": {
                                                                                    "type": "stateChange",
                                                                                    "transitions": [
                                                                                    {
                                                                                        "type": "stateChange",
                                                                                        "stateKey": "flowType",
                                                                                        "newValue": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "local",
                                                                                            "id": "tabType"
                                                                                        }
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "TabContent",
                                                                                    "key": "tab-content",
                                                                                    "style": {
                                                                                        "marginBottom": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "comp",
                                                                                            "id": "flowType === tabType ? '-1px' : '0'"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "text",
                                                                                            "name": "TabLabel",
                                                                                            "key": "tab-label"
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            "dataSource": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "tabTypes"
                                                                            }
                                                                            }
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                    "node": {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "SearchAndActionsContainer",
                                                                        "key": "search-and-actions-container",
                                                                        "style": {
                                                                            "display": "flex",
                                                                            "justifyContent": "space-between"
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "SearchAndViewControls",
                                                                                "key": "search-and-view-controls",
                                                                                "style": {
                                                                                "display": "flex",
                                                                                "width": "100%"
                                                                                },
                                                                                "attrs": {
                                                                                "className": "xl:w-5/12"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "SearchInputContainer",
                                                                                    "key": "search-input-container",
                                                                                    "style": {
                                                                                        "position": "relative",
                                                                                        "marginRight": "8px",
                                                                                        "flex": "1"
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "input",
                                                                                            "name": "SearchInput",
                                                                                            "key": "search-input",
                                                                                            "style": {
                                                                                            "width": "100%",
                                                                                            "padding": "8px 12px 8px 36px",
                                                                                            "border": "1px solid #d1d5db",
                                                                                            "borderRadius": "6px",
                                                                                            "fontSize": "14px",
                                                                                            "outline": "none"
                                                                                            },
                                                                                            "attrs": {
                                                                                            "data-testid": "search-store-input",
                                                                                            "type": "text",
                                                                                            "placeholder": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                "referenceType": "comp",
                                                                                                "id": "'Search ' + flowType + '...'"
                                                                                                }
                                                                                            },
                                                                                            "value": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                "referenceType": "state",
                                                                                                "id": "debouncedSearch"
                                                                                                }
                                                                                            }
                                                                                            },
                                                                                            "events": {
                                                                                            "change": {
                                                                                                "type": "propCall",
                                                                                                "calls": "handleSearch"
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                        },
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "icon",
                                                                                            "name": "SearchIcon",
                                                                                            "key": "search-icon",
                                                                                            "style": {
                                                                                            "position": "absolute",
                                                                                            "left": "12px",
                                                                                            "top": "50%",
                                                                                            "transform": "translateY(-50%)",
                                                                                            "width": "16px",
                                                                                            "height": "16px",
                                                                                            "color": "#9ca3af"
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "ViewToggleContainer",
                                                                                    "key": "view-toggle-container",
                                                                                    "style": {
                                                                                        "position": "relative",
                                                                                        "marginRight": "8px",
                                                                                        "display": "flex",
                                                                                        "height": "fit-content",
                                                                                        "borderRadius": "8px",
                                                                                        "border": "1px solid #f3f4f6",
                                                                                        "backgroundColor": "#f3f4f6"
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "container",
                                                                                            "name": "ViewToggleSlider",
                                                                                            "key": "view-toggle-slider",
                                                                                            "style": {
                                                                                            "position": "absolute",
                                                                                            "top": "2px",
                                                                                            "height": "32px",
                                                                                            "width": "32px",
                                                                                            "transform": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                "referenceType": "comp",
                                                                                                "id": "view === 'list' ? 'translateX(2px)' : 'translateX(38px)'"
                                                                                                }
                                                                                            },
                                                                                            "borderRadius": "6px",
                                                                                            "backgroundColor": "white",
                                                                                            "boxShadow": "0 1px 3px 0 rgba(0, 0, 0, 0.1)",
                                                                                            "transition": "transform 0.3s ease"
                                                                                            }
                                                                                        }
                                                                                        },
                                                                                        {
                                                                                        "type": "repeat",
                                                                                        "content": {
                                                                                            "node": {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "button",
                                                                                                "name": "ViewToggleButton",
                                                                                                "key": "view-toggle-button",
                                                                                                "style": {
                                                                                                "position": "relative",
                                                                                                "zIndex": "10",
                                                                                                "margin": "2px",
                                                                                                "flex": "1",
                                                                                                "borderRadius": "8px",
                                                                                                "padding": "8px",
                                                                                                "backgroundColor": "transparent",
                                                                                                "border": "none",
                                                                                                "cursor": "pointer",
                                                                                                "color": {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "comp",
                                                                                                    "id": "view === viewType ? '#111827' : '#6b7280'"
                                                                                                    }
                                                                                                }
                                                                                                },
                                                                                                "events": {
                                                                                                "click": {
                                                                                                    "type": "stateChange",
                                                                                                    "transitions": [
                                                                                                    {
                                                                                                        "type": "stateChange",
                                                                                                        "stateKey": "view",
                                                                                                        "newValue": {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                            "referenceType": "local",
                                                                                                            "id": "viewType"
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                                    ]
                                                                                                }
                                                                                                },
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "icon",
                                                                                                    "name": "ViewIcon",
                                                                                                    "key": "view-icon",
                                                                                                    "style": {
                                                                                                        "width": "16px",
                                                                                                        "height": "16px"
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            },
                                                                                            "dataSource": {
                                                                                            "type": "static",
                                                                                            "content": ["list", "grid"]
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "ActionsContainer",
                                                                                "key": "actions-container",
                                                                                "style": {
                                                                                "display": "flex",
                                                                                "alignItems": "center"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "BulkActionsContainer",
                                                                                    "key": "bulk-actions-container",
                                                                                    "style": {
                                                                                        "display": "flex",
                                                                                        "width": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "comp",
                                                                                            "id": "selectedFlows.length > 0 ? '144px' : '0'"
                                                                                        }
                                                                                        },
                                                                                        "alignItems": "center",
                                                                                        "gap": "8px",
                                                                                        "overflow": "hidden",
                                                                                        "opacity": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "comp",
                                                                                            "id": "selectedFlows.length > 0 ? '1' : '0'"
                                                                                        }
                                                                                        },
                                                                                        "transition": "all 0.3s ease"
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "button",
                                                                                            "name": "DownloadBulkButton",
                                                                                            "key": "download-bulk-button",
                                                                                            "style": {
                                                                                            "height": "32px",
                                                                                            "width": "32px",
                                                                                            "padding": "8px",
                                                                                            "backgroundColor": "transparent",
                                                                                            "border": "1px solid #d1d5db",
                                                                                            "borderRadius": "6px",
                                                                                            "cursor": "pointer"
                                                                                            },
                                                                                            "attrs": {
                                                                                            "data-testid": "download-bulk-btn"
                                                                                            },
                                                                                            "events": {
                                                                                            "click": {
                                                                                                "type": "propCall",
                                                                                                "calls": "handleDownload"
                                                                                            }
                                                                                            },
                                                                                            "children": [
                                                                                            {
                                                                                                "type": "conditional",
                                                                                                "content": {
                                                                                                "node": {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "DownloadLoadingSpinner",
                                                                                                    "key": "download-loading-spinner",
                                                                                                    "style": {
                                                                                                        "width": "16px",
                                                                                                        "height": "16px",
                                                                                                        "border": "2px solid #e5e7eb",
                                                                                                        "borderTop": "2px solid #6366f1",
                                                                                                        "borderRadius": "50%",
                                                                                                        "animation": "spin 1s linear infinite"
                                                                                                    }
                                                                                                    }
                                                                                                },
                                                                                                "reference": {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "isDownloading"
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "conditional",
                                                                                                "content": {
                                                                                                "node": {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "icon",
                                                                                                    "name": "DownloadIcon",
                                                                                                    "key": "download-icon",
                                                                                                    "style": {
                                                                                                        "width": "16px",
                                                                                                        "height": "16px"
                                                                                                    }
                                                                                                    }
                                                                                                },
                                                                                                "reference": {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "isDownloading"
                                                                                                    }
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "static",
                                                                                                    "content": false
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            ]
                                                                                        }
                                                                                        },
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "button",
                                                                                            "name": "DeleteBulkButton",
                                                                                            "key": "delete-bulk-button",
                                                                                            "style": {
                                                                                            "paddingLeft": "10px",
                                                                                            "paddingRight": "10px",
                                                                                            "height": "32px",
                                                                                            "backgroundColor": "#dc2626",
                                                                                            "color": "white",
                                                                                            "border": "none",
                                                                                            "borderRadius": "6px",
                                                                                            "cursor": "pointer",
                                                                                            "fontSize": "14px",
                                                                                            "display": "flex",
                                                                                            "alignItems": "center",
                                                                                            "gap": "4px"
                                                                                            },
                                                                                            "attrs": {
                                                                                            "data-testid": "delete-bulk-btn"
                                                                                            },
                                                                                            "events": {
                                                                                            "click": {
                                                                                                "type": "propCall",
                                                                                                "calls": "handleDelete"
                                                                                            }
                                                                                            },
                                                                                            "children": [
                                                                                            {
                                                                                                "type": "conditional",
                                                                                                "content": {
                                                                                                "node": {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "DeleteLoadingSpinner",
                                                                                                    "key": "delete-loading-spinner",
                                                                                                    "style": {
                                                                                                        "width": "16px",
                                                                                                        "height": "16px",
                                                                                                        "border": "2px solid rgba(255, 255, 255, 0.3)",
                                                                                                        "borderTop": "2px solid white",
                                                                                                        "borderRadius": "50%",
                                                                                                        "animation": "spin 1s linear infinite"
                                                                                                    }
                                                                                                    }
                                                                                                },
                                                                                                "reference": {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "isDeleting"
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "conditional",
                                                                                                "content": {
                                                                                                "node": {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "DeleteButtonContent",
                                                                                                    "key": "delete-button-content",
                                                                                                    "style": {
                                                                                                        "display": "flex",
                                                                                                        "alignItems": "center",
                                                                                                        "gap": "4px"
                                                                                                    },
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "icon",
                                                                                                            "name": "TrashIcon",
                                                                                                            "key": "trash-icon",
                                                                                                            "style": {
                                                                                                            "width": "16px",
                                                                                                            "height": "16px"
                                                                                                            }
                                                                                                        }
                                                                                                        },
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "text",
                                                                                                            "name": "DeleteButtonText",
                                                                                                            "key": "delete-button-text"
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                },
                                                                                                "reference": {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "isDeleting"
                                                                                                    }
                                                                                                },
                                                                                                "value": {
                                                                                                    "type": "static",
                                                                                                    "content": false
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            ]
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "NewFlowButtonTooltip",
                                                                                    "key": "new-flow-button-tooltip",
                                                                                    "style": {
                                                                                        "position": "relative"
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "button",
                                                                                            "name": "NewFlowButton",
                                                                                            "key": "new-flow-button",
                                                                                            "style": {
                                                                                            "zIndex": "50",
                                                                                            "paddingLeft": "10px",
                                                                                            "paddingRight": "10px",
                                                                                            "height": "32px",
                                                                                            "backgroundColor": "#6366f1",
                                                                                            "color": "white",
                                                                                            "border": "none",
                                                                                            "borderRadius": "6px",
                                                                                            "cursor": "pointer",
                                                                                            "fontSize": "14px",
                                                                                            "display": "flex",
                                                                                            "alignItems": "center",
                                                                                            "gap": "4px"
                                                                                            },
                                                                                            "attrs": {
                                                                                            "data-testid": "new-project-btn"
                                                                                            },
                                                                                            "events": {
                                                                                            "click": {
                                                                                                "type": "stateChange",
                                                                                                "transitions": [
                                                                                                {
                                                                                                    "type": "stateChange",
                                                                                                    "stateKey": "newProjectModal",
                                                                                                    "newValue": true
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            },
                                                                                            "children": [
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "icon",
                                                                                                "name": "PlusIcon",
                                                                                                "key": "plus-icon",
                                                                                                "style": {
                                                                                                    "width": "16px",
                                                                                                    "height": "16px"
                                                                                                }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "NewFlowText",
                                                                                                "key": "new-flow-text",
                                                                                                "style": {
                                                                                                    "whiteSpace": "nowrap",
                                                                                                    "fontWeight": "600",
                                                                                                    "display": "none"
                                                                                                },
                                                                                                "attrs": {
                                                                                                    "className": "md:inline"
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            ]
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "comp",
                                                                        "id": "flowType !== 'mcp'"
                                                                        }
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "isEmptyFolder"
                                                            }
                                                            },
                                                            "value": {
                                                            "type": "static",
                                                            "content": false
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "EmptyFolderContainer",
                                                        "key": "empty-folder-container",
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "alignItems": "center",
                                                            "justifyContent": "center",
                                                            "height": "400px",
                                                            "textAlign": "center"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "EmptyFolderTitle",
                                                                "key": "empty-folder-title",
                                                                "style": {
                                                                "fontSize": "24px",
                                                                "fontWeight": "600",
                                                                "color": "#374151",
                                                                "marginBottom": "16px"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "button",
                                                                "name": "CreateFirstFlowButton",
                                                                "key": "create-first-flow-button",
                                                                "style": {
                                                                "padding": "12px 24px",
                                                                "backgroundColor": "#6366f1",
                                                                "color": "white",
                                                                "border": "none",
                                                                "borderRadius": "8px",
                                                                "cursor": "pointer",
                                                                "fontSize": "16px",
                                                                "fontWeight": "500"
                                                                },
                                                                "events": {
                                                                "click": {
                                                                    "type": "stateChange",
                                                                    "transitions": [
                                                                    {
                                                                        "type": "stateChange",
                                                                        "stateKey": "newProjectModal",
                                                                        "newValue": true
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "CreateFirstFlowText",
                                                                    "key": "create-first-flow-text"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "isEmptyFolder"
                                                        }
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "FlowsContentContainer",
                                                        "key": "flows-content-container",
                                                        "style": {
                                                            "display": "flex",
                                                            "height": "100%",
                                                            "flexDirection": "column"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "conditional",
                                                            "content": {
                                                                "node": {
                                                                "type": "conditional",
                                                                "content": {
                                                                    "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "GridLoadingSkeleton",
                                                                        "key": "grid-loading-skeleton",
                                                                        "style": {
                                                                        "marginTop": "16px",
                                                                        "display": "grid",
                                                                        "gridTemplateColumns": "1fr",
                                                                        "gap": "4px"
                                                                        },
                                                                        "attrs": {
                                                                        "className": "md:grid-cols-2 lg:grid-cols-3"
                                                                        },
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "SkeletonCard1",
                                                                            "key": "skeleton-card-1",
                                                                            "style": {
                                                                                "height": "120px",
                                                                                "backgroundColor": "#f3f4f6",
                                                                                "borderRadius": "8px",
                                                                                "animation": "pulse 1.5s ease-in-out infinite"
                                                                            }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "SkeletonCard2",
                                                                            "key": "skeleton-card-2",
                                                                            "style": {
                                                                                "height": "120px",
                                                                                "backgroundColor": "#f3f4f6",
                                                                                "borderRadius": "8px",
                                                                                "animation": "pulse 1.5s ease-in-out infinite"
                                                                            }
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    },
                                                                    "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "comp",
                                                                        "id": "view === 'grid'"
                                                                    }
                                                                    }
                                                                }
                                                                },
                                                                "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isLoading"
                                                                }
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "conditional",
                                                            "content": {
                                                                "node": {
                                                                "type": "conditional",
                                                                "content": {
                                                                    "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "ListLoadingSkeleton",
                                                                        "key": "list-loading-skeleton",
                                                                        "style": {
                                                                        "marginTop": "16px",
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                        "gap": "4px"
                                                                        },
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "SkeletonListItem1",
                                                                            "key": "skeleton-list-item-1",
                                                                            "style": {
                                                                                "height": "80px",
                                                                                "backgroundColor": "#f3f4f6",
                                                                                "borderRadius": "8px",
                                                                                "animation": "pulse 1.5s ease-in-out infinite"
                                                                            }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "SkeletonListItem2",
                                                                            "key": "skeleton-list-item-2",
                                                                            "style": {
                                                                                "height": "80px",
                                                                                "backgroundColor": "#f3f4f6",
                                                                                "borderRadius": "8px",
                                                                                "animation": "pulse 1.5s ease-in-out infinite"
                                                                            }
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    },
                                                                    "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "comp",
                                                                        "id": "view === 'list'"
                                                                    }
                                                                    }
                                                                }
                                                                },
                                                                "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isLoading"
                                                                }
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "conditional",
                                                            "content": {
                                                                "node": {
                                                                "type": "conditional",
                                                                "content": {
                                                                    "node": {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                        "node": {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "container",
                                                                            "name": "GridViewContainer",
                                                                            "key": "grid-view-container",
                                                                            "style": {
                                                                            "marginTop": "16px",
                                                                            "display": "grid",
                                                                            "gridTemplateColumns": "1fr",
                                                                            "gap": "4px"
                                                                            },
                                                                            "attrs": {
                                                                            "className": "md:grid-cols-2 lg:grid-cols-3"
                                                                            },
                                                                            "children": [
                                                                            {
                                                                                "type": "repeat",
                                                                                "content": {
                                                                                "node": {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "FlowGridCard",
                                                                                    "key": "flow-grid-card",
                                                                                    "style": {
                                                                                        "display": "flex",
                                                                                        "flexDirection": "row",
                                                                                        "backgroundColor": "white",
                                                                                        "cursor": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "comp",
                                                                                            "id": "flow.is_component ? 'default' : 'pointer'"
                                                                                        }
                                                                                        },
                                                                                        "justifyContent": "space-between",
                                                                                        "borderRadius": "8px",
                                                                                        "border": "none",
                                                                                        "padding": "12px 16px",
                                                                                        "boxShadow": "none"
                                                                                    },
                                                                                    "attrs": {
                                                                                        "data-testid": "list-card",
                                                                                        "draggable": "true"
                                                                                    },
                                                                                    "events": {
                                                                                        "click": {
                                                                                        "type": "propCall",
                                                                                        "calls": "handleFlowClick"
                                                                                        },
                                                                                        "dragStart": {
                                                                                        "type": "propCall",
                                                                                        "calls": "onDragStart"
                                                                                        }
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "container",
                                                                                            "name": "FlowCardContent",
                                                                                            "key": "flow-card-content",
                                                                                            "style": {
                                                                                            "display": "flex",
                                                                                            "minWidth": "0",
                                                                                            "alignItems": "center",
                                                                                            "gap": "16px"
                                                                                            },
                                                                                            "children": [
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "container",
                                                                                                "name": "FlowIconContainer",
                                                                                                "key": "flow-icon-container",
                                                                                                "style": {
                                                                                                    "position": "relative",
                                                                                                    "display": "flex",
                                                                                                    "alignItems": "center"
                                                                                                },
                                                                                                "attrs": {
                                                                                                    "className": "group/checkbox"
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                        "elementType": "container",
                                                                                                        "name": "CheckboxContainer",
                                                                                                        "key": "checkbox-container",
                                                                                                        "style": {
                                                                                                        "zIndex": "20",
                                                                                                        "display": "flex",
                                                                                                        "width": {
                                                                                                            "type": "dynamic",
                                                                                                            "content": {
                                                                                                            "referenceType": "comp",
                                                                                                            "id": "selected ? '40px' : '0'"
                                                                                                            }
                                                                                                        },
                                                                                                        "alignItems": "center",
                                                                                                        "transition": "all 0.3s ease"
                                                                                                        },
                                                                                                        "children": [
                                                                                                        {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                            "elementType": "input",
                                                                                                            "name": "FlowSelectionCheckbox",
                                                                                                            "key": "flow-selection-checkbox",
                                                                                                            "style": {
                                                                                                                "marginLeft": "8px",
                                                                                                                "transition": "opacity 0.3s ease",
                                                                                                                "opacity": {
                                                                                                                "type": "dynamic",
                                                                                                                "content": {
                                                                                                                    "referenceType": "comp",
                                                                                                                    "id": "selected ? '1' : '0'"
                                                                                                                }
                                                                                                                }
                                                                                                            },
                                                                                                            "attrs": {
                                                                                                                "type": "checkbox",
                                                                                                                "checked": {
                                                                                                                "type": "dynamic",
                                                                                                                "content": {
                                                                                                                    "referenceType": "state",
                                                                                                                    "id": "selected"
                                                                                                                }
                                                                                                                },
                                                                                                                "data-testid": {
                                                                                                                "type": "dynamic",
                                                                                                                "content": {
                                                                                                                    "referenceType": "local",
                                                                                                                    "id": "'checkbox-' + flow.id"
                                                                                                                }
                                                                                                                }
                                                                                                            },
                                                                                                            "events": {
                                                                                                                "change": {
                                                                                                                "type": "propCall",
                                                                                                                "calls": "setSelected"
                                                                                                                },
                                                                                                                "click": {
                                                                                                                "type": "stopPropagation"
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                        ]
                                                                                                    }
                                                                                                    },
                                                                                                    {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                        "elementType": "container",
                                                                                                        "name": "FlowIconWrapper",
                                                                                                        "key": "flow-icon-wrapper",
                                                                                                        "style": {
                                                                                                        "display": "flex",
                                                                                                        "alignItems": "center",
                                                                                                        "justifyContent": "center",
                                                                                                        "borderRadius": "8px",
                                                                                                        "padding": "6px",
                                                                                                        "transition": "opacity 0.2s ease",
                                                                                                        "backgroundColor": {
                                                                                                            "type": "dynamic",
                                                                                                            "content": {
                                                                                                            "referenceType": "local",
                                                                                                            "id": "swatchColors[swatchIndex]"
                                                                                                            }
                                                                                                        },
                                                                                                        "opacity": {
                                                                                                            "type": "dynamic",
                                                                                                            "content": {
                                                                                                            "referenceType": "comp",
                                                                                                            "id": "selected ? '0.3' : '1'"
                                                                                                            }
                                                                                                        }
                                                                                                        },
                                                                                                        "children": [
                                                                                                        {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                            "elementType": "icon",
                                                                                                            "name": "FlowIcon",
                                                                                                            "key": "flow-icon",
                                                                                                            "style": {
                                                                                                                "display": "flex",
                                                                                                                "width": "20px",
                                                                                                                "height": "20px",
                                                                                                                "alignItems": "center",
                                                                                                                "justifyContent": "center"
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                        ]
                                                                                                    }
                                                                                                    }
                                                                                                ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "container",
                                                                                                "name": "FlowInfoContainer",
                                                                                                "key": "flow-info-container",
                                                                                                "style": {
                                                                                                    "display": "flex",
                                                                                                    "minWidth": "0",
                                                                                                    "flexDirection": "column",
                                                                                                    "justifyContent": "flex-start"
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                        "elementType": "container",
                                                                                                        "name": "FlowTitleAndTimeContainer",
                                                                                                        "key": "flow-title-and-time-container",
                                                                                                        "style": {
                                                                                                        "display": "flex",
                                                                                                        "minWidth": "0",
                                                                                                        "flexWrap": "wrap",
                                                                                                        "alignItems": "baseline",
                                                                                                        "gap": "8px 16px"
                                                                                                        },
                                                                                                        "children": [
                                                                                                        {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                            "elementType": "container",
                                                                                                            "name": "FlowNameContainer",
                                                                                                            "key": "flow-name-container",
                                                                                                            "style": {
                                                                                                                "display": "flex",
                                                                                                                "minWidth": "0",
                                                                                                                "flexShrink": "1",
                                                                                                                "overflow": "hidden",
                                                                                                                "textOverflow": "ellipsis",
                                                                                                                "fontSize": "14px",
                                                                                                                "fontWeight": "600"
                                                                                                            },
                                                                                                            "attrs": {
                                                                                                                "data-testid": "flow-name-div"
                                                                                                            },
                                                                                                            "children": [
                                                                                                                {
                                                                                                                "type": "element",
                                                                                                                "content": {
                                                                                                                    "elementType": "text",
                                                                                                                    "name": "FlowName",
                                                                                                                    "key": "flow-name",
                                                                                                                    "style": {
                                                                                                                    "overflow": "hidden",
                                                                                                                    "textOverflow": "ellipsis"
                                                                                                                    },
                                                                                                                    "attrs": {
                                                                                                                    "data-testid": {
                                                                                                                        "type": "dynamic",
                                                                                                                        "content": {
                                                                                                                        "referenceType": "local",
                                                                                                                        "id": "'flow-name-' + flow.id"
                                                                                                                        }
                                                                                                                    }
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                            ]
                                                                                                            }
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                            "elementType": "container",
                                                                                                            "name": "FlowTimeContainer",
                                                                                                            "key": "flow-time-container",
                                                                                                            "style": {
                                                                                                                "display": "flex",
                                                                                                                "minWidth": "0",
                                                                                                                "flexShrink": "1",
                                                                                                                "fontSize": "12px",
                                                                                                                "color": "#6b7280"
                                                                                                            },
                                                                                                            "children": [
                                                                                                                {
                                                                                                                "type": "element",
                                                                                                                "content": {
                                                                                                                    "elementType": "text",
                                                                                                                    "name": "FlowEditedTime",
                                                                                                                    "key": "flow-edited-time",
                                                                                                                    "style": {
                                                                                                                    "overflow": "hidden",
                                                                                                                    "textOverflow": "ellipsis"
                                                                                                                    }
                                                                                                                }
                                                                                                                }
                                                                                                            ]
                                                                                                            }
                                                                                                        }
                                                                                                        ]
                                                                                                    }
                                                                                                    }
                                                                                                ]
                                                                                                }
                                                                                            }
                                                                                            ]
                                                                                        }
                                                                                        },
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "container",
                                                                                            "name": "FlowActionsContainer",
                                                                                            "key": "flow-actions-container",
                                                                                            "style": {
                                                                                            "marginLeft": "20px",
                                                                                            "display": "flex",
                                                                                            "alignItems": "center",
                                                                                            "gap": "8px"
                                                                                            },
                                                                                            "children": [
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "container",
                                                                                                "name": "FlowDropdownMenuContainer",
                                                                                                "key": "flow-dropdown-menu-container",
                                                                                                "style": {
                                                                                                    "position": "relative"
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                        "elementType": "button",
                                                                                                        "name": "FlowOptionsButton",
                                                                                                        "key": "flow-options-button",
                                                                                                        "style": {
                                                                                                        "padding": "8px",
                                                                                                        "backgroundColor": "transparent",
                                                                                                        "border": "none",
                                                                                                        "cursor": "pointer",
                                                                                                        "borderRadius": "4px"
                                                                                                        },
                                                                                                        "attrs": {
                                                                                                        "data-testid": "home-dropdown-menu"
                                                                                                        },
                                                                                                        "events": {
                                                                                                        "click": {
                                                                                                            "type": "stateChange",
                                                                                                            "transitions": [
                                                                                                            {
                                                                                                                "type": "stateChange",
                                                                                                                "stateKey": "showDropdownMenu",
                                                                                                                "newValue": true
                                                                                                            }
                                                                                                            ]
                                                                                                        }
                                                                                                        },
                                                                                                        "children": [
                                                                                                        {
                                                                                                            "type": "element",
                                                                                                            "content": {
                                                                                                            "elementType": "icon",
                                                                                                            "name": "EllipsisIcon",
                                                                                                            "key": "ellipsis-icon",
                                                                                                            "style": {
                                                                                                                "width": "20px",
                                                                                                                "height": "20px",
                                                                                                                "color": "#6b7280"
                                                                                                            }
                                                                                                            }
                                                                                                        }
                                                                                                        ]
                                                                                                    }
                                                                                                    },
                                                                                                    {
                                                                                                    "type": "conditional",
                                                                                                    "content": {
                                                                                                        "node": {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "container",
                                                                                                            "name": "FlowDropdownMenuContent",
                                                                                                            "key": "flow-dropdown-menu-content",
                                                                                                            "style": {
                                                                                                            "position": "absolute",
                                                                                                            "top": "100%",
                                                                                                            "right": "0",
                                                                                                            "width": "185px",
                                                                                                            "backgroundColor": "white",
                                                                                                            "border": "1px solid #e5e7eb",
                                                                                                            "borderRadius": "6px",
                                                                                                            "boxShadow": "0 4px 6px -1px rgba(0, 0, 0, 0.1)",
                                                                                                            "zIndex": "50",
                                                                                                            "padding": "4px"
                                                                                                            },
                                                                                                            "children": [
                                                                                                            {
                                                                                                                "type": "element",
                                                                                                                "content": {
                                                                                                                "elementType": "button",
                                                                                                                "name": "EditFlowOption",
                                                                                                                "key": "edit-flow-option",
                                                                                                                "style": {
                                                                                                                    "width": "100%",
                                                                                                                    "padding": "8px 12px",
                                                                                                                    "fontSize": "14px",
                                                                                                                    "textAlign": "left",
                                                                                                                    "backgroundColor": "transparent",
                                                                                                                    "border": "none",
                                                                                                                    "cursor": "pointer",
                                                                                                                    "borderRadius": "4px"
                                                                                                                },
                                                                                                                "events": {
                                                                                                                    "click": {
                                                                                                                    "type": "propCall",
                                                                                                                    "calls": "handleEdit"
                                                                                                                    }
                                                                                                                },
                                                                                                                "children": [
                                                                                                                    {
                                                                                                                    "type": "element",
                                                                                                                    "content": {
                                                                                                                        "elementType": "text",
                                                                                                                        "name": "EditOptionText",
                                                                                                                        "key": "edit-option-text"
                                                                                                                    }
                                                                                                                    }
                                                                                                                ]
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "element",
                                                                                                                "content": {
                                                                                                                "elementType": "button",
                                                                                                                "name": "ExportFlowOption",
                                                                                                                "key": "export-flow-option",
                                                                                                                "style": {
                                                                                                                    "width": "100%",
                                                                                                                    "padding": "8px 12px",
                                                                                                                    "fontSize": "14px",
                                                                                                                    "textAlign": "left",
                                                                                                                    "backgroundColor": "transparent",
                                                                                                                    "border": "none",
                                                                                                                    "cursor": "pointer",
                                                                                                                    "borderRadius": "4px"
                                                                                                                },
                                                                                                                "events": {
                                                                                                                    "click": {
                                                                                                                    "type": "propCall",
                                                                                                                    "calls": "handleExport"
                                                                                                                    }
                                                                                                                },
                                                                                                                "children": [
                                                                                                                    {
                                                                                                                    "type": "element",
                                                                                                                    "content": {
                                                                                                                        "elementType": "text",
                                                                                                                        "name": "ExportOptionText",
                                                                                                                        "key": "export-option-text"
                                                                                                                    }
                                                                                                                    }
                                                                                                                ]
                                                                                                                }
                                                                                                            },
                                                                                                            {
                                                                                                                "type": "element",
                                                                                                                "content": {
                                                                                                                "elementType": "button",
                                                                                                                "name": "DeleteFlowOption",
                                                                                                                "key": "delete-flow-option",
                                                                                                                "style": {
                                                                                                                    "width": "100%",
                                                                                                                    "padding": "8px 12px",
                                                                                                                    "fontSize": "14px",
                                                                                                                    "textAlign": "left",
                                                                                                                    "backgroundColor": "transparent",
                                                                                                                    "border": "none",
                                                                                                                    "cursor": "pointer",
                                                                                                                    "borderRadius": "4px",
                                                                                                                    "color": "#dc2626"
                                                                                                                },
                                                                                                                "events": {
                                                                                                                    "click": {
                                                                                                                    "type": "propCall",
                                                                                                                    "calls": "setOpenDelete"
                                                                                                                    }
                                                                                                                },
                                                                                                                "children": [
                                                                                                                    {
                                                                                                                    "type": "element",
                                                                                                                    "content": {
                                                                                                                        "elementType": "text",
                                                                                                                        "name": "DeleteOptionText",
                                                                                                                        "key": "delete-option-text"
                                                                                                                    }
                                                                                                                    }
                                                                                                                ]
                                                                                                                }
                                                                                                            }
                                                                                                            ]
                                                                                                        }
                                                                                                        },
                                                                                                        "reference": {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                            "referenceType": "state",
                                                                                                            "id": "showDropdownMenu"
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                                    }
                                                                                                ]
                                                                                                }
                                                                                            }
                                                                                            ]
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                "dataSource": {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "state",
                                                                                    "id": "flows"
                                                                                    }
                                                                                }
                                                                                }
                                                                            }
                                                                            ]
                                                                        }
                                                                        },
                                                                        "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "comp",
                                                                            "id": "view === 'grid'"
                                                                        }
                                                                        }
                                                                    }
                                                                    },
                                                                    "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "comp",
                                                                        "id": "flowType === 'mcp'"
                                                                    }
                                                                    },
                                                                    "value": {
                                                                    "type": "static",
                                                                    "content": false
                                                                    }
                                                                }
                                                                },
                                                                "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isLoading"
                                                                }
                                                                },
                                                                "value": {
                                                                "type": "static",
                                                                "content": false
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "isEmptyFolder"
                                                        }
                                                    },
                                                    "value": {
                                                        "type": "static",
                                                        "content": false
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "conditional",
                                "content": {
                                    "node": {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "PaginationContainer",
                                        "key": "pagination-container",
                                        "style": {
                                        "display": "flex",
                                        "justifyContent": "flex-end",
                                        "padding": "12px 12px 16px"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "PaginationControls",
                                            "key": "pagination-controls",
                                            "style": {
                                                "display": "flex",
                                                "alignItems": "center",
                                                "gap": "8px"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "text",
                                                    "name": "PaginationInfo",
                                                    "key": "pagination-info",
                                                    "style": {
                                                    "fontSize": "14px",
                                                    "color": "#6b7280"
                                                    }
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "button",
                                                    "name": "PreviousPageButton",
                                                    "key": "previous-page-button",
                                                    "style": {
                                                    "padding": "8px 12px",
                                                    "backgroundColor": "transparent",
                                                    "border": "1px solid #d1d5db",
                                                    "borderRadius": "6px",
                                                    "cursor": "pointer",
                                                    "fontSize": "14px"
                                                    },
                                                    "events": {
                                                    "click": {
                                                        "type": "propCall",
                                                        "calls": "handlePreviousPage"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "PreviousText",
                                                        "key": "previous-text"
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "button",
                                                    "name": "NextPageButton",
                                                    "key": "next-page-button",
                                                    "style": {
                                                    "padding": "8px 12px",
                                                    "backgroundColor": "transparent",
                                                    "border": "1px solid #d1d5db",
                                                    "borderRadius": "6px",
                                                    "cursor": "pointer",
                                                    "fontSize": "14px"
                                                    },
                                                    "events": {
                                                    "click": {
                                                        "type": "propCall",
                                                        "calls": "handleNextPage"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "NextText",
                                                        "key": "next-text"
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    },
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "comp",
                                        "id": "(flowType === 'flows' || flowType === 'components') && !isLoading && !isEmptyFolder && data.pagination.total >= 10"
                                    }
                                    }
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "view": {
                            "type": "string",
                            "defaultValue": "list"
                            },
                            "newProjectModal": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "pageIndex": {
                            "type": "number",
                            "defaultValue": 1
                            },
                            "pageSize": {
                            "type": "number",
                            "defaultValue": 12
                            },
                            "search": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "flowType": {
                            "type": "string",
                            "defaultValue": "flows"
                            },
                            "selectedFlows": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "lastSelectedIndex": {
                            "type": "number",
                            "defaultValue": null
                            },
                            "isShiftPressed": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isCtrlPressed": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "debouncedSearch": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isEmptyFolder": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "flows": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "folderName": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "tabTypes": {
                            "type": "array",
                            "defaultValue": ["components", "flows"]
                            },
                            "isDownloading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isDeleting": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "showDropdownMenu": {
                            "type": "boolean",
                            "defaultValue": false
                            }
                        },
                        "propDefinitions": {
                            "type": {
                            "type": "string",
                            "isRequired": true,
                            "defaultValue": "flows"
                            },
                            "handlePageChange": {
                            "type": "function",
                            "isRequired": false
                            },
                            "onSearch": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleFileDrop": {
                            "type": "function",
                            "isRequired": false
                            },
                            "setSelectedFlow": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleSearch": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleDownload": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleDelete": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleFlowClick": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleEdit": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleExport": {
                            "type": "function",
                            "isRequired": false
                            },
                            "setOpenDelete": {
                            "type": "function",
                            "isRequired": false
                            },
                            "onDragStart": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handlePreviousPage": {
                            "type": "function",
                            "isRequired": false
                            },
                            "handleNextPage": {
                            "type": "function",
                            "isRequired": false
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "primary": "#6366f1",
                                "background": "#ffffff",
                                "muted": "#f8f9fa",
                                "mutedForeground": "#6b7280",
                                "border": "#e5e7eb",
                                "text": "#111827",
                                "textMuted": "#6b7280",
                                "accent": "#f3f4f6",
                                "destructive": "#dc2626",
                                "skeleton": "#f3f4f6"
                            },
                            "spacing": {
                                "xs": "4px",
                                "sm": "8px",
                                "md": "12px",
                                "lg": "16px",
                                "xl": "20px",
                                "2xl": "24px",
                                "3xl": "32px"
                            },
                            "borderRadius": {
                                "sm": "4px",
                                "md": "6px",
                                "lg": "8px"
                            },
                            "fontSize": {
                                "xs": "12px",
                                "sm": "14px",
                                "base": "16px",
                                "lg": "18px",
                                "xl": "20px",
                                "2xl": "24px"
                            },
                            "fontWeight": {
                                "normal": "400",
                                "medium": "500",
                                "semibold": "600"
                            },
                            "shadows": {
                                "sm": "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
                                "md": "0 4px 6px -1px rgba(0, 0, 0, 0.1)"
                            },
                            "animations": {
                                "pulse": "pulse 1.5s ease-in-out infinite",
                                "spin": "spin 1s linear infinite"
                            },
                            "transitions": {
                                "all": "all 0.3s ease",
                                "opacity": "opacity 0.3s ease",
                                "transform": "transform 0.3s ease"
                            }
                            }
                        }
                        }
				},
				{
					"id": "component_grid",
					"type": "interface",
					"name": "ComponentGrid",
					"description": "Component marketplace display with search, filtering, ratings, and installation",
					"component_path": "src/frontend/src/components/ComponentGrid",
					"uidl_definition_physical": {
                        "name": "ComponentGrid",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "ComponentGrid",
                            "key": "componentgrid-root",
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "container",
                                    "name": "CardsWrapContainer",
                                    "key": "cards-wrap",
                                    "attrs": [
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "prop",
                                        "id": "onFileDrop"
                                        }
                                    },
                                    {
                                        "type": "static",
                                        "content": "Drop your components here"
                                    }
                                    ],
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "MainContentContainer",
                                        "key": "main-content",
                                        "style": {
                                            "display": "flex",
                                            "height": "100vh",
                                            "width": "100vw",
                                            "flexDirection": "column",
                                            "overflowY": "auto"
                                        },
                                        "attrs": [
                                            {
                                            "type": "static",
                                            "content": "cards-wrapper"
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "InnerContainer",
                                                "key": "inner-container",
                                                "style": {
                                                "display": "flex",
                                                "height": "100vh",
                                                "width": "100vw",
                                                "flexDirection": "column"
                                                },
                                                "children": [
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "CustomBanner",
                                                        "key": "custom-banner"
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "static",
                                                        "content": true
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "ContentArea",
                                                    "key": "content-area",
                                                    "style": {
                                                        "display": "flex",
                                                        "flex": "1",
                                                        "flexDirection": "column",
                                                        "justifyContent": "flex-start",
                                                        "padding": "16px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "ContentWrapper",
                                                            "key": "content-wrapper",
                                                            "style": {
                                                            "display": "flex",
                                                            "height": "100vh",
                                                            "flexDirection": "column",
                                                            "justifyContent": "flex-start"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "HeaderComponent",
                                                                "name": "HeaderComponent",
                                                                "key": "header-component",
                                                                "dependency": {
                                                                    "type": "local",
                                                                    "path": "../../components/header"
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "EmptyFolder",
                                                                    "name": "EmptyFolderComponent",
                                                                    "key": "empty-folder",
                                                                    "dependency": {
                                                                        "type": "local",
                                                                        "path": "../emptyFolder"
                                                                    }
                                                                    }
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isEmptyFolder"
                                                                    }
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "ComponentContentArea",
                                                                    "key": "component-content-area",
                                                                    "style": {
                                                                        "display": "flex",
                                                                        "height": "100vh",
                                                                        "flexDirection": "column"
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "conditional",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "LoadingSkeletons",
                                                                                "key": "loading-skeletons",
                                                                                "children": [
                                                                                {
                                                                                    "type": "conditional",
                                                                                    "content": {
                                                                                    "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "GridLoadingSkeleton",
                                                                                        "key": "grid-loading",
                                                                                        "style": {
                                                                                            "marginTop": "16px",
                                                                                            "display": "grid",
                                                                                            "gridTemplateColumns": "1fr",
                                                                                            "gap": "4px",
                                                                                            "gridTemplateColumns": "repeat(1, 1fr)"
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ListSkeleton",
                                                                                                "name": "ListSkeletonOne",
                                                                                                "key": "skeleton-1"
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ListSkeleton",
                                                                                                "name": "ListSkeletonTwo",
                                                                                                "key": "skeleton-2"
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    },
                                                                                    "reference": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "viewIsGrid"
                                                                                        }
                                                                                    }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "conditional",
                                                                                    "content": {
                                                                                    "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "ListLoadingSkeleton",
                                                                                        "key": "list-loading",
                                                                                        "style": {
                                                                                            "marginTop": "16px",
                                                                                            "display": "flex",
                                                                                            "flexDirection": "column",
                                                                                            "gap": "4px"
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ListSkeleton",
                                                                                                "name": "ListSkeletonThree",
                                                                                                "key": "skeleton-3"
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ListSkeleton",
                                                                                                "name": "ListSkeletonFour",
                                                                                                "key": "skeleton-4"
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    },
                                                                                    "reference": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "viewIsList"
                                                                                        }
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            "reference": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "isLoading"
                                                                            }
                                                                            }
                                                                        }
                                                                        },
                                                                        {
                                                                        "type": "conditional",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "ComponentsDisplay",
                                                                                "key": "components-display",
                                                                                "children": [
                                                                                {
                                                                                    "type": "conditional",
                                                                                    "content": {
                                                                                    "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "ComponentGrid",
                                                                                        "key": "component-grid",
                                                                                        "style": {
                                                                                            "marginTop": "16px",
                                                                                            "display": "grid",
                                                                                            "gridTemplateColumns": "1fr",
                                                                                            "gap": "4px"
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "repeat",
                                                                                            "content": {
                                                                                                "node": {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "ListComponent",
                                                                                                    "name": "ComponentCard",
                                                                                                    "key": "component-card",
                                                                                                    "dependency": {
                                                                                                    "type": "local",
                                                                                                    "path": "../../components/list"
                                                                                                    },
                                                                                                    "attrs": [
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                        "referenceType": "local",
                                                                                                        "id": "component.id"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                        "referenceType": "local",
                                                                                                        "id": "component"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                        "referenceType": "state",
                                                                                                        "id": "selectedFlows"
                                                                                                        }
                                                                                                    }
                                                                                                    ]
                                                                                                }
                                                                                                },
                                                                                                "dataSource": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "data.flows"
                                                                                                }
                                                                                                },
                                                                                                "meta": {
                                                                                                "useIndex": true,
                                                                                                "iteratorName": "component",
                                                                                                "indexName": "index"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    },
                                                                                    "reference": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "viewIsGrid"
                                                                                        }
                                                                                    }
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "conditional",
                                                                                    "content": {
                                                                                    "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "ComponentList",
                                                                                        "key": "component-list",
                                                                                        "style": {
                                                                                            "marginTop": "16px",
                                                                                            "display": "flex",
                                                                                            "flexDirection": "column",
                                                                                            "gap": "4px"
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "repeat",
                                                                                            "content": {
                                                                                                "node": {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "ListComponent",
                                                                                                    "name": "ComponentListItem",
                                                                                                    "key": "component-list-item",
                                                                                                    "dependency": {
                                                                                                    "type": "local",
                                                                                                    "path": "../../components/list"
                                                                                                    },
                                                                                                    "attrs": [
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                        "referenceType": "local",
                                                                                                        "id": "component.id"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                        "referenceType": "local",
                                                                                                        "id": "component"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                        "referenceType": "state",
                                                                                                        "id": "selectedFlows"
                                                                                                        }
                                                                                                    }
                                                                                                    ]
                                                                                                }
                                                                                                },
                                                                                                "dataSource": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "data.flows"
                                                                                                }
                                                                                                },
                                                                                                "meta": {
                                                                                                "useIndex": true,
                                                                                                "iteratorName": "component",
                                                                                                "indexName": "index"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    },
                                                                                    "reference": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "viewIsList"
                                                                                        }
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            "reference": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "hasComponents"
                                                                            }
                                                                            }
                                                                        }
                                                                        },
                                                                        {
                                                                        "type": "conditional",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "EmptyComponentsMessage",
                                                                                "key": "empty-components-message",
                                                                                "style": {
                                                                                "paddingTop": "96px",
                                                                                "textAlign": "center",
                                                                                "fontSize": "14px",
                                                                                "color": "#6b7280"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "text",
                                                                                    "name": "NoComponentsText",
                                                                                    "key": "no-components-text",
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "No saved or custom components. Learn more about "
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "link",
                                                                                    "name": "CreateComponentsLink",
                                                                                    "key": "create-components-link",
                                                                                    "attrs": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "https://docs.langflow.org/components-custom-components"
                                                                                        },
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "_blank"
                                                                                        },
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "noreferrer"
                                                                                        }
                                                                                    ],
                                                                                    "style": {
                                                                                        "textDecoration": "underline"
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "creating custom components"
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "text",
                                                                                    "name": "BrowseStoreText",
                                                                                    "key": "browse-store-text",
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": ", or browse the store."
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            "reference": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "hasNoComponents"
                                                                            }
                                                                            }
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "isNotEmptyFolder"
                                                                    }
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "PaginationSection",
                                                    "key": "pagination-section",
                                                    "style": {
                                                    "display": "flex",
                                                    "justifyContent": "flex-end",
                                                    "paddingLeft": "12px",
                                                    "paddingRight": "12px",
                                                    "paddingTop": "16px",
                                                    "paddingBottom": "16px"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "PaginatorComponent",
                                                        "name": "ComponentPaginator",
                                                        "key": "component-paginator",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/common/paginatorComponent"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "showPagination"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "ModalsComponent",
                                    "name": "ComponentModals",
                                    "key": "component-modals",
                                    "dependency": {
                                    "type": "local",
                                    "path": "../../components/modalsComponent"
                                    }
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "view": {
                            "type": "string",
                            "defaultValue": "list"
                            },
                            "newProjectModal": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "pageIndex": {
                            "type": "number",
                            "defaultValue": 1
                            },
                            "pageSize": {
                            "type": "number",
                            "defaultValue": 12
                            },
                            "search": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "flowType": {
                            "type": "string",
                            "defaultValue": "components"
                            },
                            "selectedFlows": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "lastSelectedIndex": {
                            "type": "number",
                            "defaultValue": null
                            },
                            "isShiftPressed": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isCtrlPressed": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isEmptyFolder": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "viewIsGrid": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "viewIsList": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "hasComponents": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasNoComponents": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "isNotEmptyFolder": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "showPagination": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "data": {
                            "type": "object",
                            "defaultValue": {
                                "flows": [],
                                "name": "",
                                "description": "",
                                "parent_id": "",
                                "components": [],
                                "pagination": {
                                "page": 1,
                                "size": 12,
                                "total": 0,
                                "pages": 0
                                }
                            }
                            }
                        },
                        "propDefinitions": {
                            "type": {
                            "type": "string",
                            "defaultValue": "components"
                            },
                            "onFileDrop": {
                            "type": "func",
                            "defaultValue": "() => {}"
                            }
                        },
                        "styleSetDefinitions": {
                            "primaryContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "height": "100vh",
                                "width": "100vw"
                            }
                            },
                            "gridLayout": {
                            "type": "reusable-component-style-map", 
                            "content": {
                                "display": "grid",
                                "gridTemplateColumns": "repeat(auto-fill, minmax(300px, 1fr))",
                                "gap": "16px",
                                "padding": "16px"
                            }
                            },
                            "listLayout": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "gap": "8px",
                                "padding": "16px"
                            }
                            },
                            "emptyState": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "alignItems": "center",
                                "justifyContent": "center",
                                "height": "400px",
                                "textAlign": "center",
                                "color": "#6b7280"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280"
                            }
                        }
                        }
				},
				{
					"id": "mcp_server_tab",
					"type": "interface",
					"name": "MCPServerTab",
					"description": "MCP server management interface with server configuration, tool discovery, and execution monitoring",
					"component_path": "src/frontend/src/components/MCPServerTab",
					"uidl_definition_physical": {
                        "name": "MCPServerTab",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "MCPServerTabRoot",
                            "key": "mcp-server-tab-root",
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "container",
                                    "name": "HeaderSection",
                                    "key": "header-section",
                                    "style": {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "gap": "16px",
                                    "alignItems": "flex-start"
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "HeaderContent",
                                        "key": "header-content",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "text",
                                                "name": "MCPServerTitle",
                                                "key": "mcp-server-title",
                                                "style": {
                                                "paddingBottom": "8px",
                                                "fontWeight": "500"
                                                },
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "content": "mcp-server-title"
                                                }
                                                ],
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "MCP Server"
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "MCPServerDescription",
                                                "key": "mcp-server-description",
                                                "style": {
                                                "paddingBottom": "16px",
                                                "fontSize": "14px",
                                                "color": "#6b7280"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "text",
                                                    "name": "DescriptionText",
                                                    "key": "description-text",
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Access your Project's flows as Tools within a MCP Server. Learn more in our"
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "link",
                                                    "name": "MCPGuideLink",
                                                    "key": "mcp-guide-link",
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": "https://docs.langflow.org/mcp-server"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "_blank"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "noreferrer"
                                                        }
                                                    ],
                                                    "style": {
                                                        "color": "#db2777"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": " Projects as MCP Servers guide."
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "container",
                                    "name": "MainContent",
                                    "key": "main-content",
                                    "style": {
                                    "display": "flex",
                                    "flexDirection": "column",
                                    "justifyContent": "space-between",
                                    "gap": "32px"
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "ToolsSection",
                                        "key": "tools-section",
                                        "style": {
                                            "width": "100%"
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "ToolsHeader",
                                                "key": "tools-header",
                                                "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "justifyContent": "space-between",
                                                "paddingTop": "4px"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "ShadTooltip",
                                                    "name": "FlowsToolsTooltip",
                                                    "key": "flows-tools-tooltip",
                                                    "dependency": {
                                                        "type": "local",
                                                        "path": "@/components/common/shadTooltipComponent"
                                                    },
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": "Flows in this project can be exposed as callable MCP tools."
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "right"
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "FlowsToolsLabel",
                                                            "key": "flows-tools-label",
                                                            "style": {
                                                            "display": "flex",
                                                            "alignItems": "center",
                                                            "fontSize": "14px",
                                                            "fontWeight": "500",
                                                            "cursor": "help"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "FlowsToolsText",
                                                                "key": "flows-tools-text",
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Flows/Tools"
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "ForwardedIconComponent",
                                                                "name": "InfoIcon",
                                                                "key": "info-icon",
                                                                "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/common/genericIconComponent"
                                                                },
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "info"
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "marginLeft": "6px",
                                                                    "height": "16px",
                                                                    "width": "16px",
                                                                    "color": "#6b7280"
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "ToolsContent",
                                                "key": "tools-content",
                                                "style": {
                                                "display": "flex",
                                                "flexDirection": "row",
                                                "flexWrap": "wrap",
                                                "gap": "8px",
                                                "paddingTop": "8px"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "ToolsComponent",
                                                    "name": "MCPServerTools",
                                                    "key": "mcp-server-tools",
                                                    "dependency": {
                                                        "type": "local",
                                                        "path": "@/components/core/parameterRenderComponent/components/ToolsComponent"
                                                    },
                                                    "attrs": [
                                                        {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "state",
                                                            "id": "flowsMCPData"
                                                        }
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "MCP Server Tools"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "Select tools to add to this server"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "mcp-server-tools"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "Edit Tools"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": false
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": true
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": false
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "ConfigurationSection",
                                        "key": "configuration-section",
                                        "style": {
                                            "display": "flex",
                                            "flex": "1",
                                            "flexDirection": "column",
                                            "gap": "16px",
                                            "overflow": "hidden"
                                        },
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "AuthenticationSection",
                                                    "key": "authentication-section",
                                                    "style": {
                                                    "display": "flex",
                                                    "justifyContent": "space-between"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "AuthStatusContainer",
                                                        "key": "auth-status-container",
                                                        "style": {
                                                            "display": "flex",
                                                            "gap": "8px",
                                                            "alignItems": "center"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "AuthLabel",
                                                                "key": "auth-label",
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Auth:"
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "conditional",
                                                            "content": {
                                                                "node": {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "NoAuthStatus",
                                                                    "key": "no-auth-status",
                                                                    "style": {
                                                                    "color": "#f59e0b",
                                                                    "display": "flex",
                                                                    "gap": "8px",
                                                                    "fontSize": "14px",
                                                                    "alignItems": "center"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "WarningIcon",
                                                                        "key": "warning-icon",
                                                                        "dependency": {
                                                                            "type": "local",
                                                                            "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "AlertTriangle"
                                                                            }
                                                                        ],
                                                                        "style": {
                                                                            "height": "16px",
                                                                            "width": "16px",
                                                                            "flexShrink": "0"
                                                                        }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "text",
                                                                        "name": "NoAuthText",
                                                                        "key": "no-auth-text",
                                                                        "children": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "None (public)"
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "hasNoAuthentication"
                                                                }
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "conditional",
                                                            "content": {
                                                                "node": {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "AuthenticatedStatus",
                                                                    "key": "authenticated-status",
                                                                    "style": {
                                                                    "color": "#10b981",
                                                                    "display": "flex",
                                                                    "gap": "8px",
                                                                    "fontSize": "14px",
                                                                    "alignItems": "center"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "CheckIcon",
                                                                        "key": "check-icon",
                                                                        "dependency": {
                                                                            "type": "local",
                                                                            "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "Check"
                                                                            }
                                                                        ],
                                                                        "style": {
                                                                            "height": "16px",
                                                                            "width": "16px",
                                                                            "flexShrink": "0"
                                                                        }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "text",
                                                                        "name": "AuthMethodText",
                                                                        "key": "auth-method-text",
                                                                        "children": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "currentAuthMethod"
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "hasAuthentication"
                                                                }
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "Button",
                                                        "name": "EditAuthButton",
                                                        "key": "edit-auth-button",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/button"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "outline"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": "sm"
                                                            }
                                                        ],
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "ForwardedIconComponent",
                                                                "name": "FingerprintIcon",
                                                                "key": "fingerprint-icon",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/common/genericIconComponent"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Fingerprint"
                                                                }
                                                                ],
                                                                "style": {
                                                                "height": "16px",
                                                                "width": "16px",
                                                                "flexShrink": "0"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "EditAuthButtonText",
                                                                "key": "edit-auth-button-text",
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "authButtonText"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "enableMCPComposer"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "ModeSelectionContainer",
                                                "key": "mode-selection-container",
                                                "style": {
                                                "display": "flex",
                                                "flexDirection": "column"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "ModeTabsContainer",
                                                    "key": "mode-tabs-container",
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "justifyContent": "flex-start",
                                                        "borderBottom": "1px solid",
                                                        "borderColor": "#e5e7eb"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Button",
                                                            "name": "AutoInstallTab",
                                                            "key": "auto-install-tab",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/button"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": true
                                                            }
                                                            ],
                                                            "style": {
                                                            "display": "flex",
                                                            "height": "24px",
                                                            "flexDirection": "row",
                                                            "alignItems": "flex-end",
                                                            "gap": "8px",
                                                            "whiteSpace": "nowrap",
                                                            "borderBottom": "2px solid transparent",
                                                            "fontWeight": "500",
                                                            "paddingX": "12px",
                                                            "paddingY": "8px",
                                                            "fontSize": "13px"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "AutoInstallTabText",
                                                                "key": "auto-install-tab-text",
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Auto install"
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Button",
                                                            "name": "JSONTab",
                                                            "key": "json-tab",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/button"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": true
                                                            }
                                                            ],
                                                            "style": {
                                                            "display": "flex",
                                                            "height": "24px",
                                                            "flexDirection": "row",
                                                            "alignItems": "flex-end",
                                                            "gap": "8px",
                                                            "whiteSpace": "nowrap",
                                                            "borderBottom": "2px solid transparent",
                                                            "fontWeight": "500",
                                                            "paddingX": "12px",
                                                            "paddingY": "8px",
                                                            "fontSize": "13px"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "JSONTabText",
                                                                "key": "json-tab-text",
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "JSON"
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "JSONModeContent",
                                                    "key": "json-mode-content",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "JSONConfigSection",
                                                        "key": "json-config-section",
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "gap": "16px"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "Tabs",
                                                                "name": "PlatformTabs",
                                                                "key": "platform-tabs",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/tabs-button"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "selectedPlatform"
                                                                    }
                                                                }
                                                                ],
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "TabsList",
                                                                    "name": "PlatformTabsList",
                                                                    "key": "platform-tabs-list",
                                                                    "children": [
                                                                        {
                                                                        "type": "repeat",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TabsTrigger",
                                                                                "name": "PlatformTab",
                                                                                "key": "platform-tab",
                                                                                "style": {
                                                                                "display": "flex",
                                                                                "alignItems": "center",
                                                                                "gap": "8px"
                                                                                },
                                                                                "attrs": [
                                                                                {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "tab.name"
                                                                                    }
                                                                                }
                                                                                ],
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "ForwardedIconComponent",
                                                                                    "name": "PlatformIcon",
                                                                                    "key": "platform-icon",
                                                                                    "dependency": {
                                                                                        "type": "local",
                                                                                        "path": "@/components/common/genericIconComponent"
                                                                                    },
                                                                                    "attrs": [
                                                                                        {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "local",
                                                                                            "id": "tab.icon"
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "text",
                                                                                    "name": "PlatformTabTitle",
                                                                                    "key": "platform-tab-title",
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "local",
                                                                                            "id": "tab.title"
                                                                                        }
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            "dataSource": {
                                                                            "type": "static",
                                                                            "content": [
                                                                                {
                                                                                "name": "macoslinux",
                                                                                "title": "macOS/Linux",
                                                                                "icon": "FaApple"
                                                                                },
                                                                                {
                                                                                "name": "windows",
                                                                                "title": "Windows",
                                                                                "icon": "FaWindows"
                                                                                },
                                                                                {
                                                                                "name": "wsl",
                                                                                "title": "WSL",
                                                                                "icon": "FaLinux"
                                                                                }
                                                                            ]
                                                                            },
                                                                            "meta": {
                                                                            "useIndex": true,
                                                                            "iteratorName": "tab",
                                                                            "indexName": "index"
                                                                            }
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "CodeDisplayContainer",
                                                                "key": "code-display-container",
                                                                "style": {
                                                                "overflow": "hidden",
                                                                "borderRadius": "8px",
                                                                "border": "1px solid",
                                                                "borderColor": "#e5e7eb"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "SyntaxHighlighter",
                                                                    "name": "JSONSyntaxHighlighter",
                                                                    "key": "json-syntax-highlighter",
                                                                    "dependency": {
                                                                        "type": "external",
                                                                        "path": "react-syntax-highlighter"
                                                                    },
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "content": "json"
                                                                        }
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "MemoizedCodeTag",
                                                                            "name": "JSONCodeContent",
                                                                            "key": "json-code-content",
                                                                            "style": {
                                                                            "position": "relative",
                                                                            "backgroundColor": "#f8fafc",
                                                                            "fontSize": "13px"
                                                                            },
                                                                            "children": [
                                                                            {
                                                                                "type": "element",
                                                                                "content": {
                                                                                "elementType": "container",
                                                                                "name": "CodeActions",
                                                                                "key": "code-actions",
                                                                                "style": {
                                                                                    "position": "absolute",
                                                                                    "right": "16px",
                                                                                    "top": "16px",
                                                                                    "display": "flex",
                                                                                    "alignItems": "center",
                                                                                    "gap": "24px"
                                                                                },
                                                                                "children": [
                                                                                    {
                                                                                    "type": "conditional",
                                                                                    "content": {
                                                                                        "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "Button",
                                                                                            "name": "GenerateAPIKeyButton",
                                                                                            "key": "generate-api-key-button",
                                                                                            "dependency": {
                                                                                            "type": "local",
                                                                                            "path": "@/components/ui/button"
                                                                                            },
                                                                                            "attrs": [
                                                                                            {
                                                                                                "type": "static",
                                                                                                "content": true
                                                                                            }
                                                                                            ],
                                                                                            "style": {
                                                                                            "display": "flex",
                                                                                            "alignItems": "center",
                                                                                            "gap": "8px",
                                                                                            "fontFamily": "sans-serif",
                                                                                            "color": "#6b7280"
                                                                                            },
                                                                                            "children": [
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "ForwardedIconComponent",
                                                                                                "name": "KeyIcon",
                                                                                                "key": "key-icon",
                                                                                                "dependency": {
                                                                                                    "type": "local",
                                                                                                    "path": "@/components/common/genericIconComponent"
                                                                                                },
                                                                                                "attrs": [
                                                                                                    {
                                                                                                    "type": "static",
                                                                                                    "content": "key"
                                                                                                    }
                                                                                                ],
                                                                                                "style": {
                                                                                                    "height": "16px",
                                                                                                    "width": "16px"
                                                                                                }
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "GenerateKeyButtonText",
                                                                                                "key": "generate-key-button-text",
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                        "referenceType": "state",
                                                                                                        "id": "apiKeyButtonText"
                                                                                                    }
                                                                                                    }
                                                                                                ]
                                                                                                }
                                                                                            }
                                                                                            ]
                                                                                        }
                                                                                        },
                                                                                        "reference": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                            "referenceType": "state",
                                                                                            "id": "isNotAutoLogin"
                                                                                        }
                                                                                        }
                                                                                    }
                                                                                    },
                                                                                    {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                        "elementType": "Button",
                                                                                        "name": "CopyCodeButton",
                                                                                        "key": "copy-code-button",
                                                                                        "dependency": {
                                                                                        "type": "local",
                                                                                        "path": "@/components/ui/button"
                                                                                        },
                                                                                        "attrs": [
                                                                                        {
                                                                                            "type": "static",
                                                                                            "content": true
                                                                                        },
                                                                                        {
                                                                                            "type": "static",
                                                                                            "content": "icon"
                                                                                        }
                                                                                        ],
                                                                                        "style": {
                                                                                        "height": "16px",
                                                                                        "width": "16px",
                                                                                        "color": "#6b7280"
                                                                                        },
                                                                                        "children": [
                                                                                        {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                            "elementType": "ForwardedIconComponent",
                                                                                            "name": "CopyIcon",
                                                                                            "key": "copy-icon",
                                                                                            "dependency": {
                                                                                                "type": "local",
                                                                                                "path": "@/components/common/genericIconComponent"
                                                                                            },
                                                                                            "attrs": [
                                                                                                {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "state",
                                                                                                    "id": "copyIconName"
                                                                                                }
                                                                                                }
                                                                                            ],
                                                                                            "style": {
                                                                                                "height": "16px",
                                                                                                "width": "16px"
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                        ]
                                                                                    }
                                                                                    }
                                                                                ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "element",
                                                                                "content": {
                                                                                "elementType": "container",
                                                                                "name": "JSONCodeContainer",
                                                                                "key": "json-code-container",
                                                                                "style": {
                                                                                    "overflowX": "auto",
                                                                                    "padding": "16px"
                                                                                },
                                                                                "children": [
                                                                                    {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                        "elementType": "text",
                                                                                        "name": "MCPServerJSONCode",
                                                                                        "key": "mcp-server-json-code",
                                                                                        "children": [
                                                                                        {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                            "referenceType": "state",
                                                                                            "id": "mcpServerJSON"
                                                                                            }
                                                                                        }
                                                                                        ]
                                                                                    }
                                                                                    }
                                                                                ]
                                                                                }
                                                                            }
                                                                            ]
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "SetupInstructions",
                                                        "key": "setup-instructions",
                                                        "style": {
                                                            "paddingLeft": "8px",
                                                            "paddingRight": "8px",
                                                            "fontSize": "14px",
                                                            "color": "#6b7280"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "SetupInstructionText",
                                                                "key": "setup-instruction-text",
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Add this config to your client of choice. Need help? See the "
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "link",
                                                                "name": "SetupGuideLink",
                                                                "key": "setup-guide-link",
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "https://docs.langflow.org/mcp-server#connect-clients-to-use-the-servers-actions"
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": "_blank"
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": "noreferrer"
                                                                }
                                                                ],
                                                                "style": {
                                                                "color": "#db2777"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "setup guide"
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "SetupInstructionEndText",
                                                                "key": "setup-instruction-end-text",
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "."
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "selectedModeIsJSON"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "AutoInstallModeContent",
                                                    "key": "auto-install-mode-content",
                                                    "style": {
                                                    "display": "flex",
                                                    "flexDirection": "column",
                                                    "gap": "4px"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "conditional",
                                                        "content": {
                                                        "node": {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "LocalConnectionWarning",
                                                            "key": "local-connection-warning",
                                                            "style": {
                                                                "marginBottom": "8px",
                                                                "borderRadius": "6px",
                                                                "backgroundColor": "#fef3c7",
                                                                "paddingLeft": "12px",
                                                                "paddingRight": "12px",
                                                                "paddingTop": "8px",
                                                                "paddingBottom": "8px",
                                                                "fontSize": "14px",
                                                                "color": "#92400e"
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "WarningContent",
                                                                    "key": "warning-content",
                                                                    "style": {
                                                                    "display": "flex",
                                                                    "alignItems": "center",
                                                                    "gap": "12px"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "LocalWarningIcon",
                                                                        "key": "local-warning-icon",
                                                                        "dependency": {
                                                                            "type": "local",
                                                                            "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "AlertTriangle"
                                                                            }
                                                                        ],
                                                                        "style": {
                                                                            "height": "16px",
                                                                            "width": "16px",
                                                                            "flexShrink": "0"
                                                                        }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "text",
                                                                        "name": "LocalWarningText",
                                                                        "key": "local-warning-text",
                                                                        "children": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "One-click install is disabled because the Langflow server is not running on your local machine. Use the JSON tab to configure your client manually."
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "isNotLocalConnection"
                                                            }
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "repeat",
                                                        "content": {
                                                        "node": {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "Button",
                                                            "name": "AutoInstallerButton",
                                                            "key": "auto-installer-button",
                                                            "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/button"
                                                            },
                                                            "attrs": [
                                                                {
                                                                "type": "static",
                                                                "content": "ghost"
                                                                }
                                                            ],
                                                            "style": {
                                                                "display": "flex",
                                                                "alignItems": "center",
                                                                "justifyContent": "space-between"
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "InstallerInfo",
                                                                    "key": "installer-info",
                                                                    "style": {
                                                                    "display": "flex",
                                                                    "alignItems": "center",
                                                                    "gap": "16px",
                                                                    "fontSize": "14px",
                                                                    "fontWeight": "500"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "InstallerIcon",
                                                                        "key": "installer-icon",
                                                                        "dependency": {
                                                                            "type": "local",
                                                                            "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "installer.icon"
                                                                            }
                                                                            }
                                                                        ],
                                                                        "style": {
                                                                            "height": "20px",
                                                                            "width": "20px"
                                                                        }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "text",
                                                                        "name": "InstallerTitle",
                                                                        "key": "installer-title",
                                                                        "children": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "installer.title"
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "ForwardedIconComponent",
                                                                    "name": "InstallerStatusIcon",
                                                                    "key": "installer-status-icon",
                                                                    "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/common/genericIconComponent"
                                                                    },
                                                                    "attrs": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "installerStatusIcon"
                                                                        }
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "height": "16px",
                                                                    "width": "16px"
                                                                    }
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        "dataSource": {
                                                            "type": "static",
                                                            "content": [
                                                            {
                                                                "name": "cursor",
                                                                "title": "Cursor",
                                                                "icon": "Cursor"
                                                            },
                                                            {
                                                                "name": "claude",
                                                                "title": "Claude",
                                                                "icon": "Claude"
                                                            },
                                                            {
                                                                "name": "windsurf",
                                                                "title": "Windsurf",
                                                                "icon": "Windsurf"
                                                            }
                                                            ]
                                                        },
                                                        "meta": {
                                                            "useIndex": true,
                                                            "iteratorName": "installer",
                                                            "indexName": "index"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "selectedModeIsAutoInstall"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "conditional",
                                "content": {
                                    "node": {
                                    "type": "element",
                                    "content": {
                                        "elementType": "AuthModal",
                                        "name": "AuthenticationModal",
                                        "key": "authentication-modal",
                                        "dependency": {
                                        "type": "local",
                                        "path": "@/modals/authModal"
                                        }
                                    }
                                    },
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "state",
                                        "id": "enableMCPComposer"
                                    }
                                    }
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "folderName": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "isCopied": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "apiKey": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "isGeneratingApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "authModalOpen": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "selectedPlatform": {
                            "type": "string",
                            "defaultValue": "macoslinux"
                            },
                            "selectedMode": {
                            "type": "string",
                            "defaultValue": "Auto install"
                            },
                            "loadingMCP": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "flowsMCPData": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "currentAuthSettings": {
                            "type": "object",
                            "defaultValue": {
                                "auth_type": "none"
                            }
                            },
                            "mcpServerJSON": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "enableMCPComposer": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "isAutoLogin": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isLocalConnection": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "installedMCP": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "hasAuthentication": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasNoAuthentication": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "currentAuthMethod": {
                            "type": "string",
                            "defaultValue": "None"
                            },
                            "authButtonText": {
                            "type": "string",
                            "defaultValue": "Add Auth"
                            },
                            "selectedModeIsJSON": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "selectedModeIsAutoInstall": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "isNotAutoLogin": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "isNotLocalConnection": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "copyIconName": {
                            "type": "string",
                            "defaultValue": "copy"
                            },
                            "apiKeyButtonText": {
                            "type": "string",
                            "defaultValue": "Generate API key"
                            },
                            "installerStatusIcon": {
                            "type": "string",
                            "defaultValue": "Plus"
                            }
                        },
                        "propDefinitions": {
                            "folderName": {
                            "type": "string",
                            "defaultValue": ""
                            }
                        },
                        "styleSetDefinitions": {
                            "containerLayout": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "gap": "16px"
                            }
                            },
                            "flexRow": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "row",
                                "alignItems": "center",
                                "gap": "8px"
                            }
                            },
                            "codeDisplay": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "#f8fafc",
                                "border": "1px solid #e5e7eb",
                                "borderRadius": "8px",
                                "padding": "16px",
                                "fontFamily": "monospace",
                                "fontSize": "13px",
                                "overflowX": "auto"
                            }
                            },
                            "warningBox": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "#fef3c7",
                                "border": "1px solid #fcd34d",
                                "borderRadius": "6px",
                                "padding": "12px",
                                "color": "#92400e"
                            }
                            },
                            "successStatus": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "color": "#10b981",
                                "display": "flex",
                                "alignItems": "center",
                                "gap": "8px"
                            }
                            },
                            "errorStatus": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "color": "#f59e0b",
                                "display": "flex",
                                "alignItems": "center",
                                "gap": "8px"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280",
                            "accentPink": "#db2777",
                            "accentGreen": "#10b981",
                            "accentAmber": "#f59e0b",
                            "warningBackground": "#fef3c7",
                            "warningText": "#92400e",
                            "codeBackground": "#f8fafc"
                            }
                        }
                        }
				},
				{
					"id": "add_mcp_server_modal",
					"type": "interface",
					"name": "AddMCPServerModal",
					"description": "Modal dialog for adding new MCP servers with configuration validation and connection testing",
					"component_path": "src/frontend/src/modals/AddMCPServerModal",
					"uidl_definition_physical": {
                        "name": "AddMcpServerModal",
                        "propDefinitions": {
                            "children": {
                            "type": "element",
                            "isRequired": false
                            },
                            "initialData": {
                            "type": "object",
                            "isRequired": false
                            },
                            "open": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "setOpen": {
                            "type": "func",
                            "isRequired": false
                            },
                            "onSuccess": {
                            "type": "func",
                            "isRequired": false
                            }
                        },
                        "stateDefinitions": {
                            "open": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "type": {
                            "type": "string",
                            "defaultValue": "JSON"
                            },
                            "jsonValue": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "error": {
                            "type": "string",
                            "defaultValue": null
                            },
                            "stdioName": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "stdioCommand": {
                            "type": "string", 
                            "defaultValue": ""
                            },
                            "stdioArgs": {
                            "type": "array",
                            "defaultValue": [""]
                            },
                            "stdioEnv": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "sseName": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "sseUrl": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "sseEnv": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "sseHeaders": {
                            "type": "array",
                            "defaultValue": []
                            }
                        },
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "BaseModal",
                            "name": "AddMcpServerModal",
                            "attrs": [
                                {
                                "type": "dynamic",
                                "content": {
                                    "referenceType": "state",
                                    "id": "open"
                                },
                                "name": "open"
                                },
                                {
                                "type": "dynamic",
                                "content": {
                                    "referenceType": "local",
                                    "id": "setOpen"
                                },
                                "name": "setOpen"
                                },
                                {
                                "type": "static",
                                "content": {
                                    "name": "size",
                                    "value": "x-small"
                                }
                                },
                                {
                                "type": "dynamic",
                                "content": {
                                    "referenceType": "local",
                                    "id": "submitForm"
                                },
                                "name": "onSubmit"
                                },
                                {
                                "type": "static",
                                "content": {
                                    "name": "className",
                                    "value": "!p-0"
                                }
                                }
                            ],
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "BaseModal.Trigger",
                                    "name": "ModalTrigger",
                                    "children": [
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "prop",
                                        "id": "children"
                                        }
                                    }
                                    ]
                                }
                                },
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "BaseModal.Content",
                                    "name": "ModalContent",
                                    "attrs": [
                                    {
                                        "type": "static",
                                        "content": {
                                        "name": "className",
                                        "value": "flex flex-col justify-between overflow-hidden"
                                        }
                                    }
                                    ],
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "div",
                                        "name": "MainContainer",
                                        "attrs": [
                                            {
                                            "type": "static",
                                            "content": {
                                                "name": "className",
                                                "value": "flex h-full w-full flex-col overflow-hidden"
                                            }
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "div",
                                                "name": "HeaderSection",
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "content": {
                                                    "name": "className",
                                                    "value": "flex flex-col gap-3 p-4 tracking-normal"
                                                    }
                                                }
                                                ],
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "div",
                                                    "name": "HeaderTitle",
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": {
                                                            "name": "className",
                                                            "value": "flex items-center gap-2 text-sm font-medium"
                                                        }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "ForwardedIconComponent",
                                                            "name": "McpIcon",
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "name",
                                                                "value": "Mcp"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "className",
                                                                "value": "h-4 w-4 text-primary"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "aria-hidden",
                                                                "value": "true"
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "prop",
                                                                "id": "initialData"
                                                            }
                                                            },
                                                            "value": true,
                                                            "node": {
                                                            "type": "static",
                                                            "content": "Update MCP Server"
                                                            },
                                                            "fallback": {
                                                            "type": "static",
                                                            "content": "Add MCP Server"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "span",
                                                    "name": "HeaderDescription",
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": {
                                                            "name": "className",
                                                            "value": "text-mmd font-normal text-muted-foreground"
                                                        }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Save MCP Servers. Manage added servers in "
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "CustomLink",
                                                            "name": "SettingsLink",
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "className",
                                                                "value": "underline"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "to",
                                                                "value": "/settings/mcp-servers"
                                                                }
                                                            }
                                                            ],
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "settings"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": "."
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "div",
                                                "name": "FormSection",
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "content": {
                                                    "name": "className",
                                                    "value": "flex h-full w-full flex-col gap-4 overflow-hidden"
                                                    }
                                                }
                                                ],
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "Tabs",
                                                    "name": "ServerTypeTabs",
                                                    "attrs": [
                                                        {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "state",
                                                            "id": "type"
                                                        },
                                                        "name": "defaultValue"
                                                        },
                                                        {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "local",
                                                            "id": "changeType"
                                                        },
                                                        "name": "onValueChange"
                                                        },
                                                        {
                                                        "type": "static",
                                                        "content": {
                                                            "name": "className",
                                                            "value": "w-full"
                                                        }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "div",
                                                            "name": "TabsContainer",
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "className",
                                                                "value": "px-4"
                                                                }
                                                            }
                                                            ],
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "TabsList",
                                                                "name": "TabsList",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": {
                                                                        "name": "className",
                                                                        "value": "mb-4 grid w-full grid-cols-3"
                                                                    }
                                                                    }
                                                                ],
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "TabsTrigger",
                                                                        "name": "JSONTab",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "local",
                                                                            "id": "!!initialData && type !== 'JSON'"
                                                                            },
                                                                            "name": "disabled"
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "data-testid",
                                                                            "value": "json-tab"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "value",
                                                                            "value": "JSON"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "JSON"
                                                                        }
                                                                        ]
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "TabsTrigger",
                                                                        "name": "STDIOTab",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "data-testid",
                                                                            "value": "stdio-tab"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "local",
                                                                            "id": "!!initialData && type !== 'STDIO'"
                                                                            },
                                                                            "name": "disabled"
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "value",
                                                                            "value": "STDIO"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "STDIO"
                                                                        }
                                                                        ]
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "TabsTrigger",
                                                                        "name": "SSETab",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "data-testid",
                                                                            "value": "sse-tab"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "local",
                                                                            "id": "!!initialData && type !== 'SSE'"
                                                                            },
                                                                            "name": "disabled"
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "value",
                                                                            "value": "SSE"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "SSE"
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "div",
                                                            "name": "TabsContentContainer",
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "className",
                                                                "value": "relative flex max-h-[280px] min-h-[280px] w-full flex-1 flex-col gap-2 overflow-y-auto border-y p-4 pt-2"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": {
                                                                "name": "id",
                                                                "value": "global-variable-modal-inputs"
                                                                }
                                                            }
                                                            ],
                                                            "children": [
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "error"
                                                                    }
                                                                },
                                                                "value": true,
                                                                "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "ShadTooltip",
                                                                    "name": "ErrorTooltip",
                                                                    "attrs": [
                                                                        {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "error"
                                                                        },
                                                                        "name": "content"
                                                                        }
                                                                    ],
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "div",
                                                                            "name": "ErrorMessage",
                                                                            "attrs": [
                                                                            {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                "referenceType": "local",
                                                                                "id": "cn('absolute right-4 top-4 truncate text-xs font-medium text-red-500', type === 'JSON' ? 'w-3/5' : 'w-4/5')"
                                                                                },
                                                                                "name": "className"
                                                                            }
                                                                            ],
                                                                            "children": [
                                                                            {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                "referenceType": "state",
                                                                                "id": "error"
                                                                                }
                                                                            }
                                                                            ]
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "TabsContent",
                                                                "name": "JSONContent",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": {
                                                                        "name": "value",
                                                                        "value": "JSON"
                                                                    }
                                                                    }
                                                                ],
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "div",
                                                                        "name": "JSONFormContainer",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "className",
                                                                            "value": "flex flex-col gap-2"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "Label",
                                                                            "name": "JSONConfigLabel",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "!text-mmd"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": "Paste in JSON config"
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "Textarea",
                                                                            "name": "JSONConfigTextarea",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "state",
                                                                                    "id": "jsonValue"
                                                                                },
                                                                                "name": "value"
                                                                                },
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "data-testid",
                                                                                    "value": "json-input"
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "min-h-[225px] font-mono text-mmd"
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "placeholder",
                                                                                    "value": "Paste in JSON config to add server"
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "isPending"
                                                                                },
                                                                                "name": "disabled"
                                                                                }
                                                                            ],
                                                                            "events": {
                                                                                "change": [
                                                                                {
                                                                                    "type": "stateChange",
                                                                                    "modifies": "jsonValue",
                                                                                    "newState": "$event.target.value"
                                                                                }
                                                                                ]
                                                                            }
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "TabsContent",
                                                                "name": "STDIOContent",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": {
                                                                        "name": "value",
                                                                        "value": "STDIO"
                                                                    }
                                                                    }
                                                                ],
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "div",
                                                                        "name": "STDIOFormContainer",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "className",
                                                                            "value": "flex flex-col gap-4"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "STDIONameField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "STDIONameLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "flex items-start gap-1 !text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Name "
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "span",
                                                                                        "name": "RequiredIndicator",
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": {
                                                                                                "name": "className",
                                                                                                "value": "text-red-500"
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "*"
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Input",
                                                                                    "name": "STDIONameInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "stdioName"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "placeholder",
                                                                                        "value": "Type server name..."
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "data-testid",
                                                                                        "value": "stdio-name-input"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "isPending"
                                                                                        },
                                                                                        "name": "disabled"
                                                                                    }
                                                                                    ],
                                                                                    "events": {
                                                                                    "change": [
                                                                                        {
                                                                                        "type": "stateChange",
                                                                                        "modifies": "stdioName",
                                                                                        "newState": "$event.target.value"
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "STDIOCommandField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "STDIOCommandLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "flex items-start gap-1 !text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Command"
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "span",
                                                                                        "name": "RequiredIndicator",
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": {
                                                                                                "name": "className",
                                                                                                "value": "text-red-500"
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "*"
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Input",
                                                                                    "name": "STDIOCommandInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "stdioCommand"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "placeholder",
                                                                                        "value": "Type command..."
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "data-testid",
                                                                                        "value": "stdio-command-input"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "isPending"
                                                                                        },
                                                                                        "name": "disabled"
                                                                                    }
                                                                                    ],
                                                                                    "events": {
                                                                                    "change": [
                                                                                        {
                                                                                        "type": "stateChange",
                                                                                        "modifies": "stdioCommand",
                                                                                        "newState": "$event.target.value"
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "STDIOArgumentsField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "STDIOArgumentsLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "!text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Arguments"
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "InputListComponent",
                                                                                    "name": "STDIOArgumentsList",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "stdioArgs"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "({ value }) => setStdioArgs(value)"
                                                                                        },
                                                                                        "name": "handleOnNewValue"
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "isPending"
                                                                                        },
                                                                                        "name": "disabled"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "placeholder",
                                                                                        "value": "Type argument..."
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "listAddLabel",
                                                                                        "value": "Add Argument"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "editNode",
                                                                                        "value": false
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "id",
                                                                                        "value": "stdio-args"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "data-testid",
                                                                                        "value": "stdio-args-input"
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "STDIOEnvironmentField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "STDIOEnvironmentLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "!text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Environment Variables"
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "IOKeyPairInput",
                                                                                    "name": "STDIOEnvironmentInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "stdioEnv"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "setStdioEnv"
                                                                                        },
                                                                                        "name": "onChange"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "duplicateKey",
                                                                                        "value": false
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "isList",
                                                                                        "value": true
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "isInputField",
                                                                                        "value": true
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "testId",
                                                                                        "value": "stdio-env"
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "TabsContent",
                                                                "name": "SSEContent",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": {
                                                                        "name": "value",
                                                                        "value": "SSE"
                                                                    }
                                                                    }
                                                                ],
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "div",
                                                                        "name": "SSEFormContainer",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": {
                                                                            "name": "className",
                                                                            "value": "flex flex-col gap-4"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "SSENameField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "SSENameLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "flex items-start gap-1 !text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Name"
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "span",
                                                                                        "name": "RequiredIndicator",
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": {
                                                                                                "name": "className",
                                                                                                "value": "text-red-500"
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "*"
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Input",
                                                                                    "name": "SSENameInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "sseName"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "placeholder",
                                                                                        "value": "Name"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "data-testid",
                                                                                        "value": "sse-name-input"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "isPending"
                                                                                        },
                                                                                        "name": "disabled"
                                                                                    }
                                                                                    ],
                                                                                    "events": {
                                                                                    "change": [
                                                                                        {
                                                                                        "type": "stateChange",
                                                                                        "modifies": "sseName",
                                                                                        "newState": "$event.target.value"
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "SSEUrlField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "SSEUrlLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "flex items-start gap-1 !text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "SSE URL"
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "span",
                                                                                        "name": "RequiredIndicator",
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": {
                                                                                                "name": "className",
                                                                                                "value": "text-red-500"
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "*"
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Input",
                                                                                    "name": "SSEUrlInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "sseUrl"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "placeholder",
                                                                                        "value": "SSE URL"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "data-testid",
                                                                                        "value": "sse-url-input"
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "isPending"
                                                                                        },
                                                                                        "name": "disabled"
                                                                                    }
                                                                                    ],
                                                                                    "events": {
                                                                                    "change": [
                                                                                        {
                                                                                        "type": "stateChange",
                                                                                        "modifies": "sseUrl",
                                                                                        "newState": "$event.target.value"
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "SSEHeadersField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "SSEHeadersLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "!text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Headers"
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "IOKeyPairInput",
                                                                                    "name": "SSEHeadersInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "sseHeaders"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "setSseHeaders"
                                                                                        },
                                                                                        "name": "onChange"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "duplicateKey",
                                                                                        "value": false
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "isList",
                                                                                        "value": true
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "isInputField",
                                                                                        "value": true
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "testId",
                                                                                        "value": "sse-headers"
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "div",
                                                                            "name": "SSEEnvironmentField",
                                                                            "attrs": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": {
                                                                                    "name": "className",
                                                                                    "value": "flex flex-col gap-2"
                                                                                }
                                                                                }
                                                                            ],
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "Label",
                                                                                    "name": "SSEEnvironmentLabel",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "className",
                                                                                        "value": "!text-mmd"
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": "Environment Variables"
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "IOKeyPairInput",
                                                                                    "name": "SSEEnvironmentInput",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "state",
                                                                                        "id": "sseEnv"
                                                                                        },
                                                                                        "name": "value"
                                                                                    },
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "setSseEnv"
                                                                                        },
                                                                                        "name": "onChange"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "duplicateKey",
                                                                                        "value": false
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "isList",
                                                                                        "value": true
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "isInputField",
                                                                                        "value": true
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "content": {
                                                                                        "name": "testId",
                                                                                        "value": "sse-env"
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "div",
                                        "name": "ButtonsContainer",
                                        "attrs": [
                                            {
                                            "type": "static",
                                            "content": {
                                                "name": "className",
                                                "value": "flex justify-end gap-2 p-4"
                                            }
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "Button",
                                                "name": "CancelButton",
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "content": {
                                                    "name": "variant",
                                                    "value": "outline"
                                                    }
                                                },
                                                {
                                                    "type": "static",
                                                    "content": {
                                                    "name": "size",
                                                    "value": "sm"
                                                    }
                                                }
                                                ],
                                                "events": {
                                                "click": [
                                                    {
                                                    "type": "stateChange",
                                                    "modifies": "open",
                                                    "newState": false
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "span",
                                                    "name": "CancelButtonText",
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": {
                                                            "name": "className",
                                                            "value": "text-mmd font-normal"
                                                        }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Cancel"
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "Button",
                                                "name": "SubmitButton",
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "content": {
                                                    "name": "size",
                                                    "value": "sm"
                                                    }
                                                },
                                                {
                                                    "type": "static",
                                                    "content": {
                                                    "name": "data-testid",
                                                    "value": "add-mcp-server-button"
                                                    }
                                                },
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "local",
                                                    "id": "isPending"
                                                    },
                                                    "name": "loading"
                                                }
                                                ],
                                                "events": {
                                                "click": [
                                                    {
                                                    "type": "propCall",
                                                    "calls": "submitForm"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "span",
                                                    "name": "SubmitButtonText",
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": {
                                                            "name": "className",
                                                            "value": "text-mmd"
                                                        }
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "prop",
                                                                "id": "initialData"
                                                            }
                                                            },
                                                            "value": true,
                                                            "node": {
                                                            "type": "static",
                                                            "content": "Update Server"
                                                            },
                                                            "fallback": {
                                                            "type": "static",
                                                            "content": "Add Server"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                }
                            ]
                            }
                        },
                        "importDefinitions": {
                            "BaseModal": {
                            "type": "library",
                            "path": "@/modals/baseModal",
                            "version": "1.0.0"
                            },
                            "ForwardedIconComponent": {
                            "type": "library",
                            "path": "@/components/common/genericIconComponent",
                            "version": "1.0.0"
                            },
                            "CustomLink": {
                            "type": "library",
                            "path": "@/customization/components/custom-link",
                            "version": "1.0.0"
                            },
                            "Tabs": {
                            "type": "library",
                            "path": "@/components/ui/tabs-button",
                            "version": "1.0.0"
                            },
                            "TabsList": {
                            "type": "library",
                            "path": "@/components/ui/tabs-button",
                            "version": "1.0.0"
                            },
                            "TabsTrigger": {
                            "type": "library",
                            "path": "@/components/ui/tabs-button",
                            "version": "1.0.0"
                            },
                            "TabsContent": {
                            "type": "library",
                            "path": "@/components/ui/tabs-button", 
                            "version": "1.0.0"
                            },
                            "ShadTooltip": {
                            "type": "library",
                            "path": "@/components/common/shadTooltipComponent",
                            "version": "1.0.0"
                            },
                            "Label": {
                            "type": "library",
                            "path": "@/components/ui/label",
                            "version": "1.0.0"
                            },
                            "Textarea": {
                            "type": "library",
                            "path": "@/components/ui/textarea",
                            "version": "1.0.0"
                            },
                            "Input": {
                            "type": "library",
                            "path": "@/components/ui/input",
                            "version": "1.0.0"
                            },
                            "InputListComponent": {
                            "type": "library",
                            "path": "@/components/core/parameterRenderComponent/components/inputListComponent",
                            "version": "1.0.0"
                            },
                            "IOKeyPairInput": {
                            "type": "library",
                            "path": "@/modals/IOModal/components/IOFieldView/components/key-pair-input",
                            "version": "1.0.0"
                            },
                            "Button": {
                            "type": "library",
                            "path": "@/components/ui/button",
                            "version": "1.0.0"
                            }
                        }
                    }
				},
				{
					"id": "settings_page",
					"type": "interface",
					"name": "SettingsPage",
					"description": "User settings management with tabs for general, API keys, global variables, and MCP servers",
					"route": "/settings",
					"component_path": "src/frontend/src/pages/SettingsPage",
					"uidl_definition_physical": {
                        "name": "SettingsPage",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "SettingsPageRoot",
                            "key": "settings-page-root",
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "PageLayout",
                                    "name": "SettingsPageLayout",
                                    "key": "settings-page-layout",
                                    "dependency": {
                                    "type": "local",
                                    "path": "../../components/common/pageLayout"
                                    },
                                    "attrs": [
                                    {
                                        "type": "static",
                                        "content": -1
                                    },
                                    {
                                        "type": "static",
                                        "content": "Settings"
                                    },
                                    {
                                        "type": "static",
                                        "content": "Manage the general settings for Langflow."
                                    }
                                    ],
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "SidebarProvider",
                                        "name": "SettingsSidebarProvider",
                                        "key": "settings-sidebar-provider",
                                        "dependency": {
                                            "type": "local",
                                            "path": "@/components/ui/sidebar"
                                        },
                                        "attrs": [
                                            {
                                            "type": "static",
                                            "content": "15rem"
                                            },
                                            {
                                            "type": "static",
                                            "content": false
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "SideBarButtonsComponent",
                                                "name": "SettingsSidebarButtons",
                                                "key": "settings-sidebar-buttons",
                                                "dependency": {
                                                "type": "local",
                                                "path": "@/components/core/sidebarComponent"
                                                },
                                                "attrs": [
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "state",
                                                    "id": "sidebarNavItems"
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "main",
                                                "name": "SettingsMainContent",
                                                "key": "settings-main-content",
                                                "style": {
                                                "display": "flex",
                                                "flex": "1",
                                                "overflow": "hidden"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "SettingsContentWrapper",
                                                    "key": "settings-content-wrapper",
                                                    "style": {
                                                        "display": "flex",
                                                        "flex": "1",
                                                        "flexDirection": "column",
                                                        "overflowX": "hidden",
                                                        "paddingTop": "4px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Outlet",
                                                            "name": "SettingsOutlet",
                                                            "key": "settings-outlet",
                                                            "dependency": {
                                                            "type": "external",
                                                            "path": "react-router-dom"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "autoLogin": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasStore": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "showGeneralSettings": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "enableProfileIcons": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "enableLangflowStore": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "enableDatastaxLangflow": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "sidebarNavItems": {
                            "type": "array",
                            "defaultValue": [
                                {
                                "title": "General",
                                "href": "/settings/general",
                                "icon": "SlidersHorizontal"
                                },
                                {
                                "title": "MCP Servers",
                                "href": "/settings/mcp-servers",
                                "icon": "Mcp"
                                },
                                {
                                "title": "API Keys",
                                "href": "/settings/api-keys",
                                "icon": "Key"
                                },
                                {
                                "title": "Store API Key",
                                "href": "/settings/store-api-key",
                                "icon": "Store"
                                },
                                {
                                "title": "Global Variables",
                                "href": "/settings/global-variables",
                                "icon": "Globe"
                                },
                                {
                                "title": "Shortcuts",
                                "href": "/settings/shortcuts",
                                "icon": "Keyboard"
                                },
                                {
                                "title": "Messages",
                                "href": "/settings/messages",
                                "icon": "MessagesSquare"
                                }
                            ]
                            }
                        },
                        "propDefinitions": {},
                        "styleSetDefinitions": {
                            "sidebarLayout": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "height": "100vh",
                                "width": "100vw"
                            }
                            },
                            "mainContentArea": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flex": "1",
                                "overflow": "hidden"
                            }
                            },
                            "contentWrapper": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flex": "1",
                                "flexDirection": "column",
                                "overflowX": "hidden",
                                "paddingTop": "4px"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280",
                            "sidebarWidth": "15rem"
                            }
                        },
                        "subComponents": {
                            "GeneralPage": {
                            "name": "GeneralPage",
                            "node": {
                                "type": "element",
                                "content": {
                                "elementType": "container",
                                "name": "GeneralPageContainer",
                                "key": "general-page-container",
                                "style": {
                                    "display": "flex",
                                    "height": "100vh",
                                    "width": "100vw",
                                    "flexDirection": "column",
                                    "gap": "24px",
                                    "overflowX": "hidden"
                                },
                                "children": [
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "GeneralPageHeaderComponent",
                                        "name": "GeneralPageHeader",
                                        "key": "general-page-header",
                                        "dependency": {
                                        "type": "local",
                                        "path": "./components/GeneralPageHeader"
                                        }
                                    }
                                    },
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "GeneralPageFormsContainer",
                                        "key": "general-page-forms-container",
                                        "style": {
                                        "display": "flex",
                                        "width": "100vw",
                                        "flexDirection": "column",
                                        "gap": "24px"
                                        },
                                        "children": [
                                        {
                                            "type": "conditional",
                                            "content": {
                                            "node": {
                                                "type": "element",
                                                "content": {
                                                "elementType": "ProfilePictureFormComponent",
                                                "name": "ProfilePictureForm",
                                                "key": "profile-picture-form",
                                                "dependency": {
                                                    "type": "local",
                                                    "path": "./components/ProfilePictureForm"
                                                }
                                                }
                                            },
                                            "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "state",
                                                "id": "enableProfileIcons"
                                                }
                                            }
                                            }
                                        },
                                        {
                                            "type": "conditional",
                                            "content": {
                                            "node": {
                                                "type": "element",
                                                "content": {
                                                "elementType": "PasswordFormComponent",
                                                "name": "PasswordForm",
                                                "key": "password-form",
                                                "dependency": {
                                                    "type": "local",
                                                    "path": "./components/PasswordForm"
                                                }
                                                }
                                            },
                                            "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "state",
                                                "id": "isNotAutoLogin"
                                                }
                                            }
                                            }
                                        }
                                        ]
                                    }
                                    },
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "CustomTermsLinks",
                                        "name": "TermsLinks",
                                        "key": "terms-links",
                                        "dependency": {
                                        "type": "local",
                                        "path": "@/customization/components/custom-terms-links"
                                        }
                                    }
                                    }
                                ]
                                }
                            }
                            },
                            "ApiKeysPage": {
                            "name": "ApiKeysPage",
                            "node": {
                                "type": "element",
                                "content": {
                                "elementType": "container",
                                "name": "ApiKeysPageContainer",
                                "key": "api-keys-page-container",
                                "style": {
                                    "display": "flex",
                                    "height": "100vh",
                                    "width": "100vw",
                                    "flexDirection": "column",
                                    "justifyContent": "space-between",
                                    "gap": "24px"
                                },
                                "children": [
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "ApiKeyHeaderComponent",
                                        "name": "ApiKeyHeader",
                                        "key": "api-key-header",
                                        "dependency": {
                                        "type": "local",
                                        "path": "./components/ApiKeyHeader"
                                        }
                                    }
                                    },
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "ApiKeysTableContainer",
                                        "key": "api-keys-table-container",
                                        "style": {
                                        "display": "flex",
                                        "height": "100vh",
                                        "width": "100vw",
                                        "flexDirection": "column",
                                        "justifyContent": "space-between"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "TableComponent",
                                            "name": "ApiKeysTable",
                                            "key": "api-keys-table",
                                            "dependency": {
                                                "type": "local",
                                                "path": "@/components/core/parameterRenderComponent/components/tableComponent"
                                            },
                                            "attrs": [
                                                {
                                                "type": "static",
                                                "content": "apiKeys"
                                                },
                                                {
                                                "type": "static",
                                                "content": "No data available"
                                                },
                                                {
                                                "type": "static",
                                                "content": "multiple"
                                                },
                                                {
                                                "type": "static",
                                                "content": true
                                                },
                                                {
                                                "type": "static",
                                                "content": true
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    }
                                ]
                                }
                            }
                            },
                            "GlobalVariablesPage": {
                            "name": "GlobalVariablesPage",
                            "node": {
                                "type": "element",
                                "content": {
                                "elementType": "container",
                                "name": "GlobalVariablesPageContainer",
                                "key": "global-variables-page-container",
                                "style": {
                                    "display": "flex",
                                    "height": "100vh",
                                    "width": "100vw",
                                    "flexDirection": "column",
                                    "justifyContent": "space-between",
                                    "gap": "24px"
                                },
                                "children": [
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "GlobalVariablesHeader",
                                        "key": "global-variables-header",
                                        "style": {
                                        "display": "flex",
                                        "width": "100vw",
                                        "alignItems": "flex-start",
                                        "justifyContent": "space-between",
                                        "gap": "24px"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "GlobalVariablesHeaderContent",
                                            "key": "global-variables-header-content",
                                            "style": {
                                                "display": "flex",
                                                "width": "100vw",
                                                "flexDirection": "column"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "GlobalVariablesTitle",
                                                    "key": "global-variables-title",
                                                    "style": {
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "fontSize": "18px",
                                                    "fontWeight": "600",
                                                    "letterSpacing": "tight"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "GlobalVariablesTitleText",
                                                        "key": "global-variables-title-text",
                                                        "children": [
                                                            {
                                                            "type": "static",
                                                            "content": "Global Variables"
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "ForwardedIconComponent",
                                                        "name": "GlobalVariablesIcon",
                                                        "key": "global-variables-icon",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/common/genericIconComponent"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "Globe"
                                                            }
                                                        ],
                                                        "style": {
                                                            "marginLeft": "8px",
                                                            "height": "20px",
                                                            "width": "20px",
                                                            "color": "#3b82f6"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "text",
                                                    "name": "GlobalVariablesDescription",
                                                    "key": "global-variables-description",
                                                    "style": {
                                                    "fontSize": "14px",
                                                    "color": "#6b7280"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "Manage global variables and assign them to fields."
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "GlobalVariablesHeaderActions",
                                            "key": "global-variables-header-actions",
                                            "style": {
                                                "display": "flex",
                                                "flexShrink": "0",
                                                "alignItems": "center",
                                                "gap": "8px"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "GlobalVariableModal",
                                                    "name": "AddGlobalVariableModal",
                                                    "key": "add-global-variable-modal",
                                                    "dependency": {
                                                    "type": "local",
                                                    "path": "@/components/core/GlobalVariableModal/GlobalVariableModal"
                                                    },
                                                    "attrs": [
                                                    {
                                                        "type": "static",
                                                        "content": true
                                                    }
                                                    ],
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "Button",
                                                        "name": "AddNewVariableButton",
                                                        "key": "add-new-variable-button",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/button"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "api-key-button-store"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": "primary"
                                                            }
                                                        ],
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "ForwardedIconComponent",
                                                                "name": "AddIcon",
                                                                "key": "add-icon",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/common/genericIconComponent"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Plus"
                                                                }
                                                                ],
                                                                "style": {
                                                                "width": "16px"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "AddNewButtonText",
                                                                "key": "add-new-button-text",
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Add New"
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    },
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "GlobalVariablesTableContainer",
                                        "key": "global-variables-table-container",
                                        "style": {
                                        "display": "flex",
                                        "height": "100vh",
                                        "width": "100vw",
                                        "flexDirection": "column",
                                        "justifyContent": "space-between"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "TableComponent",
                                            "name": "GlobalVariablesTable",
                                            "key": "global-variables-table",
                                            "dependency": {
                                                "type": "local",
                                                "path": "@/components/core/parameterRenderComponent/components/tableComponent"
                                            },
                                            "attrs": [
                                                {
                                                "type": "static",
                                                "content": "globalVariables"
                                                },
                                                {
                                                "type": "static",
                                                "content": "No data available"
                                                },
                                                {
                                                "type": "static",
                                                "content": "multiple"
                                                },
                                                {
                                                "type": "static",
                                                "content": true
                                                },
                                                {
                                                "type": "static",
                                                "content": true
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    }
                                ]
                                }
                            }
                            },
                            "ShortcutsPage": {
                            "name": "ShortcutsPage",
                            "node": {
                                "type": "element",
                                "content": {
                                "elementType": "container",
                                "name": "ShortcutsPageContainer",
                                "key": "shortcuts-page-container",
                                "style": {
                                    "display": "flex",
                                    "height": "100vh",
                                    "width": "100vw",
                                    "flexDirection": "column",
                                    "gap": "24px"
                                },
                                "children": [
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "ShortcutsHeader",
                                        "key": "shortcuts-header",
                                        "style": {
                                        "display": "flex",
                                        "width": "100vw",
                                        "alignItems": "flex-start",
                                        "justifyContent": "space-between",
                                        "gap": "24px"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "ShortcutsHeaderContent",
                                            "key": "shortcuts-header-content",
                                            "style": {
                                                "display": "flex",
                                                "width": "100vw",
                                                "flexDirection": "column"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "ShortcutsTitle",
                                                    "key": "shortcuts-title",
                                                    "style": {
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "fontSize": "18px",
                                                    "fontWeight": "600",
                                                    "letterSpacing": "tight"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "ShortcutsTitleText",
                                                        "key": "shortcuts-title-text",
                                                        "children": [
                                                            {
                                                            "type": "static",
                                                            "content": "Shortcuts"
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "ForwardedIconComponent",
                                                        "name": "ShortcutsIcon",
                                                        "key": "shortcuts-icon",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/common/genericIconComponent"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "Keyboard"
                                                            }
                                                        ],
                                                        "style": {
                                                            "marginLeft": "8px",
                                                            "height": "20px",
                                                            "width": "20px",
                                                            "color": "#3b82f6"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "text",
                                                    "name": "ShortcutsDescription",
                                                    "key": "shortcuts-description",
                                                    "style": {
                                                    "fontSize": "14px",
                                                    "color": "#6b7280"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "Manage Shortcuts for quick access to frequently used actions."
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "ShortcutsHeaderActions",
                                            "key": "shortcuts-header-actions",
                                            "style": {
                                                "display": "flex",
                                                "width": "100vw",
                                                "alignItems": "flex-end",
                                                "justifyContent": "flex-end"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "ShortcutsActionsContainer",
                                                    "key": "shortcuts-actions-container",
                                                    "style": {
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "justifyContent": "center"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "conditional",
                                                        "content": {
                                                        "node": {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "EditShortcutButton",
                                                            "name": "EditShortcutModal",
                                                            "key": "edit-shortcut-modal",
                                                            "dependency": {
                                                                "type": "local",
                                                                "path": "./EditShortcutButton"
                                                            }
                                                            }
                                                        },
                                                        "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "editModalOpen"
                                                            }
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "Button",
                                                        "name": "RestoreShortcutsButton",
                                                        "key": "restore-shortcuts-button",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/button"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "primary"
                                                            }
                                                        ],
                                                        "style": {
                                                            "display": "flex",
                                                            "gap": "8px"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "ForwardedIconComponent",
                                                                "name": "RestoreIcon",
                                                                "key": "restore-icon",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/common/genericIconComponent"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "RotateCcw"
                                                                }
                                                                ],
                                                                "style": {
                                                                "width": "16px"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "RestoreButtonText",
                                                                "key": "restore-button-text",
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Restore"
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    },
                                    {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "ShortcutsTableGrid",
                                        "key": "shortcuts-table-grid",
                                        "style": {
                                        "display": "grid",
                                        "gap": "24px",
                                        "paddingBottom": "32px"
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "ShortcutsTableContainer",
                                            "key": "shortcuts-table-container",
                                            "children": [
                                                {
                                                "type": "conditional",
                                                "content": {
                                                    "node": {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "TableComponent",
                                                        "name": "ShortcutsTable",
                                                        "key": "shortcuts-table",
                                                        "dependency": {
                                                        "type": "local",
                                                        "path": "@/components/core/parameterRenderComponent/components/tableComponent"
                                                        },
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "content": true
                                                        },
                                                        {
                                                            "type": "static",
                                                            "content": "autoHeight"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "content": false
                                                        }
                                                        ]
                                                    }
                                                    },
                                                    "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "state",
                                                        "id": "hasShortcutsData"
                                                    }
                                                    }
                                                }
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    }
                                ]
                                }
                            }
                            }
                        }
                        }
				},
				{
					"id": "api_keys_settings",
					"type": "interface",
					"name": "ApiKeysSettings",
					"description": "API key management interface with creation, deletion, usage tracking, and security controls",
					"component_path": "src/frontend/src/components/ApiKeysSettings",
					"uidl_definition_physical": {
                        "name": "ApiKeysSettings",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "ApiKeysSettingsRoot",
                            "key": "api-keys-settings-root",
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "Form",
                                    "name": "ApiKeySettingsForm",
                                    "key": "api-key-settings-form",
                                    "dependency": {
                                    "type": "external",
                                    "path": "@radix-ui/react-form"
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "Card",
                                        "name": "ApiKeySettingsCard",
                                        "key": "api-key-settings-card",
                                        "dependency": {
                                            "type": "local",
                                            "path": "@/components/ui/card"
                                        },
                                        "attrs": [
                                            {
                                            "type": "static",
                                            "content": "dashboard-04-chunk-2"
                                            },
                                            {
                                            "type": "static",
                                            "content": "api"
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "CardHeader",
                                                "name": "ApiKeySettingsHeader",
                                                "key": "api-key-settings-header",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "CardTitle",
                                                    "name": "StoreApiKeyTitle",
                                                    "key": "store-api-key-title",
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Store API Key"
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "CardDescription",
                                                    "name": "ApiKeySettingsDescription",
                                                    "key": "api-key-settings-description",
                                                    "children": [
                                                        {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "state",
                                                            "id": "apiKeyDescription"
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "CardContent",
                                                "name": "ApiKeySettingsContent",
                                                "key": "api-key-settings-content",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "ApiKeyInputContainer",
                                                    "key": "api-key-input-container",
                                                    "style": {
                                                        "display": "flex",
                                                        "width": "100vw",
                                                        "flexDirection": "column",
                                                        "gap": "12px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "ApiKeyFieldContainer",
                                                            "key": "api-key-field-container",
                                                            "style": {
                                                            "display": "flex",
                                                            "width": "100vw",
                                                            "gap": "16px"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "FormField",
                                                                "name": "ApiKeyFormField",
                                                                "key": "api-key-form-field",
                                                                "dependency": {
                                                                    "type": "external",
                                                                    "path": "@radix-ui/react-form"
                                                                },
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "apikey"
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "width": "100vw"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "InputComponent",
                                                                        "name": "ApiKeyInput",
                                                                        "key": "api-key-input",
                                                                        "dependency": {
                                                                        "type": "local",
                                                                        "path": "@/components/core/parameterRenderComponent/components/inputComponent"
                                                                        },
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "apikey"
                                                                        },
                                                                        {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "state",
                                                                            "id": "apikey"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": true
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": true
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Insert your API Key"
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "width": "100vw"
                                                                        }
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "FormMessage",
                                                                        "name": "ApiKeyValidationMessage",
                                                                        "key": "api-key-validation-message",
                                                                        "dependency": {
                                                                        "type": "external",
                                                                        "path": "@radix-ui/react-form"
                                                                        },
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "valueMissing"
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "color": "#ef4444"
                                                                        },
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Please enter your API Key"
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "ApiKeyHelpText",
                                                            "key": "api-key-help-text",
                                                            "style": {
                                                            "paddingRight": "4px",
                                                            "fontSize": "12px",
                                                            "color": "#6b7280"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "CreateApiKeyText",
                                                                "key": "create-api-key-text",
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "state",
                                                                        "id": "createApiKeyText"
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "SpacerText",
                                                                "key": "spacer-text",
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": " "
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "link",
                                                                "name": "LangflowStoreLink",
                                                                "key": "langflow-store-link",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "https://langflow.store/"
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": "_blank"
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": "noopener"
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "color": "#6366f1",
                                                                    "textDecoration": "underline"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "langflow.store"
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "CardFooter",
                                                "name": "ApiKeySettingsFooter",
                                                "key": "api-key-settings-footer",
                                                "style": {
                                                "borderTop": "1px solid #e5e7eb",
                                                "paddingLeft": "24px",
                                                "paddingRight": "24px",
                                                "paddingTop": "16px",
                                                "paddingBottom": "16px"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "FormSubmit",
                                                    "name": "ApiKeySubmitWrapper",
                                                    "key": "api-key-submit-wrapper",
                                                    "dependency": {
                                                        "type": "external",
                                                        "path": "@radix-ui/react-form"
                                                    },
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": true
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Button",
                                                            "name": "SaveApiKeyButton",
                                                            "key": "save-api-key-button",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/button"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "loadingApiKey"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "submit"
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "api-key-save-button-store"
                                                            }
                                                            ],
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Save"
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "apikey": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "loadingApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "validApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "apiKeyDescription": {
                            "type": "string",
                            "defaultValue": "Enter your Langflow Store API key to access premium features and store components."
                            },
                            "createApiKeyText": {
                            "type": "string",
                            "defaultValue": "Don't have an API key? Create one at"
                            },
                            "invalidApiKeyMessage": {
                            "type": "string",
                            "defaultValue": "Invalid API key. "
                            },
                            "noApiKeyMessage": {
                            "type": "string",
                            "defaultValue": "No API key found. "
                            },
                            "insertApiKeyMessage": {
                            "type": "string",
                            "defaultValue": "Please insert your API key to continue."
                            }
                        },
                        "propDefinitions": {
                            "apikey": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "handleInput": {
                            "type": "func",
                            "defaultValue": "() => {}"
                            },
                            "handleSaveKey": {
                            "type": "func",
                            "defaultValue": "() => {}"
                            },
                            "loadingApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "validApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasApiKey": {
                            "type": "boolean",
                            "defaultValue": false
                            }
                        },
                        "styleSetDefinitions": {
                            "cardContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "borderRadius": "8px",
                                "border": "1px solid #e5e7eb",
                                "backgroundColor": "#ffffff",
                                "boxShadow": "0 1px 3px 0 rgba(0, 0, 0, 0.1)"
                            }
                            },
                            "inputField": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "100%",
                                "padding": "8px 12px",
                                "border": "1px solid #d1d5db",
                                "borderRadius": "6px",
                                "fontSize": "14px"
                            }
                            },
                            "helpText": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "fontSize": "12px",
                                "color": "#6b7280",
                                "marginTop": "4px"
                            }
                            },
                            "submitButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "#3b82f6",
                                "color": "#ffffff",
                                "padding": "8px 16px",
                                "borderRadius": "6px",
                                "border": "none",
                                "fontSize": "14px",
                                "fontWeight": "500",
                                "cursor": "pointer"
                            }
                            },
                            "errorText": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "color": "#ef4444",
                                "fontSize": "12px",
                                "marginTop": "4px"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280",
                            "errorColor": "#ef4444",
                            "linkColor": "#6366f1",
                            "cardBackground": "#ffffff",
                            "inputBorder": "#d1d5db"
                            }
                        }
                        }
				},
				{
					"id": "global_variables_settings",
					"type": "interface",
					"name": "GlobalVariablesSettings",
					"description": "Global variable management with encryption, scoping, and environment-specific configurations",
					"component_path": "src/frontend/src/components/GlobalVariablesSettings",
					"uidl_definition_physical": {
                        "name": "GlobalVariablesSettings",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "GlobalVariablesSettingsRoot",
                            "key": "global-variables-settings-root",
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "BaseModal",
                                    "name": "GlobalVariableModal",
                                    "key": "global-variable-modal",
                                    "dependency": {
                                    "type": "local",
                                    "path": "@/modals/baseModal"
                                    },
                                    "attrs": [
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "open"
                                        }
                                    },
                                    {
                                        "type": "static",
                                        "content": "x-small"
                                    },
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "disabled"
                                        }
                                    }
                                    ],
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "BaseModalHeader",
                                        "name": "GlobalVariableModalHeader",
                                        "key": "global-variable-modal-header",
                                        "attrs": [
                                            {
                                            "type": "static",
                                            "content": "This variable will be available for use across your flows."
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "ForwardedIconComponent",
                                                "name": "GlobalVariableIcon",
                                                "key": "global-variable-icon",
                                                "dependency": {
                                                "type": "local",
                                                "path": "@/components/common/genericIconComponent"
                                                },
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "content": "Globe"
                                                }
                                                ],
                                                "style": {
                                                "height": "24px",
                                                "width": "24px",
                                                "paddingRight": "4px",
                                                "color": "#3b82f6"
                                                }
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "text",
                                                "name": "ModalTitle",
                                                "key": "modal-title",
                                                "children": [
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "state",
                                                    "id": "modalTitle"
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "BaseModalTrigger",
                                        "name": "GlobalVariableModalTrigger",
                                        "key": "global-variable-modal-trigger",
                                        "attrs": [
                                            {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "state",
                                                "id": "disabled"
                                            }
                                            },
                                            {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "prop",
                                                "id": "asChild"
                                            }
                                            }
                                        ],
                                        "children": [
                                            {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "prop",
                                                "id": "children"
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "BaseModalContent",
                                        "name": "GlobalVariableModalContent",
                                        "key": "global-variable-modal-content",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "GlobalVariableFormContainer",
                                                "key": "global-variable-form-container",
                                                "style": {
                                                "display": "flex",
                                                "height": "100vh",
                                                "width": "100vw",
                                                "flexDirection": "column",
                                                "gap": "16px"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "VariableTypeSection",
                                                    "key": "variable-type-section",
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "gap": "8px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Label",
                                                            "name": "TypeLabel",
                                                            "key": "type-label",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/label"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Type*"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Tabs",
                                                            "name": "VariableTypeTabs",
                                                            "key": "variable-type-tabs",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/tabs-button"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "type"
                                                                }
                                                            }
                                                            ],
                                                            "style": {
                                                            "width": "100vw"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "TabsList",
                                                                "name": "VariableTypeTabsList",
                                                                "key": "variable-type-tabs-list",
                                                                "style": {
                                                                    "display": "grid",
                                                                    "width": "100vw",
                                                                    "gridTemplateColumns": "1fr 1fr"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "TabsTrigger",
                                                                        "name": "CredentialTab",
                                                                        "key": "credential-tab",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "state",
                                                                            "id": "isEditingExistingType"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": "credential-tab"
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Credential"
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Credential"
                                                                        }
                                                                        ]
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "TabsTrigger",
                                                                        "name": "GenericTab",
                                                                        "key": "generic-tab",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "state",
                                                                            "id": "isEditingExistingType"
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": "generic-tab"
                                                                        },
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Generic"
                                                                        }
                                                                        ],
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Generic"
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "VariableNameSection",
                                                    "key": "variable-name-section",
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "gap": "8px"
                                                    },
                                                    "attrs": [
                                                        {
                                                        "type": "static",
                                                        "content": "global-variable-modal-inputs"
                                                        }
                                                    ],
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Label",
                                                            "name": "NameLabel",
                                                            "key": "name-label",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/label"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Name*"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Input",
                                                            "name": "VariableNameInput",
                                                            "key": "variable-name-input",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/input"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "key"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "Enter a name for the variable..."
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "VariableValueSection",
                                                    "key": "variable-value-section",
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "gap": "8px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Label",
                                                            "name": "ValueLabel",
                                                            "key": "value-label",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/label"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Value*"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "node": {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "InputComponent",
                                                                "name": "CredentialValueInput",
                                                                "key": "credential-value-input",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/core/parameterRenderComponent/components/inputComponent"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": true
                                                                },
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "value"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": "Enter a value for the variable..."
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": true
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "isCredentialType"
                                                            }
                                                            }
                                                        }
                                                        },
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "node": {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "Input",
                                                                "name": "GenericValueInput",
                                                                "key": "generic-value-input",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/input"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "value"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": "Enter a value for the variable..."
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "isGenericType"
                                                            }
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "ApplyToFieldsSection",
                                                    "key": "apply-to-fields-section",
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "gap": "8px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Label",
                                                            "name": "ApplyToFieldsLabel",
                                                            "key": "apply-to-fields-label",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/label"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Apply to fields"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "InputComponent",
                                                            "name": "ApplyToFieldsInput",
                                                            "key": "apply-to-fields-input",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/core/parameterRenderComponent/components/inputComponent"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "fields"
                                                                }
                                                            },
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "availableFields"
                                                                }
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": false
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "Choose a field for the variable..."
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "apply-to-fields"
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "29rem"
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "Fields"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "FieldsHelpText",
                                                            "key": "fields-help-text",
                                                            "style": {
                                                            "fontSize": "12px",
                                                            "color": "#6b7280"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "FieldsHelpMessage",
                                                                "key": "fields-help-message",
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Selected fields will auto-apply the variable as a default value."
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "BaseModalFooter",
                                        "name": "GlobalVariableModalFooter",
                                        "key": "global-variable-modal-footer",
                                        "attrs": [
                                            {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "state",
                                                "id": "submitButtonConfig"
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "key": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "value": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "type": {
                            "type": "string",
                            "defaultValue": "Credential"
                            },
                            "fields": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "open": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "disabled": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "availableFields": {
                            "type": "array",
                            "defaultValue": ["System", "System Message", "System Prompt"]
                            },
                            "isEditingExistingType": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isCredentialType": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "isGenericType": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "modalTitle": {
                            "type": "string",
                            "defaultValue": "Create Variable"
                            },
                            "submitButtonConfig": {
                            "type": "object",
                            "defaultValue": {
                                "label": "Save Variable",
                                "dataTestId": "save-variable-btn"
                            }
                            },
                            "initialData": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "referenceField": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "globalVariables": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "componentFields": {
                            "type": "array",
                            "defaultValue": []
                            }
                        },
                        "propDefinitions": {
                            "children": {
                            "type": "node",
                            "defaultValue": null
                            },
                            "asChild": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "initialData": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "referenceField": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "open": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "setOpen": {
                            "type": "func",
                            "defaultValue": "() => {}"
                            },
                            "disabled": {
                            "type": "boolean",
                            "defaultValue": false
                            }
                        },
                        "styleSetDefinitions": {
                            "modalContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "height": "100%",
                                "width": "100%",
                                "flexDirection": "column",
                                "gap": "16px"
                            }
                            },
                            "fieldSection": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "gap": "8px"
                            }
                            },
                            "tabsContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "grid",
                                "width": "100%",
                                "gridTemplateColumns": "1fr 1fr"
                            }
                            },
                            "helpText": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "fontSize": "12px",
                                "color": "#6b7280",
                                "marginTop": "4px"
                            }
                            },
                            "iconStyle": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "height": "24px",
                                "width": "24px",
                                "paddingRight": "4px",
                                "color": "#3b82f6"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280",
                            "modalBackground": "#ffffff",
                            "inputBorder": "#d1d5db",
                            "tabActiveColor": "#3b82f6",
                            "successColor": "#10b981",
                            "errorColor": "#ef4444"
                            }
                        }
                        }
				},
				{
					"id": "file_management_page",
					"type": "interface",
					"name": "FileManagementPage",
					"description": "File management interface with upload, download, search, and organization capabilities",
					"route": "/files",
					"component_path": "src/frontend/src/pages/FileManagementPage",
					"uidl_definition_physical": {
                        "name": "FileManagementPage",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "FileManagementPageRoot",
                            "key": "file-management-page-root",
                            "children": [
                                {
                                "type": "element",
                                "content": {
                                    "elementType": "PageLayout",
                                    "name": "FileManagementPageLayout",
                                    "key": "file-management-page-layout",
                                    "dependency": {
                                    "type": "local",
                                    "path": "@/components/common/pageLayout"
                                    },
                                    "attrs": [
                                    {
                                        "type": "static",
                                        "content": "/settings"
                                    },
                                    {
                                        "type": "static",
                                        "content": "File Management"
                                    },
                                    {
                                        "type": "static",
                                        "content": "Upload, organize, and manage your files for use across your flows."
                                    }
                                    ],
                                    "children": [
                                    {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "FileManagementContent",
                                        "key": "file-management-content",
                                        "style": {
                                            "display": "flex",
                                            "height": "100vh",
                                            "width": "100vw",
                                            "flexDirection": "column",
                                            "gap": "24px"
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "FileManagementHeader",
                                                "key": "file-management-header",
                                                "style": {
                                                "display": "flex",
                                                "justifyContent": "space-between",
                                                "alignItems": "flex-start",
                                                "gap": "16px",
                                                "paddingBottom": "16px",
                                                "borderBottom": "1px solid #e5e7eb"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "FileManagementHeaderInfo",
                                                    "key": "file-management-header-info",
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "column",
                                                        "gap": "4px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "FileCountInfo",
                                                            "key": "file-count-info",
                                                            "style": {
                                                            "display": "flex",
                                                            "alignItems": "center",
                                                            "gap": "8px"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "ForwardedIconComponent",
                                                                "name": "FilesIcon",
                                                                "key": "files-icon",
                                                                "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/common/genericIconComponent"
                                                                },
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Files"
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "height": "20px",
                                                                    "width": "20px",
                                                                    "color": "#3b82f6"
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "FileCountText",
                                                                "key": "file-count-text",
                                                                "style": {
                                                                    "fontSize": "14px",
                                                                    "color": "#6b7280"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "state",
                                                                        "id": "fileCountMessage"
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "FileManagementActions",
                                                    "key": "file-management-actions",
                                                    "style": {
                                                        "display": "flex",
                                                        "alignItems": "center",
                                                        "gap": "12px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "ViewToggle",
                                                            "key": "view-toggle",
                                                            "style": {
                                                            "display": "flex",
                                                            "backgroundColor": "#f3f4f6",
                                                            "borderRadius": "8px",
                                                            "padding": "2px"
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "Button",
                                                                "name": "GridViewButton",
                                                                "key": "grid-view-button",
                                                                "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/ui/button"
                                                                },
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": true
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": "icon"
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "margin": "2px",
                                                                    "borderRadius": "6px"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "GridIcon",
                                                                        "key": "grid-icon",
                                                                        "dependency": {
                                                                        "type": "local",
                                                                        "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "LayoutGrid"
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "height": "16px",
                                                                        "width": "16px"
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "Button",
                                                                "name": "ListViewButton",
                                                                "key": "list-view-button",
                                                                "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/ui/button"
                                                                },
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": true
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": "icon"
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "margin": "2px",
                                                                    "borderRadius": "6px"
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "ListIcon",
                                                                        "key": "list-icon",
                                                                        "dependency": {
                                                                        "type": "local",
                                                                        "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "List"
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "height": "16px",
                                                                        "width": "16px"
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "FileUploadContainer",
                                                            "key": "file-upload-container",
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "input",
                                                                "name": "FileUploadInput",
                                                                "key": "file-upload-input",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "file"
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": true
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "display": "none"
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "Button",
                                                                "name": "UploadFilesButton",
                                                                "key": "upload-files-button",
                                                                "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/ui/button"
                                                                },
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "primary"
                                                                    }
                                                                ],
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "UploadIcon",
                                                                        "key": "upload-icon",
                                                                        "dependency": {
                                                                        "type": "local",
                                                                        "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Upload"
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "height": "16px",
                                                                        "width": "16px",
                                                                        "marginRight": "8px"
                                                                        }
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "text",
                                                                        "name": "UploadButtonText",
                                                                        "key": "upload-button-text",
                                                                        "children": [
                                                                        {
                                                                            "type": "static",
                                                                            "content": "Upload Files"
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "FileSearchAndFilter",
                                                "key": "file-search-and-filter",
                                                "style": {
                                                "display": "flex",
                                                "alignItems": "center",
                                                "gap": "16px",
                                                "marginBottom": "16px"
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "SearchContainer",
                                                    "key": "search-container",
                                                    "style": {
                                                        "position": "relative",
                                                        "flex": "1",
                                                        "maxWidth": "400px"
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "Input",
                                                            "name": "FileSearchInput",
                                                            "key": "file-search-input",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/input"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": "search"
                                                            },
                                                            {
                                                                "type": "static",
                                                                "content": "Search files..."
                                                            },
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "searchQuery"
                                                                }
                                                            }
                                                            ],
                                                            "style": {
                                                            "paddingLeft": "40px"
                                                            }
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "ForwardedIconComponent",
                                                            "name": "SearchIcon",
                                                            "key": "search-icon",
                                                            "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/common/genericIconComponent"
                                                            },
                                                            "attrs": [
                                                            {
                                                                "type": "static",
                                                                "content": "Search"
                                                            }
                                                            ],
                                                            "style": {
                                                            "position": "absolute",
                                                            "left": "12px",
                                                            "top": "50%",
                                                            "transform": "translateY(-50%)",
                                                            "height": "16px",
                                                            "width": "16px",
                                                            "color": "#6b7280"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "BulkActionsContainer",
                                                        "key": "bulk-actions-container",
                                                        "style": {
                                                            "display": "flex",
                                                            "alignItems": "center",
                                                            "gap": "8px",
                                                            "padding": "8px 12px",
                                                            "backgroundColor": "#f3f4f6",
                                                            "borderRadius": "8px"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "SelectedFilesCount",
                                                                "key": "selected-files-count",
                                                                "style": {
                                                                "fontSize": "14px",
                                                                "fontWeight": "500"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "selectedFilesCountText"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "Button",
                                                                "name": "BulkDownloadButton",
                                                                "key": "bulk-download-button",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/button"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "outline"
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": "sm"
                                                                }
                                                                ],
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "ForwardedIconComponent",
                                                                    "name": "DownloadIcon",
                                                                    "key": "download-icon",
                                                                    "dependency": {
                                                                        "type": "local",
                                                                        "path": "@/components/common/genericIconComponent"
                                                                    },
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "content": "Download"
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "height": "14px",
                                                                        "width": "14px"
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "Button",
                                                                "name": "BulkDeleteButton",
                                                                "key": "bulk-delete-button",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/button"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "destructive"
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "content": "sm"
                                                                }
                                                                ],
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "ForwardedIconComponent",
                                                                    "name": "DeleteIcon",
                                                                    "key": "delete-icon",
                                                                    "dependency": {
                                                                        "type": "local",
                                                                        "path": "@/components/common/genericIconComponent"
                                                                    },
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "content": "Trash2"
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "height": "14px",
                                                                        "width": "14px"
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "hasSelectedFiles"
                                                        }
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "FilesDisplayArea",
                                                "key": "files-display-area",
                                                "style": {
                                                "flex": "1",
                                                "overflow": "auto"
                                                },
                                                "children": [
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "EmptyFilesState",
                                                        "key": "empty-files-state",
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "alignItems": "center",
                                                            "justifyContent": "center",
                                                            "height": "400px",
                                                            "textAlign": "center",
                                                            "gap": "16px"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "ForwardedIconComponent",
                                                                "name": "EmptyFilesIcon",
                                                                "key": "empty-files-icon",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/common/genericIconComponent"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "FileX"
                                                                }
                                                                ],
                                                                "style": {
                                                                "height": "64px",
                                                                "width": "64px",
                                                                "color": "#d1d5db"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "EmptyFilesMessage",
                                                                "key": "empty-files-message",
                                                                "style": {
                                                                "fontSize": "18px",
                                                                "fontWeight": "500",
                                                                "color": "#6b7280"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "No files uploaded yet"
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "EmptyFilesSubtext",
                                                                "key": "empty-files-subtext",
                                                                "style": {
                                                                "fontSize": "14px",
                                                                "color": "#9ca3af"
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Upload your first file to get started"
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "isEmpty"
                                                        }
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "FilesGridView",
                                                        "key": "files-grid-view",
                                                        "style": {
                                                            "display": "grid",
                                                            "gridTemplateColumns": "repeat(auto-fill, minmax(240px, 1fr))",
                                                            "gap": "16px",
                                                            "padding": "16px 0"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "repeat",
                                                            "content": {
                                                                "node": {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "CustomFileCard",
                                                                    "name": "FileGridCard",
                                                                    "key": "file-grid-card",
                                                                    "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/customization/components/custom-file-card"
                                                                    },
                                                                    "attrs": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "local",
                                                                        "id": "file.name"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "local",
                                                                        "id": "file.path"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "local",
                                                                        "id": "file.type"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "static",
                                                                        "content": true
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                "dataSource": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "filteredFiles"
                                                                }
                                                                },
                                                                "meta": {
                                                                "useIndex": true,
                                                                "iteratorName": "file",
                                                                "indexName": "index"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "isGridView"
                                                        }
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "FilesListView",
                                                        "key": "files-list-view",
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "gap": "8px",
                                                            "padding": "16px 0"
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "repeat",
                                                            "content": {
                                                                "node": {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "FileListItem",
                                                                    "key": "file-list-item",
                                                                    "style": {
                                                                    "display": "flex",
                                                                    "alignItems": "center",
                                                                    "padding": "12px 16px",
                                                                    "backgroundColor": "#ffffff",
                                                                    "border": "1px solid #e5e7eb",
                                                                    "borderRadius": "8px",
                                                                    "gap": "12px"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "input",
                                                                        "name": "FileSelectCheckbox",
                                                                        "key": "file-select-checkbox",
                                                                        "attrs": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "checkbox"
                                                                            },
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "file.selected"
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "ForwardedIconComponent",
                                                                        "name": "FileTypeIcon",
                                                                        "key": "file-type-icon",
                                                                        "dependency": {
                                                                            "type": "local",
                                                                            "path": "@/components/common/genericIconComponent"
                                                                        },
                                                                        "attrs": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "fileTypeIcon"
                                                                            }
                                                                            }
                                                                        ],
                                                                        "style": {
                                                                            "height": "24px",
                                                                            "width": "24px",
                                                                            "color": "#6b7280"
                                                                        }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "FileInfo",
                                                                        "key": "file-info",
                                                                        "style": {
                                                                            "flex": "1",
                                                                            "display": "flex",
                                                                            "flexDirection": "column",
                                                                            "gap": "2px"
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "text",
                                                                                "name": "FileName",
                                                                                "key": "file-name",
                                                                                "style": {
                                                                                "fontWeight": "500",
                                                                                "fontSize": "14px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "file.name"
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "text",
                                                                                "name": "FileMetadata",
                                                                                "key": "file-metadata",
                                                                                "style": {
                                                                                "fontSize": "12px",
                                                                                "color": "#6b7280"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "file.metadata"
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "FileActions",
                                                                        "key": "file-actions",
                                                                        "style": {
                                                                            "display": "flex",
                                                                            "alignItems": "center",
                                                                            "gap": "8px"
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "Button",
                                                                                "name": "DownloadFileButton",
                                                                                "key": "download-file-button",
                                                                                "dependency": {
                                                                                "type": "local",
                                                                                "path": "@/components/ui/button"
                                                                                },
                                                                                "attrs": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "ghost"
                                                                                },
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "icon"
                                                                                }
                                                                                ],
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "ForwardedIconComponent",
                                                                                    "name": "DownloadFileIcon",
                                                                                    "key": "download-file-icon",
                                                                                    "dependency": {
                                                                                        "type": "local",
                                                                                        "path": "@/components/common/genericIconComponent"
                                                                                    },
                                                                                    "attrs": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "Download"
                                                                                        }
                                                                                    ],
                                                                                    "style": {
                                                                                        "height": "16px",
                                                                                        "width": "16px"
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "Button",
                                                                                "name": "RenameFileButton",
                                                                                "key": "rename-file-button",
                                                                                "dependency": {
                                                                                "type": "local",
                                                                                "path": "@/components/ui/button"
                                                                                },
                                                                                "attrs": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "ghost"
                                                                                },
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "icon"
                                                                                }
                                                                                ],
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "ForwardedIconComponent",
                                                                                    "name": "RenameFileIcon",
                                                                                    "key": "rename-file-icon",
                                                                                    "dependency": {
                                                                                        "type": "local",
                                                                                        "path": "@/components/common/genericIconComponent"
                                                                                    },
                                                                                    "attrs": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "Edit"
                                                                                        }
                                                                                    ],
                                                                                    "style": {
                                                                                        "height": "16px",
                                                                                        "width": "16px"
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "Button",
                                                                                "name": "DeleteFileButton",
                                                                                "key": "delete-file-button",
                                                                                "dependency": {
                                                                                "type": "local",
                                                                                "path": "@/components/ui/button"
                                                                                },
                                                                                "attrs": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "ghost"
                                                                                },
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "icon"
                                                                                }
                                                                                ],
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "ForwardedIconComponent",
                                                                                    "name": "DeleteFileIcon",
                                                                                    "key": "delete-file-icon",
                                                                                    "dependency": {
                                                                                        "type": "local",
                                                                                        "path": "@/components/common/genericIconComponent"
                                                                                    },
                                                                                    "attrs": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "Trash2"
                                                                                        }
                                                                                    ],
                                                                                    "style": {
                                                                                        "height": "16px",
                                                                                        "width": "16px"
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                "dataSource": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "filteredFiles"
                                                                }
                                                                },
                                                                "meta": {
                                                                "useIndex": true,
                                                                "iteratorName": "file",
                                                                "indexName": "index"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "isListView"
                                                        }
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "files": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "filteredFiles": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "selectedFiles": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "searchQuery": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "viewMode": {
                            "type": "string",
                            "defaultValue": "grid"
                            },
                            "isGridView": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "isListView": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isEmpty": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "hasSelectedFiles": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isUploading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "uploadProgress": {
                            "type": "number",
                            "defaultValue": 0
                            },
                            "fileCountMessage": {
                            "type": "string",
                            "defaultValue": "0 files"
                            },
                            "selectedFilesCountText": {
                            "type": "string",
                            "defaultValue": "0 selected"
                            },
                            "fileTypeIcon": {
                            "type": "string",
                            "defaultValue": "File"
                            }
                        },
                        "propDefinitions": {},
                        "styleSetDefinitions": {
                            "pageContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "height": "100vh",
                                "width": "100vw",
                                "flexDirection": "column",
                                "gap": "24px"
                            }
                            },
                            "headerSection": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "justifyContent": "space-between",
                                "alignItems": "flex-start",
                                "gap": "16px",
                                "paddingBottom": "16px",
                                "borderBottom": "1px solid #e5e7eb"
                            }
                            },
                            "gridLayout": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "grid",
                                "gridTemplateColumns": "repeat(auto-fill, minmax(240px, 1fr))",
                                "gap": "16px",
                                "padding": "16px 0"
                            }
                            },
                            "listLayout": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "gap": "8px",
                                "padding": "16px 0"
                            }
                            },
                            "emptyState": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "alignItems": "center",
                                "justifyContent": "center",
                                "height": "400px",
                                "textAlign": "center",
                                "gap": "16px"
                            }
                            },
                            "fileListItem": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "alignItems": "center",
                                "padding": "12px 16px",
                                "backgroundColor": "#ffffff",
                                "border": "1px solid #e5e7eb",
                                "borderRadius": "8px",
                                "gap": "12px"
                            }
                            },
                            "actionButtons": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "alignItems": "center",
                                "gap": "8px"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280",
                            "destructiveColor": "#ef4444",
                            "successColor": "#10b981",
                            "gridBackgroundColor": "#f9fafb",
                            "cardBackgroundColor": "#ffffff",
                            "selectedBackgroundColor": "#f3f4f6"
                            }
                        }
                        }
				},
				{
					"id": "admin_page",
					"type": "interface",
					"name": "AdminPage",
					"description": "System administration interface with user management, system monitoring, and configuration",
					"route": "/admin",
					"component_path": "src/frontend/src/pages/AdminPage",
					"uidl_definition_physical": {
                        "name": "AdminPage",
                        "node": {
                            "type": "element",
                            "content": {
                            "elementType": "container",
                            "name": "AdminPageRoot",
                            "key": "admin-page-root",
                            "children": [
                                {
                                "type": "conditional",
                                "content": {
                                    "node": {
                                    "type": "element",
                                    "content": {
                                        "elementType": "container",
                                        "name": "AdminPagePanel",
                                        "key": "admin-page-panel",
                                        "style": {
                                        "display": "flex",
                                        "height": "100vh",
                                        "flexDirection": "column",
                                        "paddingBottom": "32px"
                                        },
                                        "attrs": [
                                        {
                                            "type": "static",
                                            "content": "admin-page-panel"
                                        }
                                        ],
                                        "children": [
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "AdminPageNavigation",
                                            "key": "admin-page-navigation",
                                            "style": {
                                                "display": "flex",
                                                "alignItems": "center",
                                                "gap": "8px",
                                                "paddingBottom": "16px"
                                            },
                                            "attrs": [
                                                {
                                                "type": "static",
                                                "content": "main-page-nav-arrangement"
                                                }
                                            ],
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "AdminPageTitle",
                                                    "key": "admin-page-title",
                                                    "style": {
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "gap": "8px",
                                                    "fontSize": "24px",
                                                    "fontWeight": "600"
                                                    },
                                                    "attrs": [
                                                    {
                                                        "type": "static",
                                                        "content": "main-page-nav-title"
                                                    }
                                                    ],
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "IconComponent",
                                                        "name": "ShieldIcon",
                                                        "key": "shield-icon",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/common/genericIconComponent"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "Shield"
                                                            }
                                                        ],
                                                        "style": {
                                                            "width": "24px"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "AdminTitleText",
                                                        "key": "admin-title-text",
                                                        "children": [
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "adminHeaderTitle"
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "text",
                                            "name": "AdminPageDescription",
                                            "key": "admin-page-description",
                                            "style": {
                                                "marginBottom": "16px",
                                                "color": "#6b7280",
                                                "fontSize": "14px"
                                            },
                                            "attrs": [
                                                {
                                                "type": "static",
                                                "content": "admin-page-description-text"
                                                }
                                            ],
                                            "children": [
                                                {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "adminHeaderDescription"
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        {
                                            "type": "element",
                                            "content": {
                                            "elementType": "container",
                                            "name": "AdminControlsBar",
                                            "key": "admin-controls-bar",
                                            "style": {
                                                "display": "flex",
                                                "width": "100vw",
                                                "justifyContent": "space-between",
                                                "paddingLeft": "16px",
                                                "paddingRight": "16px",
                                                "marginBottom": "16px"
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "UserSearchContainer",
                                                    "key": "user-search-container",
                                                    "style": {
                                                    "display": "flex",
                                                    "width": "384px",
                                                    "alignItems": "center",
                                                    "gap": "16px"
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "Input",
                                                        "name": "UserSearchInput",
                                                        "key": "user-search-input",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/components/ui/input"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "Search Username"
                                                            },
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "inputValue"
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    },
                                                    {
                                                        "type": "conditional",
                                                        "content": {
                                                        "node": {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "ClearSearchButton",
                                                            "key": "clear-search-button",
                                                            "style": {
                                                                "cursor": "pointer"
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "IconComponent",
                                                                    "name": "ClearIcon",
                                                                    "key": "clear-icon",
                                                                    "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/common/genericIconComponent"
                                                                    },
                                                                    "attrs": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "X"
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "width": "24px",
                                                                    "color": "#1f2937"
                                                                    }
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "hasSearchValue"
                                                            }
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "conditional",
                                                        "content": {
                                                        "node": {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "SearchIconContainer",
                                                            "key": "search-icon-container",
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "IconComponent",
                                                                    "name": "SearchIcon",
                                                                    "key": "search-icon",
                                                                    "dependency": {
                                                                    "type": "local",
                                                                    "path": "@/components/common/genericIconComponent"
                                                                    },
                                                                    "attrs": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "Search"
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "width": "24px",
                                                                    "color": "#1f2937"
                                                                    }
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "hasNoSearchValue"
                                                            }
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "AddUserContainer",
                                                    "key": "add-user-container",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "UserManagementModal",
                                                        "name": "AddUserModal",
                                                        "key": "add-user-modal",
                                                        "dependency": {
                                                            "type": "local",
                                                            "path": "@/modals/userManagementModal"
                                                        },
                                                        "attrs": [
                                                            {
                                                            "type": "static",
                                                            "content": "New User"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": "Add a new user"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": "Cancel"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": "Save"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": "UserPlus2"
                                                            },
                                                            {
                                                            "type": "static",
                                                            "content": true
                                                            }
                                                        ],
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "Button",
                                                                "name": "NewUserButton",
                                                                "key": "new-user-button",
                                                                "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/button"
                                                                },
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "primary"
                                                                }
                                                                ],
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "New User"
                                                                }
                                                                ]
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        },
                                        {
                                            "type": "conditional",
                                            "content": {
                                            "node": {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "LoadingContainer",
                                                "key": "loading-container",
                                                "style": {
                                                    "display": "flex",
                                                    "height": "100vh",
                                                    "width": "100vw",
                                                    "alignItems": "center",
                                                    "justifyContent": "center"
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "CustomLoader",
                                                        "name": "AdminPageLoader",
                                                        "key": "admin-page-loader",
                                                        "dependency": {
                                                        "type": "local",
                                                        "path": "@/customization/components/custom-loader"
                                                        },
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "content": 12
                                                        }
                                                        ]
                                                    }
                                                    }
                                                ]
                                                }
                                            },
                                            "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "state",
                                                "id": "isLoading"
                                                }
                                            }
                                            }
                                        },
                                        {
                                            "type": "conditional",
                                            "content": {
                                            "node": {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "EmptyUsersContainer",
                                                "key": "empty-users-container",
                                                "style": {
                                                    "margin": "16px",
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "justifyContent": "space-between",
                                                    "fontSize": "14px"
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "text",
                                                        "name": "NoUsersMessage",
                                                        "key": "no-users-message",
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "No users registered."
                                                        }
                                                        ]
                                                    }
                                                    }
                                                ]
                                                }
                                            },
                                            "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "state",
                                                "id": "hasNoUsers"
                                                }
                                            }
                                            }
                                        },
                                        {
                                            "type": "conditional",
                                            "content": {
                                            "node": {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "UsersTableContainer",
                                                "key": "users-table-container",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "TableWrapper",
                                                        "key": "table-wrapper",
                                                        "style": {
                                                        "margin": "16px",
                                                        "height": "fit-content",
                                                        "overflowX": "hidden",
                                                        "overflowY": "scroll",
                                                        "borderRadius": "6px",
                                                        "border": "2px solid #e5e7eb",
                                                        "backgroundColor": "#ffffff"
                                                        },
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "content": "custom-scroll"
                                                        }
                                                        ],
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "Table",
                                                            "name": "UsersTable",
                                                            "key": "users-table",
                                                            "dependency": {
                                                                "type": "local",
                                                                "path": "@/components/ui/table"
                                                            },
                                                            "style": {
                                                                "tableLayout": "fixed",
                                                                "outline": "1px"
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "TableHeader",
                                                                    "name": "UsersTableHeader",
                                                                    "key": "users-table-header",
                                                                    "style": {
                                                                    "tableLayout": "fixed",
                                                                    "backgroundColor": "#f9fafb",
                                                                    "outline": "1px"
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "TableRow",
                                                                        "name": "HeaderRow",
                                                                        "key": "header-row",
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "IdHeader",
                                                                                "key": "id-header",
                                                                                "style": {
                                                                                "height": "40px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "Id"
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "UsernameHeader",
                                                                                "key": "username-header",
                                                                                "style": {
                                                                                "height": "40px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "Username"
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "ActiveHeader",
                                                                                "key": "active-header",
                                                                                "style": {
                                                                                "height": "40px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "Active"
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "SuperuserHeader",
                                                                                "key": "superuser-header",
                                                                                "style": {
                                                                                "height": "40px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "Superuser"
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "CreatedAtHeader",
                                                                                "key": "created-at-header",
                                                                                "style": {
                                                                                "height": "40px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "Created At"
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "UpdatedAtHeader",
                                                                                "key": "updated-at-header",
                                                                                "style": {
                                                                                "height": "40px"
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "static",
                                                                                    "content": "Updated At"
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "TableHead",
                                                                                "name": "ActionsHeader",
                                                                                "key": "actions-header",
                                                                                "style": {
                                                                                "height": "40px",
                                                                                "width": "100px",
                                                                                "textAlign": "right"
                                                                                },
                                                                                "children": []
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "TableBody",
                                                                    "name": "UsersTableBody",
                                                                    "key": "users-table-body",
                                                                    "children": [
                                                                    {
                                                                        "type": "repeat",
                                                                        "content": {
                                                                        "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "TableRow",
                                                                            "name": "UserTableRow",
                                                                            "key": "user-table-row",
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "UserIdCell",
                                                                                    "key": "user-id-cell",
                                                                                    "style": {
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "overflow": "hidden",
                                                                                    "paddingY": "8px",
                                                                                    "fontWeight": "500"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "ShadTooltip",
                                                                                        "name": "UserIdTooltip",
                                                                                        "key": "user-id-tooltip",
                                                                                        "dependency": {
                                                                                            "type": "local",
                                                                                            "path": "@/components/common/shadTooltipComponent"
                                                                                        },
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "local",
                                                                                                "id": "user.id"
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "UserIdText",
                                                                                                "key": "user-id-text",
                                                                                                "style": {
                                                                                                "cursor": "default"
                                                                                                },
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "user.id"
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "UsernameCell",
                                                                                    "key": "username-cell",
                                                                                    "style": {
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "overflow": "hidden",
                                                                                    "paddingY": "8px"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "ShadTooltip",
                                                                                        "name": "UsernameTooltip",
                                                                                        "key": "username-tooltip",
                                                                                        "dependency": {
                                                                                            "type": "local",
                                                                                            "path": "@/components/common/shadTooltipComponent"
                                                                                        },
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "local",
                                                                                                "id": "user.username"
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "UsernameText",
                                                                                                "key": "username-text",
                                                                                                "style": {
                                                                                                "cursor": "default"
                                                                                                },
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "user.username"
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "ActiveStatusCell",
                                                                                    "key": "active-status-cell",
                                                                                    "style": {
                                                                                    "position": "relative",
                                                                                    "left": "4px",
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "overflow": "hidden",
                                                                                    "paddingY": "8px"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "ConfirmationModal",
                                                                                        "name": "ActiveStatusModal",
                                                                                        "key": "active-status-modal",
                                                                                        "dependency": {
                                                                                            "type": "local",
                                                                                            "path": "@/modals/confirmationModal"
                                                                                        },
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "x-small"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Edit"
                                                                                            },
                                                                                            {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "local",
                                                                                                "id": "user.username"
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Attention!"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Cancel"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Confirm"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "UserCog2"
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ConfirmationModalContent",
                                                                                                "name": "ActiveStatusConfirmContent",
                                                                                                "key": "active-status-confirm-content",
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "text",
                                                                                                    "name": "ActiveStatusConfirmText",
                                                                                                    "key": "active-status-confirm-text",
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "static",
                                                                                                        "content": "Are you completely confident about the changes you are making to this user?"
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ConfirmationModalTrigger",
                                                                                                "name": "ActiveStatusTrigger",
                                                                                                "key": "active-status-trigger",
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "ActiveCheckboxContainer",
                                                                                                    "key": "active-checkbox-container",
                                                                                                    "style": {
                                                                                                        "display": "flex",
                                                                                                        "width": "fit-content"
                                                                                                    },
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "CheckBoxDiv",
                                                                                                            "name": "ActiveCheckbox",
                                                                                                            "key": "active-checkbox",
                                                                                                            "dependency": {
                                                                                                            "type": "local",
                                                                                                            "path": "@/components/ui/checkbox"
                                                                                                            },
                                                                                                            "attrs": [
                                                                                                            {
                                                                                                                "type": "dynamic",
                                                                                                                "content": {
                                                                                                                "referenceType": "local",
                                                                                                                "id": "user.is_active"
                                                                                                                }
                                                                                                            }
                                                                                                            ]
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "SuperuserStatusCell",
                                                                                    "key": "superuser-status-cell",
                                                                                    "style": {
                                                                                    "position": "relative",
                                                                                    "left": "4px",
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "overflow": "hidden",
                                                                                    "paddingY": "8px"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "ConfirmationModal",
                                                                                        "name": "SuperuserStatusModal",
                                                                                        "key": "superuser-status-modal",
                                                                                        "dependency": {
                                                                                            "type": "local",
                                                                                            "path": "@/modals/confirmationModal"
                                                                                        },
                                                                                        "attrs": [
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "x-small"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Edit"
                                                                                            },
                                                                                            {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "local",
                                                                                                "id": "user.username"
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Attention!"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Cancel"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "Confirm"
                                                                                            },
                                                                                            {
                                                                                            "type": "static",
                                                                                            "content": "UserCog2"
                                                                                            }
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ConfirmationModalContent",
                                                                                                "name": "SuperuserStatusConfirmContent",
                                                                                                "key": "superuser-status-confirm-content",
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "text",
                                                                                                    "name": "SuperuserStatusConfirmText",
                                                                                                    "key": "superuser-status-confirm-text",
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "static",
                                                                                                        "content": "Are you completely confident about the changes you are making to this user?"
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ConfirmationModalTrigger",
                                                                                                "name": "SuperuserStatusTrigger",
                                                                                                "key": "superuser-status-trigger",
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "SuperuserCheckboxContainer",
                                                                                                    "key": "superuser-checkbox-container",
                                                                                                    "style": {
                                                                                                        "display": "flex",
                                                                                                        "width": "fit-content"
                                                                                                    },
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "CheckBoxDiv",
                                                                                                            "name": "SuperuserCheckbox",
                                                                                                            "key": "superuser-checkbox",
                                                                                                            "dependency": {
                                                                                                            "type": "local",
                                                                                                            "path": "@/components/ui/checkbox"
                                                                                                            },
                                                                                                            "attrs": [
                                                                                                            {
                                                                                                                "type": "dynamic",
                                                                                                                "content": {
                                                                                                                "referenceType": "local",
                                                                                                                "id": "user.is_superuser"
                                                                                                                }
                                                                                                            }
                                                                                                            ]
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "CreatedAtCell",
                                                                                    "key": "created-at-cell",
                                                                                    "style": {
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "overflow": "hidden",
                                                                                    "paddingY": "8px"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "user.formattedCreatedAt"
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "UpdatedAtCell",
                                                                                    "key": "updated-at-cell",
                                                                                    "style": {
                                                                                    "textOverflow": "ellipsis",
                                                                                    "whiteSpace": "nowrap",
                                                                                    "overflow": "hidden",
                                                                                    "paddingY": "8px"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "user.formattedUpdatedAt"
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "TableCell",
                                                                                    "name": "UserActionsCell",
                                                                                    "key": "user-actions-cell",
                                                                                    "style": {
                                                                                    "display": "flex",
                                                                                    "width": "100px",
                                                                                    "paddingY": "8px",
                                                                                    "textAlign": "right"
                                                                                    },
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "UserActionsContainer",
                                                                                        "key": "user-actions-container",
                                                                                        "style": {
                                                                                            "display": "flex"
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "UserManagementModal",
                                                                                                "name": "EditUserModal",
                                                                                                "key": "edit-user-modal",
                                                                                                "dependency": {
                                                                                                "type": "local",
                                                                                                "path": "@/modals/userManagementModal"
                                                                                                },
                                                                                                "attrs": [
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Edit"
                                                                                                },
                                                                                                {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "user.id"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Cancel"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Save"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "UserPlus2"
                                                                                                },
                                                                                                {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "user"
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "dynamic",
                                                                                                    "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "index"
                                                                                                    }
                                                                                                }
                                                                                                ],
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "ShadTooltip",
                                                                                                    "name": "EditUserTooltip",
                                                                                                    "key": "edit-user-tooltip",
                                                                                                    "dependency": {
                                                                                                        "type": "local",
                                                                                                        "path": "@/components/common/shadTooltipComponent"
                                                                                                    },
                                                                                                    "attrs": [
                                                                                                        {
                                                                                                        "type": "static",
                                                                                                        "content": "Edit"
                                                                                                        },
                                                                                                        {
                                                                                                        "type": "static",
                                                                                                        "content": "top"
                                                                                                        }
                                                                                                    ],
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "IconComponent",
                                                                                                            "name": "EditUserIcon",
                                                                                                            "key": "edit-user-icon",
                                                                                                            "dependency": {
                                                                                                            "type": "local",
                                                                                                            "path": "@/components/common/genericIconComponent"
                                                                                                            },
                                                                                                            "attrs": [
                                                                                                            {
                                                                                                                "type": "static",
                                                                                                                "content": "Pencil"
                                                                                                            }
                                                                                                            ],
                                                                                                            "style": {
                                                                                                            "height": "16px",
                                                                                                            "width": "16px",
                                                                                                            "cursor": "pointer"
                                                                                                            }
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            },
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "ConfirmationModal",
                                                                                                "name": "DeleteUserModal",
                                                                                                "key": "delete-user-modal",
                                                                                                "dependency": {
                                                                                                "type": "local",
                                                                                                "path": "@/modals/confirmationModal"
                                                                                                },
                                                                                                "attrs": [
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "x-small"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Delete"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Delete User"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Attention!"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Cancel"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "Delete"
                                                                                                },
                                                                                                {
                                                                                                    "type": "static",
                                                                                                    "content": "UserMinus2"
                                                                                                }
                                                                                                ],
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "ConfirmationModalContent",
                                                                                                    "name": "DeleteUserConfirmContent",
                                                                                                    "key": "delete-user-confirm-content",
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "text",
                                                                                                            "name": "DeleteUserConfirmText",
                                                                                                            "key": "delete-user-confirm-text",
                                                                                                            "children": [
                                                                                                            {
                                                                                                                "type": "static",
                                                                                                                "content": "Are you sure you want to delete this user? This action cannot be undone."
                                                                                                            }
                                                                                                            ]
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "ConfirmationModalTrigger",
                                                                                                    "name": "DeleteUserTrigger",
                                                                                                    "key": "delete-user-trigger",
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                            "elementType": "IconComponent",
                                                                                                            "name": "DeleteUserIcon",
                                                                                                            "key": "delete-user-icon",
                                                                                                            "dependency": {
                                                                                                            "type": "local",
                                                                                                            "path": "@/components/common/genericIconComponent"
                                                                                                            },
                                                                                                            "attrs": [
                                                                                                            {
                                                                                                                "type": "static",
                                                                                                                "content": "Trash2"
                                                                                                            }
                                                                                                            ],
                                                                                                            "style": {
                                                                                                            "marginLeft": "8px",
                                                                                                            "height": "16px",
                                                                                                            "width": "16px",
                                                                                                            "cursor": "pointer"
                                                                                                            }
                                                                                                        }
                                                                                                        }
                                                                                                    ]
                                                                                                    }
                                                                                                }
                                                                                                ]
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        "dataSource": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "state",
                                                                            "id": "filterUserList"
                                                                            }
                                                                        },
                                                                        "meta": {
                                                                            "useIndex": true,
                                                                            "iteratorName": "user",
                                                                            "indexName": "index"
                                                                        }
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "PaginatorComponent",
                                                        "name": "UsersPaginator",
                                                        "key": "users-paginator",
                                                        "dependency": {
                                                        "type": "local",
                                                        "path": "@/components/common/paginatorComponent"
                                                        },
                                                        "attrs": [
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "pageIndex"
                                                            }
                                                        },
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "pageSize"
                                                            }
                                                        },
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "totalRowsCount"
                                                            }
                                                        },
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "paginationRowsCount"
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    }
                                                ]
                                                }
                                            },
                                            "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "state",
                                                "id": "hasUsersToDisplay"
                                                }
                                            }
                                            }
                                        }
                                        ]
                                    }
                                    },
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "state",
                                        "id": "userDataExists"
                                    }
                                    }
                                }
                                }
                            ]
                            }
                        },
                        "stateDefinitions": {
                            "inputValue": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "pageSize": {
                            "type": "number",
                            "defaultValue": 10
                            },
                            "pageIndex": {
                            "type": "number",
                            "defaultValue": 1
                            },
                            "totalRowsCount": {
                            "type": "number",
                            "defaultValue": 0
                            },
                            "userList": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "filterUserList": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "userData": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isIdle": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "hasSearchValue": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasNoSearchValue": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "hasNoUsers": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "hasUsersToDisplay": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "userDataExists": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "adminHeaderTitle": {
                            "type": "string",
                            "defaultValue": "Admin"
                            },
                            "adminHeaderDescription": {
                            "type": "string",
                            "defaultValue": "Manage system users and their permissions."
                            },
                            "paginationRowsCount": {
                            "type": "array",
                            "defaultValue": [10, 20, 50, 100]
                            }
                        },
                        "propDefinitions": {},
                        "styleSetDefinitions": {
                            "adminPagePanel": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "height": "100vh",
                                "flexDirection": "column",
                                "paddingBottom": "32px"
                            }
                            },
                            "navigationHeader": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "alignItems": "center",
                                "gap": "8px",
                                "fontSize": "24px",
                                "fontWeight": "600",
                                "paddingBottom": "16px"
                            }
                            },
                            "controlsBar": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "width": "100%",
                                "justifyContent": "space-between",
                                "paddingLeft": "16px",
                                "paddingRight": "16px",
                                "marginBottom": "16px"
                            }
                            },
                            "tableWrapper": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "margin": "16px",
                                "height": "fit-content",
                                "overflowX": "hidden",
                                "overflowY": "scroll",
                                "borderRadius": "6px",
                                "border": "2px solid #e5e7eb",
                                "backgroundColor": "#ffffff"
                            }
                            },
                            "tableHeader": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "tableLayout": "fixed",
                                "backgroundColor": "#f9fafb",
                                "outline": "1px"
                            }
                            },
                            "tableCell": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                                "overflow": "hidden",
                                "paddingY": "8px"
                            }
                            },
                            "actionButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "height": "16px",
                                "width": "16px",
                                "cursor": "pointer"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "primaryColor": "#3b82f6",
                            "secondaryColor": "#6b7280",
                            "backgroundColor": "#ffffff",
                            "borderColor": "#e5e7eb",
                            "textColor": "#1f2937",
                            "mutedTextColor": "#6b7280",
                            "destructiveColor": "#ef4444",
                            "successColor": "#10b981",
                            "tableHeaderColor": "#f9fafb",
                            "adminIconColor": "#3b82f6"
                            }
                        }
                        }
				},
				{
					"id": "store_page",
					"type": "interface",
					"name": "StorePage",
					"description": "Component marketplace with browsing, search, ratings, and community-driven content discovery",
					"route": "/store",
					"component_path": "src/frontend/src/pages/StorePage",
					"uidl_definition_physical": {
                        "name": "StorePage",
                        "globals": {
                            "settings": {
                            "title": "Store Page",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "StorePage",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "store-page-container",
                                "children": [
                                {
                                    "type": "element",
                                    "content": {
                                    "elementType": "container",
                                    "name": "page-layout-wrapper",
                                    "children": [
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "container",
                                            "name": "page-header",
                                            "children": [
                                            {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "header-content",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "text",
                                                        "name": "page-title-store",
                                                        "style": {
                                                        "fontSize": "24px",
                                                        "fontWeight": "600",
                                                        "color": "$token-color-text-primary"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Store"
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "text",
                                                        "name": "page-description-beta",
                                                        "style": {
                                                        "fontSize": "14px",
                                                        "color": "$token-color-text-secondary",
                                                        "marginTop": "4px"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Discover and share custom components and flows"
                                                        }
                                                    ]
                                                    }
                                                ]
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "content": {
                                                "elementType": "button",
                                                "name": "api-key-button-store",
                                                "attrs": [
                                                    {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "prop",
                                                        "id": "disabled"
                                                    }
                                                    }
                                                ],
                                                "style": {
                                                    "backgroundColor": "$token-color-primary",
                                                    "color": "$token-color-primary-contrast",
                                                    "padding": "8px 16px",
                                                    "borderRadius": "$token-border-radius-md",
                                                    "border": "none",
                                                    "cursor": "pointer",
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "gap": "8px"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "icon",
                                                    "name": "key-icon",
                                                    "style": {
                                                        "width": "16px",
                                                        "height": "16px"
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "static",
                                                    "content": "API Key"
                                                }
                                                ]
                                            }
                                            ],
                                            "style": {
                                            "display": "flex",
                                            "justifyContent": "space-between",
                                            "alignItems": "center",
                                            "padding": "16px 0"
                                            }
                                        }
                                        },
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "container",
                                            "name": "main-content",
                                            "children": [
                                            {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "search-and-tabs-section",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "search-row",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "search-input-container",
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "input",
                                                                    "name": "search-components-input",
                                                                    "attrs": [
                                                                    {
                                                                        "type": "static",
                                                                        "name": "placeholder",
                                                                        "content": "Search components and flows..."
                                                                    },
                                                                    {
                                                                        "type": "static",
                                                                        "name": "type",
                                                                        "content": "text"
                                                                    },
                                                                    {
                                                                        "type": "dynamic",
                                                                        "name": "value",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "inputText"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "dynamic",
                                                                        "name": "disabled",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "loading"
                                                                        }
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "width": "100%",
                                                                    "padding": "12px 16px",
                                                                    "border": "1px solid $token-color-border",
                                                                    "borderRadius": "$token-border-radius-md",
                                                                    "fontSize": "14px"
                                                                    }
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "button",
                                                                    "name": "search-submit-button",
                                                                    "style": {
                                                                    "position": "absolute",
                                                                    "right": "8px",
                                                                    "top": "50%",
                                                                    "transform": "translateY(-50%)",
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "pointer",
                                                                    "padding": "4px"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "icon",
                                                                        "name": "search-icon",
                                                                        "style": {
                                                                        "width": "16px",
                                                                        "height": "16px",
                                                                        "color": "$token-color-text-secondary"
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            ],
                                                            "style": {
                                                                "position": "relative",
                                                                "width": "40%"
                                                            }
                                                            }
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "tabs-navigation",
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "button",
                                                                    "name": "all-tab-button",
                                                                    "attrs": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "name": "disabled",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "loading"
                                                                        }
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "padding": "12px",
                                                                    "borderBottom": "2px solid",
                                                                    "borderBottomColor": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "tabActive",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "All",
                                                                            "operation": "===",
                                                                            "value": "$token-color-primary"
                                                                            }
                                                                        ],
                                                                        "fallback": "transparent"
                                                                        }
                                                                    },
                                                                    "color": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "tabActive",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "All",
                                                                            "operation": "===",
                                                                            "value": "$token-color-text-primary"
                                                                            }
                                                                        ],
                                                                        "fallback": "$token-color-text-secondary"
                                                                        }
                                                                    },
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "pointer"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "All"
                                                                    }
                                                                ]
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "button",
                                                                    "name": "flows-tab-button",
                                                                    "attrs": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "name": "disabled",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "loading"
                                                                        }
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "padding": "12px",
                                                                    "borderBottom": "2px solid",
                                                                    "borderBottomColor": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "tabActive",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "Flows",
                                                                            "operation": "===",
                                                                            "value": "$token-color-primary"
                                                                            }
                                                                        ],
                                                                        "fallback": "transparent"
                                                                        }
                                                                    },
                                                                    "color": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "tabActive",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "Flows",
                                                                            "operation": "===",
                                                                            "value": "$token-color-text-primary"
                                                                            }
                                                                        ],
                                                                        "fallback": "$token-color-text-secondary"
                                                                        }
                                                                    },
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "pointer"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Flows"
                                                                    }
                                                                ]
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "button",
                                                                    "name": "components-tab-button",
                                                                    "attrs": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "name": "disabled",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "loading"
                                                                        }
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "padding": "12px",
                                                                    "borderBottom": "2px solid",
                                                                    "borderBottomColor": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "tabActive",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "Components",
                                                                            "operation": "===",
                                                                            "value": "$token-color-primary"
                                                                            }
                                                                        ],
                                                                        "fallback": "transparent"
                                                                        }
                                                                    },
                                                                    "color": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "tabActive",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "Components",
                                                                            "operation": "===",
                                                                            "value": "$token-color-text-primary"
                                                                            }
                                                                        ],
                                                                        "fallback": "$token-color-text-secondary"
                                                                        }
                                                                    },
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "pointer"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Components"
                                                                    }
                                                                ]
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "button",
                                                                    "name": "bundles-tab-button-disabled",
                                                                    "attrs": [
                                                                    {
                                                                        "type": "static",
                                                                        "name": "disabled",
                                                                        "content": true
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "padding": "12px",
                                                                    "borderBottom": "2px solid transparent",
                                                                    "color": "$token-color-text-disabled",
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "not-allowed"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "Bundles"
                                                                    }
                                                                ]
                                                                }
                                                            ],
                                                            "style": {
                                                                "display": "flex",
                                                                "gap": "0",
                                                                "borderBottom": "1px solid $token-color-border",
                                                                "marginLeft": "16px",
                                                                "width": "100%"
                                                            }
                                                            }
                                                        }
                                                        ],
                                                        "style": {
                                                        "display": "flex",
                                                        "alignItems": "flex-end",
                                                        "gap": "16px",
                                                        "marginBottom": "16px"
                                                        }
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "filters-row",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "select",
                                                            "name": "filter-dropdown",
                                                            "attrs": [
                                                                {
                                                                "type": "dynamic",
                                                                "name": "disabled",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "loading"
                                                                }
                                                                },
                                                                {
                                                                "type": "dynamic",
                                                                "name": "value",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "selectFilter"
                                                                }
                                                                }
                                                            ],
                                                            "style": {
                                                                "width": "160px",
                                                                "padding": "8px 12px",
                                                                "border": "1px solid $token-color-border",
                                                                "borderRadius": "$token-border-radius-md",
                                                                "backgroundColor": "$token-color-surface"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "option",
                                                                "name": "filter-all-option",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "name": "value",
                                                                    "content": "all"
                                                                    }
                                                                ]
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "All"
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "option",
                                                                "name": "filter-created-by-me-option",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "name": "value",
                                                                    "content": "createdbyme"
                                                                    },
                                                                    {
                                                                    "type": "dynamic",
                                                                    "name": "disabled",
                                                                    "content": {
                                                                        "referenceType": "computed",
                                                                        "id": "isFilterDisabled"
                                                                    }
                                                                    }
                                                                ]
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Created By Me"
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "option",
                                                                "name": "filter-liked-by-me-option",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "name": "value",
                                                                    "content": "likedbyme"
                                                                    },
                                                                    {
                                                                    "type": "dynamic",
                                                                    "name": "disabled",
                                                                    "content": {
                                                                        "referenceType": "computed",
                                                                        "id": "isFilterDisabled"
                                                                    }
                                                                    }
                                                                ]
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Liked By Me"
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "conditional",
                                                            "content": {
                                                            "node": {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "container",
                                                                "name": "tags-selector-container",
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "tags-selector",
                                                                        "attrs": [
                                                                        {
                                                                            "type": "dynamic",
                                                                            "name": "disabled",
                                                                            "content": {
                                                                            "referenceType": "state",
                                                                            "id": "loading"
                                                                            }
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "display": "flex",
                                                                        "flexWrap": "wrap",
                                                                        "gap": "8px"
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "computed",
                                                                "id": "showTagsSelector"
                                                                }
                                                            }
                                                            }
                                                        },
                                                        {
                                                            "type": "conditional",
                                                            "content": {
                                                            "node": {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "container",
                                                                "name": "filter-badge",
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "filter-tag-badge",
                                                                        "style": {
                                                                        "display": "inline-flex",
                                                                        "alignItems": "center",
                                                                        "gap": "8px",
                                                                        "padding": "4px 8px",
                                                                        "backgroundColor": "$token-color-secondary",
                                                                        "color": "$token-color-secondary-contrast",
                                                                        "borderRadius": "$token-border-radius-sm",
                                                                        "fontSize": "12px"
                                                                        }
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "button",
                                                                            "name": "remove-filter-button",
                                                                            "style": {
                                                                            "background": "transparent",
                                                                            "border": "none",
                                                                            "cursor": "pointer",
                                                                            "padding": "0",
                                                                            "display": "flex",
                                                                            "alignItems": "center"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "icon",
                                                                                "name": "close-filter-icon",
                                                                                "style": {
                                                                                "width": "16px",
                                                                                "height": "16px"
                                                                                }
                                                                            }
                                                                            }
                                                                        ]
                                                                        },
                                                                        {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "currentFilterId"
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                ]
                                                                }
                                                            },
                                                            "reference": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "computed",
                                                                "id": "hasActiveFilter"
                                                                }
                                                            }
                                                            }
                                                        }
                                                        ],
                                                        "style": {
                                                        "display": "flex",
                                                        "alignItems": "center",
                                                        "gap": "8px",
                                                        "marginBottom": "16px"
                                                        }
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "results-and-sort-row",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "results-count",
                                                            "style": {
                                                                "fontSize": "14px",
                                                                "color": "$token-color-text-secondary"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "results-text",
                                                                    "children": [
                                                                        {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "totalRowsCount"
                                                                        }
                                                                        },
                                                                        {
                                                                        "type": "static",
                                                                        "content": " "
                                                                        },
                                                                        {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "totalRowsCount",
                                                                            "conditions": [
                                                                            {
                                                                                "operand": 1,
                                                                                "operation": "!==",
                                                                                "value": "results"
                                                                            }
                                                                            ],
                                                                            "fallback": "result"
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "computed",
                                                                    "id": "showResultsCount"
                                                                    }
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "select",
                                                            "name": "sort-order-dropdown",
                                                            "attrs": [
                                                                {
                                                                "type": "dynamic",
                                                                "name": "disabled",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "loading"
                                                                }
                                                                },
                                                                {
                                                                "type": "dynamic",
                                                                "name": "value",
                                                                "content": {
                                                                    "referenceType": "state",
                                                                    "id": "pageOrder"
                                                                }
                                                                }
                                                            ],
                                                            "style": {
                                                                "padding": "8px 12px",
                                                                "border": "1px solid $token-color-border",
                                                                "borderRadius": "$token-border-radius-md",
                                                                "backgroundColor": "$token-color-surface"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "option",
                                                                "name": "sort-popular-option",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "name": "value",
                                                                    "content": "Popular"
                                                                    }
                                                                ]
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Popular"
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "option",
                                                                "name": "sort-alphabetical-option",
                                                                "attrs": [
                                                                    {
                                                                    "type": "static",
                                                                    "name": "value",
                                                                    "content": "Alphabetical"
                                                                    }
                                                                ]
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Alphabetical"
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        ],
                                                        "style": {
                                                        "display": "flex",
                                                        "justifyContent": "space-between",
                                                        "alignItems": "flex-end",
                                                        "marginBottom": "16px"
                                                        }
                                                    }
                                                    }
                                                ],
                                                "style": {
                                                    "display": "flex",
                                                    "flexDirection": "column",
                                                    "gap": "16px",
                                                    "width": "100%"
                                                }
                                                }
                                            },
                                            {
                                                "type": "conditional",
                                                "content": {
                                                "node": {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "store-cards-grid",
                                                    "children": [
                                                        {
                                                        "type": "repeat",
                                                        "content": {
                                                            "node": {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "store-card-item",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "store-card",
                                                                    "style": {
                                                                        "border": "1px solid $token-color-border",
                                                                        "borderRadius": "$token-border-radius-md",
                                                                        "padding": "16px",
                                                                        "backgroundColor": "$token-color-surface",
                                                                        "cursor": "pointer",
                                                                        "transition": "all 0.2s ease"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "card-header",
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "text",
                                                                                "name": "card-title",
                                                                                "style": {
                                                                                "fontSize": "16px",
                                                                                "fontWeight": "600",
                                                                                "color": "$token-color-text-primary"
                                                                                }
                                                                            },
                                                                            "children": [
                                                                                {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "name"
                                                                                }
                                                                                }
                                                                            ]
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "text",
                                                                                "name": "card-description",
                                                                                "style": {
                                                                                "fontSize": "14px",
                                                                                "color": "$token-color-text-secondary",
                                                                                "marginTop": "4px",
                                                                                "display": "-webkit-box",
                                                                                "WebkitLineClamp": "2",
                                                                                "WebkitBoxOrient": "vertical",
                                                                                "overflow": "hidden"
                                                                                }
                                                                            },
                                                                            "children": [
                                                                                {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "description"
                                                                                }
                                                                                }
                                                                            ]
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "card-metadata",
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "card-stats",
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "download-count",
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "icon",
                                                                                            "name": "download-icon",
                                                                                            "style": {
                                                                                            "width": "14px",
                                                                                            "height": "14px",
                                                                                            "color": "$token-color-text-secondary"
                                                                                            }
                                                                                        }
                                                                                        },
                                                                                        {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                            "elementType": "text",
                                                                                            "name": "download-count-text",
                                                                                            "style": {
                                                                                            "fontSize": "12px",
                                                                                            "color": "$token-color-text-secondary",
                                                                                            "marginLeft": "4px"
                                                                                            }
                                                                                        },
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "local",
                                                                                                "id": "downloads"
                                                                                            }
                                                                                            }
                                                                                        ]
                                                                                        }
                                                                                    ],
                                                                                    "style": {
                                                                                        "display": "flex",
                                                                                        "alignItems": "center"
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "card-tags",
                                                                                "children": [
                                                                                {
                                                                                    "type": "repeat",
                                                                                    "content": {
                                                                                    "node": {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "span",
                                                                                        "name": "card-tag",
                                                                                        "style": {
                                                                                            "display": "inline-block",
                                                                                            "padding": "2px 6px",
                                                                                            "fontSize": "11px",
                                                                                            "backgroundColor": "$token-color-surface-variant",
                                                                                            "color": "$token-color-text-secondary",
                                                                                            "borderRadius": "$token-border-radius-xs",
                                                                                            "margin": "2px"
                                                                                        }
                                                                                        },
                                                                                        "children": [
                                                                                        {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                            "referenceType": "local",
                                                                                            "id": "tag"
                                                                                            }
                                                                                        }
                                                                                        ]
                                                                                    },
                                                                                    "dataSource": {
                                                                                        "type": "dynamic",
                                                                                        "content": {
                                                                                        "referenceType": "local",
                                                                                        "id": "tags"
                                                                                        }
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ],
                                                                                "style": {
                                                                                "display": "flex",
                                                                                "flexWrap": "wrap",
                                                                                "marginTop": "8px"
                                                                                }
                                                                            }
                                                                            }
                                                                        ],
                                                                        "style": {
                                                                            "display": "flex",
                                                                            "justifyContent": "space-between",
                                                                            "alignItems": "flex-start",
                                                                            "marginTop": "12px"
                                                                        }
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "searchData"
                                                            }
                                                            }
                                                        }
                                                        }
                                                    ],
                                                    "style": {
                                                        "display": "grid",
                                                        "gridTemplateColumns": "repeat(auto-fill, minmax(300px, 1fr))",
                                                        "gap": "16px",
                                                        "width": "100%"
                                                    }
                                                    }
                                                },
                                                "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "computed",
                                                    "id": "hasSearchResults"
                                                    }
                                                }
                                                }
                                            },
                                            {
                                                "type": "conditional",
                                                "content": {
                                                "node": {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "loading-skeleton-grid",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-card-1",
                                                            "style": {
                                                            "border": "1px solid $token-color-border",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "padding": "16px",
                                                            "backgroundColor": "$token-color-surface",
                                                            "animation": "pulse 2s infinite"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "skeleton-content-1",
                                                                "style": {
                                                                "height": "120px",
                                                                "backgroundColor": "$token-color-surface-variant",
                                                                "borderRadius": "$token-border-radius-sm"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-card-2",
                                                            "style": {
                                                            "border": "1px solid $token-color-border",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "padding": "16px",
                                                            "backgroundColor": "$token-color-surface",
                                                            "animation": "pulse 2s infinite"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "skeleton-content-2",
                                                                "style": {
                                                                "height": "120px",
                                                                "backgroundColor": "$token-color-surface-variant",
                                                                "borderRadius": "$token-border-radius-sm"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-card-3",
                                                            "style": {
                                                            "border": "1px solid $token-color-border",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "padding": "16px",
                                                            "backgroundColor": "$token-color-surface",
                                                            "animation": "pulse 2s infinite"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "skeleton-content-3",
                                                                "style": {
                                                                "height": "120px",
                                                                "backgroundColor": "$token-color-surface-variant",
                                                                "borderRadius": "$token-border-radius-sm"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    ],
                                                    "style": {
                                                        "display": "grid",
                                                        "gridTemplateColumns": "repeat(auto-fill, minmax(300px, 1fr))",
                                                        "gap": "16px",
                                                        "width": "100%"
                                                    }
                                                    }
                                                },
                                                "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "state",
                                                    "id": "loading"
                                                    }
                                                }
                                                }
                                            },
                                            {
                                                "type": "conditional",
                                                "content": {
                                                "node": {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "empty-state-message",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "empty-state-content",
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "no-results-message",
                                                                "style": {
                                                                    "fontSize": "16px",
                                                                    "color": "$token-color-text-secondary",
                                                                    "textAlign": "center"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                    "node": {
                                                                        "type": "static",
                                                                        "content": "You haven't created anything with the selected filters yet."
                                                                    },
                                                                    "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "selectFilter",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "createdbyme",
                                                                            "operation": "===",
                                                                            "value": true
                                                                            }
                                                                        ],
                                                                        "fallback": false
                                                                        }
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                    "node": {
                                                                        "type": "static",
                                                                        "content": "You haven't liked anything with the selected filters yet."
                                                                    },
                                                                    "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "selectFilter",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "likedbyme",
                                                                            "operation": "===",
                                                                            "value": true
                                                                            }
                                                                        ],
                                                                        "fallback": false
                                                                        }
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                    "node": {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "no-results-generic",
                                                                        "children": [
                                                                            {
                                                                            "type": "static",
                                                                            "content": "There are no "
                                                                            },
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "state",
                                                                                "id": "tabActive",
                                                                                "conditions": [
                                                                                {
                                                                                    "operand": "Flows",
                                                                                    "operation": "===",
                                                                                    "value": "Flows"
                                                                                }
                                                                                ],
                                                                                "fallback": "Components"
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "static",
                                                                            "content": " with the selected filters."
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "selectFilter",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": "all",
                                                                            "operation": "===",
                                                                            "value": true
                                                                            }
                                                                        ],
                                                                        "fallback": false
                                                                        }
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ],
                                                    "style": {
                                                        "display": "flex",
                                                        "justifyContent": "center",
                                                        "alignItems": "center",
                                                        "width": "100%",
                                                        "padding": "32px",
                                                        "textAlign": "center"
                                                    }
                                                    }
                                                },
                                                "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "computed",
                                                    "id": "showEmptyState"
                                                    }
                                                }
                                                }
                                            }
                                            ],
                                            "style": {
                                            "display": "flex",
                                            "flexDirection": "column",
                                            "justifyContent": "space-between",
                                            "height": "100%",
                                            "width": "100%"
                                            }
                                        }
                                        },
                                        {
                                        "type": "conditional",
                                        "content": {
                                            "node": {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "pagination-container",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "pagination-component",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "pagination-controls",
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "button",
                                                                "name": "pagination-previous",
                                                                "attrs": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "name": "disabled",
                                                                    "content": {
                                                                        "referenceType": "computed",
                                                                        "id": "isPreviousDisabled"
                                                                    }
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "padding": "8px 12px",
                                                                    "border": "1px solid $token-color-border",
                                                                    "borderRadius": "$token-border-radius-md",
                                                                    "backgroundColor": "$token-color-surface",
                                                                    "cursor": "pointer"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Previous"
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "text",
                                                                "name": "pagination-info",
                                                                "style": {
                                                                    "fontSize": "14px",
                                                                    "color": "$token-color-text-secondary",
                                                                    "margin": "0 16px"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Page "
                                                                },
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "pageIndex"
                                                                    }
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "button",
                                                                "name": "pagination-next",
                                                                "attrs": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "name": "disabled",
                                                                    "content": {
                                                                        "referenceType": "computed",
                                                                        "id": "isNextDisabled"
                                                                    }
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "padding": "8px 12px",
                                                                    "border": "1px solid $token-color-border",
                                                                    "borderRadius": "$token-border-radius-md",
                                                                    "backgroundColor": "$token-color-surface",
                                                                    "cursor": "pointer"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Next"
                                                                }
                                                                ]
                                                            }
                                                            ],
                                                            "style": {
                                                            "display": "flex",
                                                            "justifyContent": "center",
                                                            "alignItems": "center"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ],
                                                "style": {
                                                "position": "relative",
                                                "padding": "24px 0"
                                                }
                                            }
                                            },
                                            "reference": {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "computed",
                                                "id": "showPagination"
                                            }
                                            }
                                        }
                                        }
                                    ]
                                    }
                                }
                                ],
                                "style": {
                                "display": "flex",
                                "flexDirection": "column",
                                "minHeight": "100vh",
                                "padding": "16px",
                                "backgroundColor": "$token-color-background"
                                }
                            }
                            },
                            "stateDefinitions": {
                            "hasApiKey": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "validApiKey": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "loadingApiKey": {
                                "type": "boolean",
                                "defaultValue": true
                            },
                            "loading": {
                                "type": "boolean",
                                "defaultValue": true
                            },
                            "inputText": {
                                "type": "string",
                                "defaultValue": ""
                            },
                            "searchData": {
                                "type": "array",
                                "defaultValue": []
                            },
                            "totalRowsCount": {
                                "type": "number",
                                "defaultValue": 0
                            },
                            "pageSize": {
                                "type": "number",
                                "defaultValue": 12
                            },
                            "pageIndex": {
                                "type": "number",
                                "defaultValue": 1
                            },
                            "pageOrder": {
                                "type": "string",
                                "defaultValue": "Popular"
                            },
                            "tabActive": {
                                "type": "string",
                                "defaultValue": "All"
                            },
                            "searchNow": {
                                "type": "string",
                                "defaultValue": ""
                            },
                            "selectFilter": {
                                "type": "string",
                                "defaultValue": "all"
                            },
                            "filteredCategories": {
                                "type": "array",
                                "defaultValue": []
                            },
                            "currentFilterId": {
                                "type": "string",
                                "defaultValue": ""
                            }
                            },
                            "propDefinitions": {
                            "disabled": {
                                "type": "boolean",
                                "defaultValue": false
                            }
                            },
                            "compDefinitions": {
                            "isFilterDisabled": {
                                "type": "boolean",
                                "content": "!$state.hasApiKey || !$state.validApiKey"
                            },
                            "showTagsSelector": {
                                "type": "boolean",
                                "content": "$state.currentFilterId === undefined"
                            },
                            "hasActiveFilter": {
                                "type": "boolean",
                                "content": "$state.currentFilterId !== undefined && $state.currentFilterId !== ''"
                            },
                            "showResultsCount": {
                                "type": "boolean",
                                "content": "(!$state.loading || $state.searchData.length !== 0)"
                            },
                            "hasSearchResults": {
                                "type": "boolean",
                                "content": "(!$state.loading || $state.searchData.length !== 0) && $state.searchData.length > 0"
                            },
                            "showEmptyState": {
                                "type": "boolean",
                                "content": "!$state.loading && $state.searchData.length === 0"
                            },
                            "showPagination": {
                                "type": "boolean",
                                "content": "!$state.loading && $state.searchData.length > 0"
                            },
                            "isPreviousDisabled": {
                                "type": "boolean",
                                "content": "$state.pageIndex <= 1"
                            },
                            "isNextDisabled": {
                                "type": "boolean",
                                "content": "$state.pageIndex * $state.pageSize >= $state.totalRowsCount"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "primaryButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "$token-color-primary",
                                "color": "$token-color-primary-contrast",
                                "padding": "8px 16px",
                                "borderRadius": "$token-border-radius-md",
                                "border": "none",
                                "cursor": "pointer",
                                "fontSize": "14px",
                                "fontWeight": "500",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "inputField": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "100%",
                                "padding": "12px 16px",
                                "border": "1px solid $token-color-border",
                                "borderRadius": "$token-border-radius-md",
                                "fontSize": "14px",
                                "backgroundColor": "$token-color-surface",
                                "color": "$token-color-text-primary"
                            }
                            },
                            "selectDropdown": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "padding": "8px 12px",
                                "border": "1px solid $token-color-border",
                                "borderRadius": "$token-border-radius-md",
                                "backgroundColor": "$token-color-surface",
                                "fontSize": "14px",
                                "cursor": "pointer"
                            }
                            },
                            "cardContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "border": "1px solid $token-color-border",
                                "borderRadius": "$token-border-radius-md",
                                "padding": "16px",
                                "backgroundColor": "$token-color-surface",
                                "cursor": "pointer",
                                "transition": "all 0.2s ease",
                                "hover": {
                                "borderColor": "$token-color-primary",
                                "transform": "translateY(-2px)",
                                "boxShadow": "0 4px 12px rgba(0,0,0,0.1)"
                                }
                            }
                            },
                            "tabButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "padding": "12px",
                                "borderBottom": "2px solid transparent",
                                "background": "transparent",
                                "border": "none",
                                "cursor": "pointer",
                                "fontSize": "14px",
                                "fontWeight": "500",
                                "transition": "all 0.2s ease",
                                "hover": {
                                "color": "$token-color-primary"
                                }
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-primary-contrast": "#FFFFFF",
                                "token-color-secondary": "#6B7280",
                                "token-color-secondary-contrast": "#FFFFFF",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-surface-variant": "#F3F4F6",
                                "token-color-border": "#E5E7EB",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-xs": "2px",
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px"
                            },
                            "typography": {
                                "token-font-size-xs": "12px",
                                "token-font-size-sm": "14px",
                                "token-font-size-md": "16px",
                                "token-font-size-lg": "18px",
                                "token-font-size-xl": "24px"
                            }
                            }
                        }
                        }
				},
				{
					"id": "header_component",
					"type": "interface",
					"name": "HeaderComponent",
					"description": "Application header with navigation, user profile, notifications, and theme controls",
					"component_path": "src/frontend/src/components/HeaderComponent",
					"uidl_definition_physical": {
                        "name": "HeaderComponent",
                        "globals": {
                            "settings": {
                            "title": "Header Component",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "HeaderComponent",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "header-component-wrapper",
                                "children": [
                                {
                                    "type": "element",
                                    "content": {
                                    "elementType": "container",
                                    "name": "title-bar-section",
                                    "children": [
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "container",
                                            "name": "sidebar-trigger-container",
                                            "children": [
                                            {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "logo-trigger-wrapper",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "button",
                                                        "name": "sidebar-toggle-button",
                                                        "style": {
                                                        "background": "transparent",
                                                        "border": "none",
                                                        "cursor": "pointer",
                                                        "padding": "4px",
                                                        "display": "flex",
                                                        "alignItems": "center",
                                                        "justifyContent": "center"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "icon",
                                                            "name": "langflow-logo-icon",
                                                            "style": {
                                                            "width": "16px",
                                                            "height": "16px",
                                                            "color": "$token-color-primary"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                ],
                                                "style": {
                                                    "position": "relative",
                                                    "left": "0",
                                                    "opacity": "1",
                                                    "transition": "all 0.3s ease"
                                                }
                                                }
                                            }
                                            ],
                                            "style": {
                                            "height": "28px",
                                            "width": "40px",
                                            "transition": "all 0.3s ease"
                                            }
                                        }
                                        },
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "text",
                                            "name": "folder-name-title",
                                            "style": {
                                            "fontSize": "$token-font-size-sm",
                                            "fontWeight": "500",
                                            "color": "$token-color-text-primary"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "prop",
                                                "id": "folderName"
                                            }
                                            }
                                        ]
                                        }
                                    ],
                                    "style": {
                                        "display": "flex",
                                        "alignItems": "center",
                                        "paddingBottom": "16px",
                                        "fontSize": "$token-font-size-sm",
                                        "fontWeight": "500"
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "main-header-content",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "tabs-navigation-section",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "tabs-border-line",
                                                    "style": {
                                                        "width": "100%",
                                                        "borderBottom": "1px solid $token-color-border"
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "repeat",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "button",
                                                        "name": "tab-button",
                                                        "attrs": [
                                                            {
                                                            "type": "dynamic",
                                                            "name": "id",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "tabType"
                                                            }
                                                            },
                                                            {
                                                            "type": "dynamic",
                                                            "name": "data-testid",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "tabType"
                                                            }
                                                            }
                                                        ],
                                                        "style": {
                                                            "borderBottom": "2px solid",
                                                            "borderBottomColor": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "computed",
                                                                "id": "isTabActive",
                                                                "conditions": [
                                                                {
                                                                    "operand": true,
                                                                    "operation": "===",
                                                                    "value": "$token-color-foreground"
                                                                }
                                                                ],
                                                                "fallback": "$token-color-border"
                                                            }
                                                            },
                                                            "color": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "computed",
                                                                "id": "isTabActive",
                                                                "conditions": [
                                                                {
                                                                    "operand": true,
                                                                    "operation": "===",
                                                                    "value": "$token-color-text-primary"
                                                                }
                                                                ],
                                                                "fallback": "$token-color-text-secondary"
                                                            }
                                                            },
                                                            "padding": "8px",
                                                            "paddingTop": "4px",
                                                            "paddingBottom": "8px",
                                                            "whiteSpace": "nowrap",
                                                            "fontSize": "$token-font-size-sm",
                                                            "background": "transparent",
                                                            "border": "none",
                                                            "cursor": "pointer",
                                                            "transition": "color 0.2s ease",
                                                            "hover": {
                                                            "color": "$token-color-text-primary"
                                                            }
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "tab-content",
                                                            "style": {
                                                                "marginBottom": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "computed",
                                                                    "id": "isTabActive",
                                                                    "conditions": [
                                                                    {
                                                                        "operand": true,
                                                                        "operation": "===",
                                                                        "value": "-1px"
                                                                    }
                                                                    ],
                                                                    "fallback": "0"
                                                                }
                                                                }
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "static",
                                                                    "content": "MCP Server"
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "tabType",
                                                                    "conditions": [
                                                                        {
                                                                        "operand": "mcp",
                                                                        "operation": "===",
                                                                        "value": true
                                                                        }
                                                                    ],
                                                                    "fallback": false
                                                                    }
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "computed",
                                                                    "id": "capitalizedTabType"
                                                                    }
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "tabType",
                                                                    "conditions": [
                                                                        {
                                                                        "operand": "mcp",
                                                                        "operation": "!==",
                                                                        "value": true
                                                                        }
                                                                    ],
                                                                    "fallback": false
                                                                    }
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        ]
                                                    },
                                                    "dataSource": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "state",
                                                        "id": "tabTypes"
                                                        }
                                                    }
                                                    }
                                                }
                                                ],
                                                "style": {
                                                "display": "flex",
                                                "flexDirection": "row-reverse",
                                                "paddingBottom": "16px"
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "search-and-filters-section",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "left-controls-group",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "search-input-container",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "input",
                                                                    "name": "search-flows-input",
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "name": "type",
                                                                        "content": "text"
                                                                        },
                                                                        {
                                                                        "type": "dynamic",
                                                                        "name": "placeholder",
                                                                        "content": {
                                                                            "referenceType": "computed",
                                                                            "id": "searchPlaceholder"
                                                                        }
                                                                        },
                                                                        {
                                                                        "type": "static",
                                                                        "name": "data-testid",
                                                                        "content": "search-store-input"
                                                                        },
                                                                        {
                                                                        "type": "dynamic",
                                                                        "name": "value",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "debouncedSearch"
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "width": "100%",
                                                                        "padding": "8px 12px 8px 36px",
                                                                        "border": "1px solid $token-color-border",
                                                                        "borderRadius": "$token-border-radius-md",
                                                                        "fontSize": "$token-font-size-sm",
                                                                        "backgroundColor": "$token-color-surface",
                                                                        "color": "$token-color-text-primary"
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "icon",
                                                                    "name": "search-input-icon",
                                                                    "style": {
                                                                        "position": "absolute",
                                                                        "left": "12px",
                                                                        "top": "50%",
                                                                        "transform": "translateY(-50%)",
                                                                        "width": "16px",
                                                                        "height": "16px",
                                                                        "color": "$token-color-text-secondary"
                                                                    }
                                                                    }
                                                                }
                                                                ],
                                                                "style": {
                                                                "position": "relative",
                                                                "marginRight": "8px",
                                                                "fontSize": "$token-font-size-sm"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "view-toggle-container",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "view-toggle-slider",
                                                                    "style": {
                                                                        "position": "absolute",
                                                                        "top": "2px",
                                                                        "height": "32px",
                                                                        "width": "32px",
                                                                        "borderRadius": "$token-border-radius-md",
                                                                        "backgroundColor": "$token-color-background",
                                                                        "boxShadow": "$token-shadow-md",
                                                                        "transition": "transform 0.3s ease",
                                                                        "transform": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "view",
                                                                            "conditions": [
                                                                            {
                                                                                "operand": "list",
                                                                                "operation": "===",
                                                                                "value": "translateX(2px)"
                                                                            }
                                                                            ],
                                                                            "fallback": "translateX(38px)"
                                                                        }
                                                                        }
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "repeat",
                                                                    "content": {
                                                                    "node": {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "button",
                                                                        "name": "view-toggle-button",
                                                                        "style": {
                                                                            "position": "relative",
                                                                            "zIndex": "10",
                                                                            "margin": "2px",
                                                                            "flex": "1",
                                                                            "borderRadius": "$token-border-radius-md",
                                                                            "padding": "8px",
                                                                            "background": "transparent",
                                                                            "border": "none",
                                                                            "cursor": "pointer",
                                                                            "color": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "computed",
                                                                                "id": "isViewActive",
                                                                                "conditions": [
                                                                                {
                                                                                    "operand": true,
                                                                                    "operation": "===",
                                                                                    "value": "$token-color-text-primary"
                                                                                }
                                                                                ],
                                                                                "fallback": "$token-color-text-secondary"
                                                                            }
                                                                            },
                                                                            "hover": {
                                                                            "backgroundColor": "$token-color-surface",
                                                                            "color": "$token-color-text-primary"
                                                                            }
                                                                        }
                                                                        },
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "icon",
                                                                            "name": "view-toggle-icon",
                                                                            "style": {
                                                                                "width": "16px",
                                                                                "height": "16px"
                                                                            }
                                                                            }
                                                                        }
                                                                        ]
                                                                    },
                                                                    "dataSource": {
                                                                        "type": "static",
                                                                        "content": [
                                                                        { "type": "list", "icon": "Menu" },
                                                                        { "type": "grid", "icon": "LayoutGrid" }
                                                                        ]
                                                                    }
                                                                    }
                                                                }
                                                                ],
                                                                "style": {
                                                                "position": "relative",
                                                                "marginRight": "8px",
                                                                "display": "flex",
                                                                "height": "fit-content",
                                                                "borderRadius": "$token-border-radius-lg",
                                                                "border": "1px solid $token-color-border",
                                                                "backgroundColor": "$token-color-muted"
                                                                }
                                                            }
                                                            }
                                                        ],
                                                        "style": {
                                                            "display": "flex",
                                                            "width": "100%"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "right-actions-group",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "bulk-actions-container",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "button",
                                                                    "name": "download-bulk-button",
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "name": "data-testid",
                                                                        "content": "download-bulk-btn"
                                                                        },
                                                                        {
                                                                        "type": "dynamic",
                                                                        "name": "disabled",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "isDownloading"
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "height": "32px",
                                                                        "width": "32px",
                                                                        "padding": "0",
                                                                        "border": "1px solid $token-color-border",
                                                                        "borderRadius": "$token-border-radius-md",
                                                                        "backgroundColor": "$token-color-surface",
                                                                        "color": "$token-color-text-primary",
                                                                        "cursor": "pointer",
                                                                        "display": "flex",
                                                                        "alignItems": "center",
                                                                        "justifyContent": "center"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "icon",
                                                                        "name": "download-icon",
                                                                        "style": {
                                                                            "width": "16px",
                                                                            "height": "16px"
                                                                        }
                                                                        }
                                                                    }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "button",
                                                                    "name": "delete-bulk-button",
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "name": "data-testid",
                                                                        "content": "delete-bulk-btn"
                                                                        },
                                                                        {
                                                                        "type": "dynamic",
                                                                        "name": "disabled",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "isDeleting"
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "height": "32px",
                                                                        "padding": "0 10px",
                                                                        "border": "1px solid $token-color-destructive",
                                                                        "borderRadius": "$token-border-radius-md",
                                                                        "backgroundColor": "$token-color-destructive",
                                                                        "color": "$token-color-destructive-contrast",
                                                                        "cursor": "pointer",
                                                                        "display": "flex",
                                                                        "alignItems": "center",
                                                                        "gap": "4px",
                                                                        "fontSize": "$token-font-size-sm"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "icon",
                                                                        "name": "trash-icon",
                                                                        "style": {
                                                                            "width": "16px",
                                                                            "height": "16px"
                                                                        }
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "static",
                                                                        "content": "Delete"
                                                                    }
                                                                    ]
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex",
                                                                "width": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "computed",
                                                                    "id": "hasBulkActions",
                                                                    "conditions": [
                                                                        {
                                                                        "operand": true,
                                                                        "operation": "===",
                                                                        "value": "144px"
                                                                        }
                                                                    ],
                                                                    "fallback": "0"
                                                                    }
                                                                },
                                                                "alignItems": "center",
                                                                "gap": "8px",
                                                                "overflow": "hidden",
                                                                "opacity": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "computed",
                                                                    "id": "hasBulkActions",
                                                                    "conditions": [
                                                                        {
                                                                        "operand": true,
                                                                        "operation": "===",
                                                                        "value": "1"
                                                                        }
                                                                    ],
                                                                    "fallback": "0"
                                                                    }
                                                                },
                                                                "transition": "all 0.3s ease"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "button",
                                                                "name": "new-flow-button",
                                                                "attrs": [
                                                                {
                                                                    "type": "static",
                                                                    "name": "id",
                                                                    "content": "new-project-btn"
                                                                },
                                                                {
                                                                    "type": "static",
                                                                    "name": "data-testid",
                                                                    "content": "new-project-btn"
                                                                }
                                                                ],
                                                                "style": {
                                                                "zIndex": "50",
                                                                "padding": "0 10px",
                                                                "fontSize": "$token-font-size-sm",
                                                                "height": "32px",
                                                                "backgroundColor": "$token-color-primary",
                                                                "color": "$token-color-primary-contrast",
                                                                "border": "none",
                                                                "borderRadius": "$token-border-radius-md",
                                                                "cursor": "pointer",
                                                                "display": "flex",
                                                                "alignItems": "center",
                                                                "gap": "4px",
                                                                "fontWeight": "600"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "icon",
                                                                    "name": "plus-icon",
                                                                    "style": {
                                                                    "width": "16px",
                                                                    "height": "16px"
                                                                    }
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "text",
                                                                    "name": "new-flow-text",
                                                                    "style": {
                                                                    "whiteSpace": "nowrap",
                                                                    "fontWeight": "600",
                                                                    "display": "none"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "static",
                                                                    "content": "New Flow"
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            }
                                                        ],
                                                        "style": {
                                                            "display": "flex",
                                                            "alignItems": "center",
                                                            "gap": "8px"
                                                        }
                                                        }
                                                    }
                                                    ],
                                                    "style": {
                                                    "display": "flex",
                                                    "justifyContent": "space-between",
                                                    "alignItems": "center"
                                                    }
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "showSearchSection"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "computed",
                                        "id": "showMainContent"
                                        }
                                    }
                                    }
                                }
                                ],
                                "style": {
                                "width": "100%"
                                }
                            }
                            },
                            "stateDefinitions": {
                            "flowType": {
                                "type": "string",
                                "defaultValue": "flows"
                            },
                            "view": {
                                "type": "string",
                                "defaultValue": "grid"
                            },
                            "debouncedSearch": {
                                "type": "string",
                                "defaultValue": ""
                            },
                            "selectedFlows": {
                                "type": "array",
                                "defaultValue": []
                            },
                            "isDownloading": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "isDeleting": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "isMCPEnabled": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "tabTypes": {
                                "type": "array",
                                "defaultValue": ["components", "flows"]
                            }
                            },
                            "propDefinitions": {
                            "folderName": {
                                "type": "string",
                                "defaultValue": ""
                            },
                            "flowType": {
                                "type": "string",
                                "defaultValue": "flows"
                            },
                            "view": {
                                "type": "string",
                                "defaultValue": "grid"
                            },
                            "isEmptyFolder": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "selectedFlows": {
                                "type": "array",
                                "defaultValue": []
                            }
                            },
                            "compDefinitions": {
                            "showMainContent": {
                                "type": "boolean",
                                "content": "!$props.isEmptyFolder"
                            },
                            "showSearchSection": {
                                "type": "boolean",
                                "content": "$state.flowType !== 'mcp'"
                            },
                            "searchPlaceholder": {
                                "type": "string",
                                "content": "`Search ${$state.flowType}...`"
                            },
                            "isTabActive": {
                                "type": "boolean",
                                "content": "$state.flowType === $local.tabType"
                            },
                            "capitalizedTabType": {
                                "type": "string",
                                "content": "$local.tabType.charAt(0).toUpperCase() + $local.tabType.slice(1)"
                            },
                            "isViewActive": {
                                "type": "boolean",
                                "content": "$state.view === $local.type"
                            },
                            "hasBulkActions": {
                                "type": "boolean",
                                "content": "$state.selectedFlows.length > 0"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "primaryButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "$token-color-primary",
                                "color": "$token-color-primary-contrast",
                                "border": "none",
                                "borderRadius": "$token-border-radius-md",
                                "cursor": "pointer",
                                "fontSize": "$token-font-size-sm",
                                "fontWeight": "600",
                                "padding": "8px 16px",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "outlineButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "$token-color-surface",
                                "color": "$token-color-text-primary",
                                "border": "1px solid $token-color-border",
                                "borderRadius": "$token-border-radius-md",
                                "cursor": "pointer",
                                "fontSize": "$token-font-size-sm",
                                "padding": "8px 16px",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "destructiveButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "$token-color-destructive",
                                "color": "$token-color-destructive-contrast",
                                "border": "1px solid $token-color-destructive",
                                "borderRadius": "$token-border-radius-md",
                                "cursor": "pointer",
                                "fontSize": "$token-font-size-sm",
                                "padding": "8px 16px",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "inputField": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "100%",
                                "padding": "8px 12px",
                                "border": "1px solid $token-color-border",
                                "borderRadius": "$token-border-radius-md",
                                "fontSize": "$token-font-size-sm",
                                "backgroundColor": "$token-color-surface",
                                "color": "$token-color-text-primary"
                            }
                            },
                            "tabButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "background": "transparent",
                                "border": "none",
                                "borderBottom": "2px solid transparent",
                                "cursor": "pointer",
                                "fontSize": "$token-font-size-sm",
                                "fontWeight": "500",
                                "padding": "8px",
                                "transition": "all 0.2s ease",
                                "whiteSpace": "nowrap"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-primary-contrast": "#FFFFFF",
                                "token-color-secondary": "#6B7280",
                                "token-color-secondary-contrast": "#FFFFFF",
                                "token-color-destructive": "#EF4444",
                                "token-color-destructive-contrast": "#FFFFFF",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-muted": "#F3F4F6",
                                "token-color-border": "#E5E7EB",
                                "token-color-foreground": "#111827",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px"
                            },
                            "typography": {
                                "token-font-size-sm": "14px",
                                "token-font-size-md": "16px",
                                "token-font-size-lg": "18px"
                            },
                            "shadows": {
                                "token-shadow-md": "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)"
                            }
                            }
                        }
                        }
				},
				{
					"id": "notification_system",
					"type": "interface",
					"name": "NotificationSystem",
					"description": "Real-time notification display with toasts, badges, and persistent notification center",
					"component_path": "src/frontend/src/components/NotificationSystem",
					"uidl_definition_physical": {
                        "name": "NotificationSystem",
                        "globals": {
                            "settings": {
                            "title": "Notification System",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "NotificationSystem",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "notification-system-wrapper",
                                "children": [
                                {
                                    "type": "element",
                                    "content": {
                                    "elementType": "container",
                                    "name": "alert-display-area",
                                    "children": [
                                        {
                                        "type": "repeat",
                                        "content": {
                                            "node": {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "alert-item-wrapper",
                                                "children": [
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "error-alert",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "error-alert-content",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "error-icon-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "icon",
                                                                            "name": "error-alert-icon",
                                                                            "attrs": [
                                                                            {
                                                                                "type": "static",
                                                                                "name": "aria-hidden",
                                                                                "content": "true"
                                                                            }
                                                                            ],
                                                                            "style": {
                                                                            "width": "20px",
                                                                            "height": "20px",
                                                                            "color": "$token-color-error"
                                                                            }
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "flexShrink": "0"
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "error-message-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "text",
                                                                            "name": "error-alert-title",
                                                                            "style": {
                                                                            "fontSize": "$token-font-size-sm",
                                                                            "color": "$token-color-error-text",
                                                                            "fontWeight": "500",
                                                                            "lineHeight": "1.25",
                                                                            "display": "-webkit-box",
                                                                            "WebkitLineClamp": "2",
                                                                            "WebkitBoxOrient": "vertical",
                                                                            "overflow": "hidden"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "title"
                                                                            }
                                                                            }
                                                                        ]
                                                                        },
                                                                        {
                                                                        "type": "conditional",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "container",
                                                                                "name": "error-details-list",
                                                                                "children": [
                                                                                {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                    "elementType": "list",
                                                                                    "name": "error-list-items",
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "repeat",
                                                                                        "content": {
                                                                                            "node": {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "list-item",
                                                                                                "name": "error-list-item",
                                                                                                "children": [
                                                                                                {
                                                                                                    "type": "element",
                                                                                                    "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "error-item-content",
                                                                                                    "children": [
                                                                                                        {
                                                                                                        "type": "dynamic",
                                                                                                        "content": {
                                                                                                            "referenceType": "local",
                                                                                                            "id": "listItem"
                                                                                                        }
                                                                                                        }
                                                                                                    ],
                                                                                                    "style": {
                                                                                                        "wordBreak": "break-word"
                                                                                                    }
                                                                                                    }
                                                                                                }
                                                                                                ],
                                                                                                "style": {
                                                                                                "wordBreak": "break-word"
                                                                                                }
                                                                                            }
                                                                                            },
                                                                                            "dataSource": {
                                                                                            "type": "dynamic",
                                                                                            "content": {
                                                                                                "referenceType": "local",
                                                                                                "id": "list"
                                                                                            }
                                                                                            }
                                                                                        }
                                                                                        }
                                                                                    ],
                                                                                    "style": {
                                                                                        "listStyleType": "disc",
                                                                                        "paddingLeft": "20px",
                                                                                        "alignItems": "flex-start",
                                                                                        "gap": "4px"
                                                                                    }
                                                                                    }
                                                                                }
                                                                                ],
                                                                                "style": {
                                                                                "marginTop": "8px",
                                                                                "fontSize": "$token-font-size-sm",
                                                                                "color": "$token-color-error-text"
                                                                                }
                                                                            }
                                                                            },
                                                                            "reference": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "computed",
                                                                                "id": "hasErrorList"
                                                                            }
                                                                            }
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "marginLeft": "12px"
                                                                    }
                                                                    }
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex"
                                                                }
                                                            }
                                                            }
                                                        ],
                                                        "style": {
                                                            "width": "384px",
                                                            "marginTop": "24px",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "backgroundColor": "$token-color-error-background",
                                                            "padding": "16px",
                                                            "boxShadow": "$token-shadow-xl",
                                                            "cursor": "pointer",
                                                            "transform": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "slideAnimation",
                                                                "conditions": [
                                                                {
                                                                    "operand": "enter",
                                                                    "operation": "===",
                                                                    "value": "translateX(0)"
                                                                },
                                                                {
                                                                    "operand": "exit",
                                                                    "operation": "===",
                                                                    "value": "translateX(-100%)"
                                                                }
                                                                ],
                                                                "fallback": "translateX(-100%)"
                                                            }
                                                            },
                                                            "transition": "transform 0.5s ease-out"
                                                        }
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "local",
                                                        "id": "type",
                                                        "conditions": [
                                                            {
                                                            "operand": "error",
                                                            "operation": "===",
                                                            "value": true
                                                            }
                                                        ],
                                                        "fallback": false
                                                        }
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "success-alert",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "success-alert-content",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "success-icon-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "icon",
                                                                            "name": "success-alert-icon",
                                                                            "attrs": [
                                                                            {
                                                                                "type": "static",
                                                                                "name": "aria-hidden",
                                                                                "content": "true"
                                                                            }
                                                                            ],
                                                                            "style": {
                                                                            "width": "20px",
                                                                            "height": "20px",
                                                                            "color": "$token-color-success"
                                                                            }
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "flexShrink": "0"
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "success-message-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "text",
                                                                            "name": "success-alert-message",
                                                                            "style": {
                                                                            "fontSize": "$token-font-size-sm",
                                                                            "color": "$token-color-success-text",
                                                                            "display": "-webkit-box",
                                                                            "WebkitLineClamp": "2",
                                                                            "WebkitBoxOrient": "vertical",
                                                                            "overflow": "hidden"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "title"
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "marginLeft": "12px"
                                                                    }
                                                                    }
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex"
                                                                }
                                                            }
                                                            }
                                                        ],
                                                        "style": {
                                                            "width": "384px",
                                                            "marginTop": "24px",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "backgroundColor": "$token-color-success-background",
                                                            "padding": "16px",
                                                            "boxShadow": "$token-shadow-xl",
                                                            "cursor": "pointer",
                                                            "transform": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "slideAnimation",
                                                                "conditions": [
                                                                {
                                                                    "operand": "enter",
                                                                    "operation": "===",
                                                                    "value": "translateX(0)"
                                                                },
                                                                {
                                                                    "operand": "exit",
                                                                    "operation": "===",
                                                                    "value": "translateX(-100%)"
                                                                }
                                                                ],
                                                                "fallback": "translateX(-100%)"
                                                            }
                                                            },
                                                            "transition": "transform 0.5s ease-out"
                                                        }
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "local",
                                                        "id": "type",
                                                        "conditions": [
                                                            {
                                                            "operand": "success",
                                                            "operation": "===",
                                                            "value": true
                                                            }
                                                        ],
                                                        "fallback": false
                                                        }
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "conditional",
                                                    "content": {
                                                    "node": {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "notice-alert",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "notice-alert-content",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "notice-icon-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "icon",
                                                                            "name": "info-alert-icon",
                                                                            "attrs": [
                                                                            {
                                                                                "type": "static",
                                                                                "name": "aria-hidden",
                                                                                "content": "true"
                                                                            }
                                                                            ],
                                                                            "style": {
                                                                            "width": "20px",
                                                                            "height": "20px",
                                                                            "color": "$token-color-info",
                                                                            "cursor": "help"
                                                                            }
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "flexShrink": "0",
                                                                        "cursor": "help"
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "notice-content-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "text",
                                                                            "name": "notice-alert-message",
                                                                            "style": {
                                                                            "fontSize": "$token-font-size-sm",
                                                                            "color": "$token-color-info-text",
                                                                            "wordBreak": "break-word"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                                "referenceType": "local",
                                                                                "id": "title"
                                                                            }
                                                                            }
                                                                        ]
                                                                        },
                                                                        {
                                                                        "type": "conditional",
                                                                        "content": {
                                                                            "node": {
                                                                            "type": "element",
                                                                            "content": {
                                                                                "elementType": "link",
                                                                                "name": "notice-details-link",
                                                                                "attrs": [
                                                                                {
                                                                                    "type": "dynamic",
                                                                                    "name": "href",
                                                                                    "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "link"
                                                                                    }
                                                                                }
                                                                                ],
                                                                                "style": {
                                                                                "whiteSpace": "nowrap",
                                                                                "fontWeight": "500",
                                                                                "color": "$token-color-info-text",
                                                                                "textDecoration": "none",
                                                                                "fontSize": "$token-font-size-sm",
                                                                                "marginTop": "12px",
                                                                                "hover": {
                                                                                    "color": "$token-color-accent"
                                                                                }
                                                                                }
                                                                            },
                                                                            "children": [
                                                                                {
                                                                                "type": "static",
                                                                                "content": "Details"
                                                                                }
                                                                            ]
                                                                            }
                                                                        },
                                                                        "reference": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "computed",
                                                                            "id": "hasNoticeLink"
                                                                            }
                                                                        }
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "marginLeft": "12px",
                                                                        "flex": "1",
                                                                        "display": "flex",
                                                                        "flexDirection": "column",
                                                                        "justifyContent": "space-between"
                                                                    }
                                                                    }
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex"
                                                                }
                                                            }
                                                            }
                                                        ],
                                                        "style": {
                                                            "width": "384px",
                                                            "marginTop": "24px",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "backgroundColor": "$token-color-info-background",
                                                            "padding": "16px",
                                                            "boxShadow": "$token-shadow-xl",
                                                            "cursor": "pointer",
                                                            "transform": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "state",
                                                                "id": "slideAnimation",
                                                                "conditions": [
                                                                {
                                                                    "operand": "enter",
                                                                    "operation": "===",
                                                                    "value": "translateX(0)"
                                                                },
                                                                {
                                                                    "operand": "exit",
                                                                    "operation": "===",
                                                                    "value": "translateX(-100%)"
                                                                }
                                                                ],
                                                                "fallback": "translateX(-100%)"
                                                            }
                                                            },
                                                            "transition": "transform 0.5s ease-out"
                                                        }
                                                        }
                                                    },
                                                    "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "local",
                                                        "id": "type",
                                                        "conditions": [
                                                            {
                                                            "operand": "notice",
                                                            "operation": "===",
                                                            "value": true
                                                            }
                                                        ],
                                                        "fallback": false
                                                        }
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            },
                                            "dataSource": {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "state",
                                                "id": "tempNotificationList"
                                            }
                                            }
                                        }
                                        }
                                    ],
                                    "style": {
                                        "display": "flex",
                                        "flexDirection": "column-reverse",
                                        "position": "fixed",
                                        "top": "0",
                                        "left": "0",
                                        "zIndex": "999",
                                        "pointerEvents": "none"
                                    }
                                    }
                                },
                                {
                                    "type": "element",
                                    "content": {
                                    "elementType": "container",
                                    "name": "notification-dropdown-system",
                                    "children": [
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "container",
                                            "name": "notification-popover-trigger",
                                            "children": [
                                            {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "prop",
                                                "id": "children"
                                                }
                                            }
                                            ]
                                        }
                                        },
                                        {
                                        "type": "conditional",
                                        "content": {
                                            "node": {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "notification-dropdown-content",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "dropdown-header",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "text",
                                                            "name": "notifications-title",
                                                            "style": {
                                                            "fontSize": "$token-font-size-md",
                                                            "fontWeight": "500",
                                                            "color": "$token-color-text-primary",
                                                            "paddingLeft": "12px"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "static",
                                                            "content": "Notifications"
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "dropdown-header-actions",
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "button",
                                                                "name": "clear-all-notifications-button",
                                                                "style": {
                                                                    "color": "$token-color-text-secondary",
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "pointer",
                                                                    "padding": "4px",
                                                                    "borderRadius": "$token-border-radius-sm",
                                                                    "hover": {
                                                                    "color": "$token-color-destructive"
                                                                    }
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "icon",
                                                                    "name": "clear-notifications-icon",
                                                                    "style": {
                                                                        "width": "16px",
                                                                        "height": "16px"
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "button",
                                                                "name": "close-dropdown-button",
                                                                "style": {
                                                                    "color": "$token-color-text-primary",
                                                                    "opacity": "0.7",
                                                                    "background": "transparent",
                                                                    "border": "none",
                                                                    "cursor": "pointer",
                                                                    "padding": "4px",
                                                                    "borderRadius": "$token-border-radius-sm",
                                                                    "hover": {
                                                                    "opacity": "1"
                                                                    }
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "icon",
                                                                    "name": "close-dropdown-icon",
                                                                    "style": {
                                                                        "width": "16px",
                                                                        "height": "16px"
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            ],
                                                            "style": {
                                                            "display": "flex",
                                                            "gap": "12px",
                                                            "paddingRight": "12px"
                                                            }
                                                        }
                                                        }
                                                    ],
                                                    "style": {
                                                        "display": "flex",
                                                        "flexDirection": "row",
                                                        "justifyContent": "space-between"
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "notifications-list-container",
                                                    "children": [
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "node": {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "notifications-list",
                                                                "children": [
                                                                {
                                                                    "type": "repeat",
                                                                    "content": {
                                                                    "node": {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "container",
                                                                        "name": "single-notification-item",
                                                                        "children": [
                                                                            {
                                                                            "type": "conditional",
                                                                            "content": {
                                                                                "node": {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "error-notification-item",
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "error-item-icon-container",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "icon",
                                                                                                "name": "error-notification-icon",
                                                                                                "style": {
                                                                                                "width": "20px",
                                                                                                "height": "20px",
                                                                                                "color": "$token-color-error"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "flexShrink": "0"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "error-item-content",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "error-notification-title",
                                                                                                "style": {
                                                                                                "fontSize": "$token-font-size-sm",
                                                                                                "fontWeight": "500",
                                                                                                "color": "$token-color-error-text",
                                                                                                "wordBreak": "break-word"
                                                                                                }
                                                                                            },
                                                                                            "children": [
                                                                                                {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "title"
                                                                                                }
                                                                                                }
                                                                                            ]
                                                                                            },
                                                                                            {
                                                                                            "type": "conditional",
                                                                                            "content": {
                                                                                                "node": {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "container",
                                                                                                    "name": "error-notification-details",
                                                                                                    "children": [
                                                                                                    {
                                                                                                        "type": "element",
                                                                                                        "content": {
                                                                                                        "elementType": "list",
                                                                                                        "name": "error-notification-list",
                                                                                                        "children": [
                                                                                                            {
                                                                                                            "type": "repeat",
                                                                                                            "content": {
                                                                                                                "node": {
                                                                                                                "type": "element",
                                                                                                                "content": {
                                                                                                                    "elementType": "list-item",
                                                                                                                    "name": "error-notification-list-item",
                                                                                                                    "children": [
                                                                                                                    {
                                                                                                                        "type": "dynamic",
                                                                                                                        "content": {
                                                                                                                        "referenceType": "local",
                                                                                                                        "id": "listItem"
                                                                                                                        }
                                                                                                                    }
                                                                                                                    ],
                                                                                                                    "style": {
                                                                                                                    "wordBreak": "break-word"
                                                                                                                    }
                                                                                                                }
                                                                                                                },
                                                                                                                "dataSource": {
                                                                                                                "type": "dynamic",
                                                                                                                "content": {
                                                                                                                    "referenceType": "local",
                                                                                                                    "id": "list"
                                                                                                                }
                                                                                                                }
                                                                                                            }
                                                                                                            }
                                                                                                        ],
                                                                                                        "style": {
                                                                                                            "listStyleType": "disc",
                                                                                                            "paddingLeft": "20px",
                                                                                                            "gap": "4px",
                                                                                                            "alignItems": "flex-start"
                                                                                                        }
                                                                                                        }
                                                                                                    }
                                                                                                    ],
                                                                                                    "style": {
                                                                                                    "marginTop": "8px",
                                                                                                    "fontSize": "$token-font-size-sm",
                                                                                                    "color": "$token-color-error-text"
                                                                                                    }
                                                                                                }
                                                                                                },
                                                                                                "reference": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "computed",
                                                                                                    "id": "hasErrorList"
                                                                                                }
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "marginLeft": "12px"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "error-item-dismiss-container",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "button",
                                                                                                "name": "dismiss-error-notification-button",
                                                                                                "style": {
                                                                                                "display": "inline-flex",
                                                                                                "borderRadius": "$token-border-radius-md",
                                                                                                "padding": "6px",
                                                                                                "color": "$token-color-error",
                                                                                                "background": "transparent",
                                                                                                "border": "none",
                                                                                                "cursor": "pointer"
                                                                                                }
                                                                                            },
                                                                                            "children": [
                                                                                                {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "text",
                                                                                                    "name": "dismiss-screen-reader-text",
                                                                                                    "style": {
                                                                                                    "position": "absolute",
                                                                                                    "width": "1px",
                                                                                                    "height": "1px",
                                                                                                    "padding": "0",
                                                                                                    "margin": "-1px",
                                                                                                    "overflow": "hidden",
                                                                                                    "clip": "rect(0, 0, 0, 0)",
                                                                                                    "whiteSpace": "nowrap",
                                                                                                    "border": "0"
                                                                                                    }
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "static",
                                                                                                    "content": "Dismiss"
                                                                                                    }
                                                                                                ]
                                                                                                },
                                                                                                {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "icon",
                                                                                                    "name": "dismiss-error-icon",
                                                                                                    "style": {
                                                                                                    "width": "16px",
                                                                                                    "height": "16px",
                                                                                                    "color": "$token-color-error-text"
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                            ]
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "marginLeft": "auto",
                                                                                            "paddingLeft": "12px"
                                                                                        }
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "style": {
                                                                                    "margin": "8px",
                                                                                    "marginBottom": "8px",
                                                                                    "display": "flex",
                                                                                    "borderRadius": "$token-border-radius-md",
                                                                                    "backgroundColor": "$token-color-error-background",
                                                                                    "padding": "12px"
                                                                                    }
                                                                                }
                                                                                },
                                                                                "reference": {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "type",
                                                                                    "conditions": [
                                                                                    {
                                                                                        "operand": "error",
                                                                                        "operation": "===",
                                                                                        "value": true
                                                                                    }
                                                                                    ],
                                                                                    "fallback": false
                                                                                }
                                                                                }
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "conditional",
                                                                            "content": {
                                                                                "node": {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "success-notification-item",
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "success-item-icon-container",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "icon",
                                                                                                "name": "success-notification-icon",
                                                                                                "style": {
                                                                                                "width": "20px",
                                                                                                "height": "20px",
                                                                                                "color": "$token-color-success"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "flexShrink": "0"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "success-item-content",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "success-notification-title",
                                                                                                "style": {
                                                                                                "fontSize": "$token-font-size-sm",
                                                                                                "fontWeight": "500",
                                                                                                "color": "$token-color-success-text"
                                                                                                }
                                                                                            },
                                                                                            "children": [
                                                                                                {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "title"
                                                                                                }
                                                                                                }
                                                                                            ]
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "marginLeft": "12px"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "success-item-dismiss-container",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "button",
                                                                                                "name": "dismiss-success-notification-button",
                                                                                                "style": {
                                                                                                "display": "inline-flex",
                                                                                                "borderRadius": "$token-border-radius-md",
                                                                                                "padding": "6px",
                                                                                                "color": "$token-color-success",
                                                                                                "background": "transparent",
                                                                                                "border": "none",
                                                                                                "cursor": "pointer"
                                                                                                }
                                                                                            },
                                                                                            "children": [
                                                                                                {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "text",
                                                                                                    "name": "dismiss-success-screen-reader-text",
                                                                                                    "style": {
                                                                                                    "position": "absolute",
                                                                                                    "width": "1px",
                                                                                                    "height": "1px",
                                                                                                    "padding": "0",
                                                                                                    "margin": "-1px",
                                                                                                    "overflow": "hidden",
                                                                                                    "clip": "rect(0, 0, 0, 0)",
                                                                                                    "whiteSpace": "nowrap",
                                                                                                    "border": "0"
                                                                                                    }
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "static",
                                                                                                    "content": "Dismiss"
                                                                                                    }
                                                                                                ]
                                                                                                },
                                                                                                {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "icon",
                                                                                                    "name": "dismiss-success-icon",
                                                                                                    "style": {
                                                                                                    "width": "16px",
                                                                                                    "height": "16px",
                                                                                                    "color": "$token-color-success-text"
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                            ]
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "marginLeft": "auto",
                                                                                            "paddingLeft": "12px"
                                                                                        }
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "style": {
                                                                                    "margin": "8px",
                                                                                    "marginBottom": "8px",
                                                                                    "display": "flex",
                                                                                    "borderRadius": "$token-border-radius-md",
                                                                                    "backgroundColor": "$token-color-success-background",
                                                                                    "padding": "12px"
                                                                                    }
                                                                                }
                                                                                },
                                                                                "reference": {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "type",
                                                                                    "conditions": [
                                                                                    {
                                                                                        "operand": "success",
                                                                                        "operation": "===",
                                                                                        "value": true
                                                                                    }
                                                                                    ],
                                                                                    "fallback": false
                                                                                }
                                                                                }
                                                                            }
                                                                            },
                                                                            {
                                                                            "type": "conditional",
                                                                            "content": {
                                                                                "node": {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "container",
                                                                                    "name": "notice-notification-item",
                                                                                    "children": [
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "notice-item-icon-container",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "icon",
                                                                                                "name": "info-notification-icon",
                                                                                                "style": {
                                                                                                "width": "20px",
                                                                                                "height": "20px",
                                                                                                "color": "$token-color-info",
                                                                                                "cursor": "help"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "flexShrink": "0",
                                                                                            "cursor": "help"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "notice-item-content-wrapper",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "text",
                                                                                                "name": "notice-notification-title",
                                                                                                "style": {
                                                                                                "fontSize": "$token-font-size-sm",
                                                                                                "fontWeight": "500",
                                                                                                "color": "$token-color-info-text"
                                                                                                }
                                                                                            },
                                                                                            "children": [
                                                                                                {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                    "referenceType": "local",
                                                                                                    "id": "title"
                                                                                                }
                                                                                                }
                                                                                            ]
                                                                                            },
                                                                                            {
                                                                                            "type": "conditional",
                                                                                            "content": {
                                                                                                "node": {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "link",
                                                                                                    "name": "notice-notification-details-link",
                                                                                                    "attrs": [
                                                                                                    {
                                                                                                        "type": "dynamic",
                                                                                                        "name": "href",
                                                                                                        "content": {
                                                                                                        "referenceType": "local",
                                                                                                        "id": "link"
                                                                                                        }
                                                                                                    }
                                                                                                    ],
                                                                                                    "style": {
                                                                                                    "whiteSpace": "nowrap",
                                                                                                    "fontWeight": "500",
                                                                                                    "color": "$token-color-info-text",
                                                                                                    "textDecoration": "none",
                                                                                                    "fontSize": "$token-font-size-sm",
                                                                                                    "marginTop": "12px",
                                                                                                    "hover": {
                                                                                                        "color": "$token-color-accent"
                                                                                                    }
                                                                                                    }
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "static",
                                                                                                    "content": "Details"
                                                                                                    }
                                                                                                ]
                                                                                                }
                                                                                            },
                                                                                            "reference": {
                                                                                                "type": "dynamic",
                                                                                                "content": {
                                                                                                "referenceType": "computed",
                                                                                                "id": "hasNoticeLink"
                                                                                                }
                                                                                            }
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "marginLeft": "12px",
                                                                                            "flex": "1",
                                                                                            "display": "flex",
                                                                                            "flexDirection": "column",
                                                                                            "justifyContent": "space-between"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "type": "element",
                                                                                        "content": {
                                                                                        "elementType": "container",
                                                                                        "name": "notice-item-dismiss-container",
                                                                                        "children": [
                                                                                            {
                                                                                            "type": "element",
                                                                                            "content": {
                                                                                                "elementType": "button",
                                                                                                "name": "dismiss-notice-notification-button",
                                                                                                "style": {
                                                                                                "display": "inline-flex",
                                                                                                "borderRadius": "$token-border-radius-md",
                                                                                                "padding": "6px",
                                                                                                "color": "$token-color-info-text",
                                                                                                "background": "transparent",
                                                                                                "border": "none",
                                                                                                "cursor": "pointer"
                                                                                                }
                                                                                            },
                                                                                            "children": [
                                                                                                {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "text",
                                                                                                    "name": "dismiss-notice-screen-reader-text",
                                                                                                    "style": {
                                                                                                    "position": "absolute",
                                                                                                    "width": "1px",
                                                                                                    "height": "1px",
                                                                                                    "padding": "0",
                                                                                                    "margin": "-1px",
                                                                                                    "overflow": "hidden",
                                                                                                    "clip": "rect(0, 0, 0, 0)",
                                                                                                    "whiteSpace": "nowrap",
                                                                                                    "border": "0"
                                                                                                    }
                                                                                                },
                                                                                                "children": [
                                                                                                    {
                                                                                                    "type": "static",
                                                                                                    "content": "Dismiss"
                                                                                                    }
                                                                                                ]
                                                                                                },
                                                                                                {
                                                                                                "type": "element",
                                                                                                "content": {
                                                                                                    "elementType": "icon",
                                                                                                    "name": "dismiss-notice-icon",
                                                                                                    "style": {
                                                                                                    "width": "16px",
                                                                                                    "height": "16px",
                                                                                                    "color": "$token-color-info-text"
                                                                                                    }
                                                                                                }
                                                                                                }
                                                                                            ]
                                                                                            }
                                                                                        ],
                                                                                        "style": {
                                                                                            "marginLeft": "auto",
                                                                                            "paddingLeft": "12px"
                                                                                        }
                                                                                        }
                                                                                    }
                                                                                    ],
                                                                                    "style": {
                                                                                    "margin": "8px",
                                                                                    "marginBottom": "8px",
                                                                                    "display": "flex",
                                                                                    "borderRadius": "$token-border-radius-md",
                                                                                    "backgroundColor": "$token-color-info-background",
                                                                                    "padding": "12px"
                                                                                    }
                                                                                }
                                                                                },
                                                                                "reference": {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "type",
                                                                                    "conditions": [
                                                                                    {
                                                                                        "operand": "notice",
                                                                                        "operation": "===",
                                                                                        "value": true
                                                                                    }
                                                                                    ],
                                                                                    "fallback": false
                                                                                }
                                                                                }
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    "dataSource": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "notificationList"
                                                                        }
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "computed",
                                                                "id": "hasNotifications"
                                                            }
                                                            }
                                                        }
                                                        },
                                                        {
                                                        "type": "conditional",
                                                        "content": {
                                                            "node": {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "no-notifications-message",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "zero-notifications-text",
                                                                    "style": {
                                                                        "color": "$token-color-text-disabled",
                                                                        "textAlign": "center"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "No notifications"
                                                                    }
                                                                    ]
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex",
                                                                "height": "100%",
                                                                "width": "100%",
                                                                "alignItems": "center",
                                                                "justifyContent": "center",
                                                                "paddingBottom": "64px"
                                                                }
                                                            }
                                                            },
                                                            "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "computed",
                                                                "id": "hasNoNotifications"
                                                            }
                                                            }
                                                        }
                                                        }
                                                    ],
                                                    "style": {
                                                        "marginTop": "12px",
                                                        "display": "flex",
                                                        "height": "100%",
                                                        "width": "100%",
                                                        "flexDirection": "column",
                                                        "overflowY": "scroll",
                                                        "scrollbarWidth": "none",
                                                        "msOverflowStyle": "none"
                                                    }
                                                    }
                                                }
                                                ],
                                                "style": {
                                                "zIndex": "50",
                                                "display": "flex",
                                                "height": "500px",
                                                "width": "500px",
                                                "flexDirection": "column",
                                                "backgroundColor": "$token-color-surface",
                                                "border": "1px solid $token-color-border",
                                                "borderRadius": "$token-border-radius-lg",
                                                "boxShadow": "$token-shadow-xl",
                                                "padding": "16px"
                                                }
                                            }
                                            },
                                            "reference": {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "state",
                                                "id": "dropdownOpen"
                                            }
                                            }
                                        }
                                        }
                                    ]
                                    }
                                }
                                ]
                            }
                            },
                            "stateDefinitions": {
                            "tempNotificationList": {
                                "type": "array",
                                "defaultValue": []
                            },
                            "notificationList": {
                                "type": "array",
                                "defaultValue": []
                            },
                            "dropdownOpen": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "slideAnimation": {
                                "type": "string",
                                "defaultValue": "enter"
                            },
                            "notificationCenter": {
                                "type": "boolean",
                                "defaultValue": false
                            }
                            },
                            "propDefinitions": {
                            "children": {
                                "type": "element",
                                "defaultValue": null
                            },
                            "notificationRef": {
                                "type": "object",
                                "defaultValue": null
                            },
                            "onClose": {
                                "type": "function",
                                "defaultValue": null
                            }
                            },
                            "compDefinitions": {
                            "hasErrorList": {
                                "type": "boolean",
                                "content": "$local.list && $local.list.length !== 0 && $local.list.some(item => item !== null && item !== undefined)"
                            },
                            "hasNoticeLink": {
                                "type": "boolean",
                                "content": "$local.link && $local.link !== ''"
                            },
                            "hasNotifications": {
                                "type": "boolean",
                                "content": "$state.notificationList.length !== 0"
                            },
                            "hasNoNotifications": {
                                "type": "boolean",
                                "content": "$state.notificationList.length === 0"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "alertContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "384px",
                                "marginTop": "24px",
                                "borderRadius": "$token-border-radius-md",
                                "padding": "16px",
                                "boxShadow": "$token-shadow-xl",
                                "cursor": "pointer",
                                "transition": "transform 0.5s ease-out"
                            }
                            },
                            "alertContent": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex"
                            }
                            },
                            "alertIcon": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "20px",
                                "height": "20px",
                                "flexShrink": "0"
                            }
                            },
                            "alertMessage": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "marginLeft": "12px",
                                "fontSize": "$token-font-size-sm"
                            }
                            },
                            "dropdownButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "background": "transparent",
                                "border": "none",
                                "cursor": "pointer",
                                "padding": "4px",
                                "borderRadius": "$token-border-radius-sm"
                            }
                            },
                            "dismissButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "inline-flex",
                                "borderRadius": "$token-border-radius-md",
                                "padding": "6px",
                                "background": "transparent",
                                "border": "none",
                                "cursor": "pointer"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-secondary": "#6B7280",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-border": "#E5E7EB",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF",
                                "token-color-error": "#EF4444",
                                "token-color-error-background": "#FEF2F2",
                                "token-color-error-text": "#7F1D1D",
                                "token-color-success": "#22C55E",
                                "token-color-success-background": "#F0FDF4",
                                "token-color-success-text": "#15803D",
                                "token-color-info": "#3B82F6",
                                "token-color-info-background": "#EFF6FF",
                                "token-color-info-text": "#1E40AF",
                                "token-color-destructive": "#EF4444",
                                "token-color-accent": "#8B5CF6"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px"
                            },
                            "typography": {
                                "token-font-size-sm": "14px",
                                "token-font-size-md": "16px",
                                "token-font-size-lg": "18px"
                            },
                            "shadows": {
                                "token-shadow-md": "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
                                "token-shadow-xl": "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)"
                            }
                            }
                        }
                        }
				},
				{
					"id": "error_boundary",
					"type": "interface",
					"name": "ErrorBoundary",
					"description": "Application-wide error handling with user-friendly error displays and recovery options",
					"component_path": "src/frontend/src/components/ErrorBoundary",
					"uidl_definition_physical": {
                        "name": "ErrorBoundary",
                        "globals": {
                            "settings": {
                            "title": "Error Boundary System",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "ErrorBoundary",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "error-boundary-wrapper",
                                "children": [
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "crash-error-display",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "crash-error-overlay",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "crash-error-background",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "crash-error-container",
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "content": {
                                                                "elementType": "container",
                                                                "name": "crash-error-card",
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "crash-error-header",
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "crash-error-icon-container",
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "icon",
                                                                                    "name": "crash-error-x-circle-icon",
                                                                                    "style": {
                                                                                    "width": "64px",
                                                                                    "height": "64px",
                                                                                    "color": "$token-color-error",
                                                                                    "strokeWidth": "1.5"
                                                                                    }
                                                                                }
                                                                                }
                                                                            ],
                                                                            "style": {
                                                                                "margin": "0 auto"
                                                                            }
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "crash-error-title-container",
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "text",
                                                                                    "name": "crash-error-title-message",
                                                                                    "style": {
                                                                                    "marginBottom": "16px",
                                                                                    "fontSize": "$token-font-size-xl",
                                                                                    "color": "$token-color-text-primary"
                                                                                    }
                                                                                },
                                                                                "children": [
                                                                                    {
                                                                                    "type": "static",
                                                                                    "content": "Sorry, we found an unexpected error!"
                                                                                    }
                                                                                ]
                                                                                }
                                                                            ]
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "crash-error-content",
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "crash-error-description",
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "text",
                                                                                    "name": "crash-error-description-text",
                                                                                    "style": {
                                                                                    "color": "$token-color-text-primary",
                                                                                    "lineHeight": "1.5"
                                                                                    }
                                                                                },
                                                                                "children": [
                                                                                    {
                                                                                    "type": "static",
                                                                                    "content": "Please report errors with detailed tracebacks on the "
                                                                                    },
                                                                                    {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                        "elementType": "link",
                                                                                        "name": "github-issues-link",
                                                                                        "attrs": [
                                                                                        {
                                                                                            "type": "static",
                                                                                            "name": "href",
                                                                                            "content": "https://github.com/langflow-ai/langflow/issues"
                                                                                        },
                                                                                        {
                                                                                            "type": "static",
                                                                                            "name": "target",
                                                                                            "content": "_blank"
                                                                                        },
                                                                                        {
                                                                                            "type": "static",
                                                                                            "name": "rel",
                                                                                            "content": "noopener noreferrer"
                                                                                        }
                                                                                        ],
                                                                                        "style": {
                                                                                        "fontWeight": "500",
                                                                                        "color": "$token-color-primary",
                                                                                        "textDecoration": "none",
                                                                                        "hover": {
                                                                                            "textDecoration": "underline"
                                                                                        }
                                                                                        }
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "GitHub Issues"
                                                                                        }
                                                                                    ]
                                                                                    },
                                                                                    {
                                                                                    "type": "static",
                                                                                    "content": " page."
                                                                                    },
                                                                                    {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                        "elementType": "line-break",
                                                                                        "name": "error-description-line-break"
                                                                                    }
                                                                                    },
                                                                                    {
                                                                                    "type": "static",
                                                                                    "content": "Thank you!"
                                                                                    }
                                                                                ]
                                                                                }
                                                                            ]
                                                                            }
                                                                        }
                                                                        ],
                                                                        "style": {
                                                                        "display": "grid"
                                                                        }
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "content": {
                                                                        "elementType": "container",
                                                                        "name": "crash-error-footer",
                                                                        "children": [
                                                                        {
                                                                            "type": "element",
                                                                            "content": {
                                                                            "elementType": "container",
                                                                            "name": "crash-error-actions-container",
                                                                            "children": [
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "button",
                                                                                    "name": "restart-langflow-button",
                                                                                    "style": {
                                                                                    "backgroundColor": "$token-color-primary",
                                                                                    "color": "$token-color-primary-contrast",
                                                                                    "padding": "8px 16px",
                                                                                    "borderRadius": "$token-border-radius-md",
                                                                                    "border": "none",
                                                                                    "cursor": "pointer",
                                                                                    "fontSize": "$token-font-size-sm",
                                                                                    "fontWeight": "500",
                                                                                    "transition": "all 0.2s ease"
                                                                                    }
                                                                                },
                                                                                "children": [
                                                                                    {
                                                                                    "type": "static",
                                                                                    "content": "Restart Langflow"
                                                                                    }
                                                                                ]
                                                                                },
                                                                                {
                                                                                "type": "element",
                                                                                "content": {
                                                                                    "elementType": "link",
                                                                                    "name": "report-github-link-wrapper",
                                                                                    "attrs": [
                                                                                    {
                                                                                        "type": "static",
                                                                                        "name": "href",
                                                                                        "content": "https://github.com/langflow-ai/langflow/issues/new"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "name": "target",
                                                                                        "content": "_blank"
                                                                                    },
                                                                                    {
                                                                                        "type": "static",
                                                                                        "name": "rel",
                                                                                        "content": "noopener noreferrer"
                                                                                    }
                                                                                    ],
                                                                                    "style": {
                                                                                    "textDecoration": "none"
                                                                                    }
                                                                                },
                                                                                "children": [
                                                                                    {
                                                                                    "type": "element",
                                                                                    "content": {
                                                                                        "elementType": "button",
                                                                                        "name": "report-on-github-button",
                                                                                        "style": {
                                                                                        "marginLeft": "12px",
                                                                                        "backgroundColor": "transparent",
                                                                                        "color": "$token-color-text-primary",
                                                                                        "padding": "8px 16px",
                                                                                        "borderRadius": "$token-border-radius-md",
                                                                                        "border": "1px solid $token-color-border",
                                                                                        "cursor": "pointer",
                                                                                        "fontSize": "$token-font-size-sm",
                                                                                        "fontWeight": "500",
                                                                                        "transition": "all 0.2s ease"
                                                                                        }
                                                                                    },
                                                                                    "children": [
                                                                                        {
                                                                                        "type": "static",
                                                                                        "content": "Report on GitHub"
                                                                                        }
                                                                                    ]
                                                                                    }
                                                                                ]
                                                                                }
                                                                            ],
                                                                            "style": {
                                                                                "margin": "0 auto",
                                                                                "marginTop": "16px",
                                                                                "display": "flex",
                                                                                "justifyContent": "center"
                                                                            }
                                                                            }
                                                                        }
                                                                        ]
                                                                    }
                                                                    }
                                                                ],
                                                                "style": {
                                                                    "padding": "32px",
                                                                    "backgroundColor": "$token-color-surface",
                                                                    "borderRadius": "$token-border-radius-lg",
                                                                    "border": "1px solid $token-color-border",
                                                                    "boxShadow": "$token-shadow-lg"
                                                                }
                                                                }
                                                            }
                                                            ],
                                                            "style": {
                                                            "margin": "auto",
                                                            "display": "grid",
                                                            "width": "50%",
                                                            "justifyContent": "center",
                                                            "gap": "20px",
                                                            "textAlign": "center"
                                                            }
                                                        }
                                                        }
                                                    ],
                                                    "style": {
                                                        "display": "flex",
                                                        "height": "100vh",
                                                        "width": "100vw",
                                                        "flexDirection": "column",
                                                        "backgroundColor": "$token-color-background",
                                                        "textAlign": "start",
                                                        "boxShadow": "$token-shadow-lg"
                                                    }
                                                    }
                                                }
                                                ],
                                                "style": {
                                                "zIndex": "50",
                                                "display": "flex",
                                                "height": "100vh",
                                                "width": "100vw",
                                                "alignItems": "center",
                                                "justifyContent": "center",
                                                "backgroundColor": "rgba(0, 0, 0, 0.5)",
                                                "position": "fixed",
                                                "top": "0",
                                                "left": "0"
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "hasError"
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "generic-error-display",
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "server-error-modal",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "server-error-modal-content",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "server-error-content",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "server-error-message",
                                                                    "style": {
                                                                        "fontSize": "$token-font-size-lg",
                                                                        "color": "$token-color-primary",
                                                                        "textAlign": "center",
                                                                        "marginBottom": "8px"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "errorMessage"
                                                                        }
                                                                    }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "server-error-description",
                                                                    "style": {
                                                                        "textAlign": "center",
                                                                        "fontSize": "$token-font-size-lg",
                                                                        "color": "$token-color-primary"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "errorDescription"
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "alignItems": "center",
                                                                "margin": "0 auto"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ],
                                                    "style": {
                                                    "position": "fixed",
                                                    "top": "0",
                                                    "left": "0",
                                                    "width": "100vw",
                                                    "height": "100vh",
                                                    "backgroundColor": "rgba(0, 0, 0, 0.5)",
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "justifyContent": "center",
                                                    "zIndex": "1000"
                                                    }
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "errorType",
                                                    "conditions": [
                                                    {
                                                        "operand": "serverDown",
                                                        "operation": "===",
                                                        "value": true
                                                    }
                                                    ],
                                                    "fallback": false
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "timeout-error-modal",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "timeout-error-modal-content",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "timeout-error-content",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "timeout-loading-container",
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "content": {
                                                                            "elementType": "container",
                                                                            "name": "timeout-loading-spinner",
                                                                            "style": {
                                                                            "width": "64px",
                                                                            "height": "64px",
                                                                            "border": "4px solid $token-color-border",
                                                                            "borderTop": "4px solid $token-color-primary",
                                                                            "borderRadius": "50%",
                                                                            "animation": "spin 1s linear infinite",
                                                                            "marginBottom": "16px"
                                                                            }
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "timeout-error-message",
                                                                    "style": {
                                                                        "fontSize": "$token-font-size-lg",
                                                                        "color": "$token-color-primary",
                                                                        "textAlign": "center",
                                                                        "marginBottom": "8px"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "timeoutMessage"
                                                                        }
                                                                    }
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "text",
                                                                    "name": "timeout-error-description",
                                                                    "style": {
                                                                        "textAlign": "center",
                                                                        "fontSize": "$token-font-size-lg",
                                                                        "color": "$token-color-primary"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "timeoutDescription"
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                ],
                                                                "style": {
                                                                "display": "flex",
                                                                "flexDirection": "column",
                                                                "alignItems": "center",
                                                                "margin": "0 auto"
                                                                }
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ],
                                                    "style": {
                                                    "position": "fixed",
                                                    "top": "0",
                                                    "left": "0",
                                                    "width": "100vw",
                                                    "height": "100vh",
                                                    "backgroundColor": "rgba(0, 0, 0, 0.5)",
                                                    "display": "flex",
                                                    "alignItems": "center",
                                                    "justifyContent": "center",
                                                    "zIndex": "1000"
                                                    }
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "errorType",
                                                    "conditions": [
                                                    {
                                                        "operand": "timeout",
                                                        "operation": "===",
                                                        "value": true
                                                    }
                                                    ],
                                                    "fallback": false
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "computed",
                                        "id": "hasGenericError"
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "normal-app-content",
                                        "children": [
                                            {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "prop",
                                                "id": "children"
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "computed",
                                        "id": "showNormalContent"
                                        }
                                    }
                                    }
                                }
                                ],
                                "style": {
                                "display": "flex",
                                "height": "100%",
                                "width": "100%",
                                "flexDirection": "column"
                                }
                            }
                            },
                            "stateDefinitions": {
                            "hasError": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "error": {
                                "type": "object",
                                "defaultValue": null
                            },
                            "errorInfo": {
                                "type": "object",
                                "defaultValue": null
                            },
                            "errorType": {
                                "type": "string",
                                "defaultValue": null
                            },
                            "errorMessage": {
                                "type": "string",
                                "defaultValue": "Connection Error"
                            },
                            "errorDescription": {
                                "type": "string",
                                "defaultValue": "Unable to connect to the server. Please check your connection and try again."
                            },
                            "timeoutMessage": {
                                "type": "string",
                                "defaultValue": "Loading..."
                            },
                            "timeoutDescription": {
                                "type": "string",
                                "defaultValue": "This is taking longer than expected. Please wait while we establish a connection."
                            },
                            "healthCheckTimeout": {
                                "type": "string",
                                "defaultValue": null
                            },
                            "fetchingHealth": {
                                "type": "boolean",
                                "defaultValue": false
                            }
                            },
                            "propDefinitions": {
                            "children": {
                                "type": "element",
                                "defaultValue": null
                            },
                            "onReset": {
                                "type": "function",
                                "defaultValue": null
                            },
                            "retry": {
                                "type": "function",
                                "defaultValue": null
                            }
                            },
                            "compDefinitions": {
                            "hasGenericError": {
                                "type": "boolean",
                                "content": "$state.errorType === 'serverDown' || $state.errorType === 'timeout'"
                            },
                            "showNormalContent": {
                                "type": "boolean",
                                "content": "!$state.hasError && !$computed.hasGenericError"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "primaryButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "$token-color-primary",
                                "color": "$token-color-primary-contrast",
                                "padding": "8px 16px",
                                "borderRadius": "$token-border-radius-md",
                                "border": "none",
                                "cursor": "pointer",
                                "fontSize": "$token-font-size-sm",
                                "fontWeight": "500",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "outlineButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "backgroundColor": "transparent",
                                "color": "$token-color-text-primary",
                                "padding": "8px 16px",
                                "borderRadius": "$token-border-radius-md",
                                "border": "1px solid $token-color-border",
                                "cursor": "pointer",
                                "fontSize": "$token-font-size-sm",
                                "fontWeight": "500",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "errorCard": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "padding": "32px",
                                "backgroundColor": "$token-color-surface",
                                "borderRadius": "$token-border-radius-lg",
                                "border": "1px solid $token-color-border",
                                "boxShadow": "$token-shadow-lg",
                                "textAlign": "center"
                            }
                            },
                            "errorOverlay": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "position": "fixed",
                                "top": "0",
                                "left": "0",
                                "width": "100vw",
                                "height": "100vh",
                                "backgroundColor": "rgba(0, 0, 0, 0.5)",
                                "display": "flex",
                                "alignItems": "center",
                                "justifyContent": "center",
                                "zIndex": "1000"
                            }
                            },
                            "loadingSpinner": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "64px",
                                "height": "64px",
                                "border": "4px solid $token-color-border",
                                "borderTop": "4px solid $token-color-primary",
                                "borderRadius": "50%",
                                "animation": "spin 1s linear infinite"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-primary-contrast": "#FFFFFF",
                                "token-color-secondary": "#6B7280",
                                "token-color-error": "#EF4444",
                                "token-color-error-background": "#FEF2F2",
                                "token-color-success": "#22C55E",
                                "token-color-warning": "#F59E0B",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-border": "#E5E7EB",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px",
                                "token-border-radius-xl": "12px"
                            },
                            "typography": {
                                "token-font-size-sm": "14px",
                                "token-font-size-md": "16px",
                                "token-font-size-lg": "18px",
                                "token-font-size-xl": "20px"
                            },
                            "shadows": {
                                "token-shadow-sm": "0 1px 2px 0 rgba(0, 0, 0, 0.05)",
                                "token-shadow-md": "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
                                "token-shadow-lg": "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)",
                                "token-shadow-xl": "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)"
                            }
                            }
                        }
                        }
				},
				{
					"id": "loading_states",
					"type": "interface",
					"name": "LoadingStates",
					"description": "Comprehensive loading state management with skeletons, spinners, and progress indicators",
					"component_path": "src/frontend/src/components/LoadingStates",
					"uidl_definition_physical": {
                        "name": "LoadingStates",
                        "globals": {
                            "settings": {
                            "title": "Loading States System",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "LoadingStates",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "loading-states-wrapper",
                                "children": [
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "animated-spinner-loading",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "svg",
                                                "name": "circular-loading-spinner",
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "name": "xmlns",
                                                    "content": "http://www.w3.org/2000/svg"
                                                },
                                                {
                                                    "type": "dynamic",
                                                    "name": "width",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "size",
                                                    "fallback": 24
                                                    }
                                                },
                                                {
                                                    "type": "dynamic",
                                                    "name": "height",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "size",
                                                    "fallback": 24
                                                    }
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "viewBox",
                                                    "content": "0 0 24 24"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "fill",
                                                    "content": "none"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "stroke",
                                                    "content": "currentColor"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "stroke-width",
                                                    "content": "2"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "stroke-linecap",
                                                    "content": "round"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "stroke-linejoin",
                                                    "content": "round"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "data-testid",
                                                    "content": "loading-icon"
                                                }
                                                ],
                                                "style": {
                                                "color": "currentColor"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "circle",
                                                    "name": "animated-loading-circle",
                                                    "attrs": [
                                                    {
                                                        "type": "static",
                                                        "name": "cx",
                                                        "content": "12"
                                                    },
                                                    {
                                                        "type": "static",
                                                        "name": "cy",
                                                        "content": "12"
                                                    },
                                                    {
                                                        "type": "static",
                                                        "name": "r",
                                                        "content": "10"
                                                    },
                                                    {
                                                        "type": "static",
                                                        "name": "stroke-dasharray",
                                                        "content": "63"
                                                    },
                                                    {
                                                        "type": "static",
                                                        "name": "stroke-dashoffset",
                                                        "content": "21"
                                                    }
                                                    ]
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "animateTransform",
                                                        "name": "rotate-animation",
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "name": "attributeName",
                                                            "content": "transform"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "type",
                                                            "content": "rotate"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "from",
                                                            "content": "0 12 12"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "to",
                                                            "content": "360 12 12"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "dur",
                                                            "content": "2s"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "repeatCount",
                                                            "content": "indefinite"
                                                        }
                                                        ]
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "animate",
                                                        "name": "dashoffset-animation",
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "name": "attributeName",
                                                            "content": "stroke-dashoffset"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "dur",
                                                            "content": "8s"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "repeatCount",
                                                            "content": "indefinite"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "keyTimes",
                                                            "content": "0; 0.5; 1"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "values",
                                                            "content": "-16; -47; -16"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "calcMode",
                                                            "content": "spline"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "keySplines",
                                                            "content": "0.4 0 0.2 1; 0.4 0 0.2 1"
                                                        }
                                                        ]
                                                    }
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "spinner",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "full-loading-component",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "svg",
                                                "name": "full-loading-spinner",
                                                "attrs": [
                                                {
                                                    "type": "static",
                                                    "name": "aria-hidden",
                                                    "content": "true"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "viewBox",
                                                    "content": "0 0 100 101"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "fill",
                                                    "content": "none"
                                                },
                                                {
                                                    "type": "static",
                                                    "name": "xmlns",
                                                    "content": "http://www.w3.org/2000/svg"
                                                }
                                                ],
                                                "style": {
                                                "width": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "remSize",
                                                    "fallback": "64px"
                                                    }
                                                },
                                                "height": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "remSize",
                                                    "fallback": "64px"
                                                    }
                                                },
                                                "animation": "spin 1s linear infinite",
                                                "fill": "$token-color-primary",
                                                "color": "$token-color-muted"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "path",
                                                    "name": "loading-spinner-background",
                                                    "attrs": [
                                                    {
                                                        "type": "static",
                                                        "name": "d",
                                                        "content": "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                                                    },
                                                    {
                                                        "type": "static",
                                                        "name": "fill",
                                                        "content": "currentColor"
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "path",
                                                    "name": "loading-spinner-foreground",
                                                    "attrs": [
                                                    {
                                                        "type": "static",
                                                        "name": "d",
                                                        "content": "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                                                    },
                                                    {
                                                        "type": "static",
                                                        "name": "fill",
                                                        "content": "currentFill"
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "line-break",
                                                "name": "loading-line-break"
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "text",
                                                "name": "loading-status-text",
                                                "style": {
                                                "animation": "pulse 2s infinite",
                                                "fontSize": "$token-font-size-lg",
                                                "color": "$token-color-primary"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "static",
                                                "content": "Loading..."
                                                }
                                            ]
                                            }
                                        ],
                                        "style": {
                                            "role": "status",
                                            "display": "flex",
                                            "flexDirection": "column",
                                            "alignItems": "center",
                                            "justifyContent": "center"
                                        }
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "full",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "loading-text-component",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "text",
                                                "name": "animated-loading-text",
                                                "style": {
                                                "color": "$token-color-text-primary",
                                                "fontSize": "$token-font-size-md"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "loadingTextWithDots"
                                                }
                                                }
                                            ]
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "text",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "skeleton-loading-component",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "basic-skeleton-container",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "basic-skeleton-element",
                                                    "style": {
                                                        "animation": "pulse 2s infinite",
                                                        "borderRadius": "$token-border-radius-md",
                                                        "backgroundColor": "$token-color-border",
                                                        "height": {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "prop",
                                                            "id": "skeletonHeight",
                                                            "fallback": "20px"
                                                        }
                                                        },
                                                        "width": {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "prop",
                                                            "id": "skeletonWidth",
                                                            "fallback": "100%"
                                                        }
                                                        }
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "skeleton",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "skeleton-card-loading",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "skeleton-card-wrapper",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "skeleton-card-header",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-avatar",
                                                            "style": {
                                                            "height": "32px",
                                                            "width": "32px",
                                                            "borderRadius": "50%",
                                                            "animation": "pulse 2s infinite",
                                                            "backgroundColor": "$token-color-border"
                                                            }
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-title",
                                                            "style": {
                                                            "height": "16px",
                                                            "width": "40%",
                                                            "borderRadius": "$token-border-radius-sm",
                                                            "animation": "pulse 2s infinite",
                                                            "backgroundColor": "$token-color-border"
                                                            }
                                                        }
                                                        }
                                                    ],
                                                    "style": {
                                                        "display": "flex",
                                                        "alignItems": "center",
                                                        "gap": "12px",
                                                        "marginBottom": "12px"
                                                    }
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "skeleton-card-content",
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-text-line-1",
                                                            "style": {
                                                            "height": "12px",
                                                            "width": "90%",
                                                            "borderRadius": "$token-border-radius-sm",
                                                            "animation": "pulse 2s infinite",
                                                            "backgroundColor": "$token-color-border",
                                                            "marginBottom": "8px"
                                                            }
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "container",
                                                            "name": "skeleton-text-line-2",
                                                            "style": {
                                                            "height": "12px",
                                                            "width": "80%",
                                                            "borderRadius": "$token-border-radius-sm",
                                                            "animation": "pulse 2s infinite",
                                                            "backgroundColor": "$token-color-border"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ],
                                                "style": {
                                                "padding": "16px",
                                                "backgroundColor": "$token-color-surface",
                                                "borderRadius": "$token-border-radius-lg",
                                                "border": "1px solid $token-color-border"
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "card",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "sidebar-skeleton-loading",
                                        "children": [
                                            {
                                            "type": "element",
                                            "content": {
                                                "elementType": "container",
                                                "name": "sidebar-skeleton-item",
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "content": {
                                                    "elementType": "container",
                                                    "name": "sidebar-skeleton-content",
                                                    "style": {
                                                        "height": "12px",
                                                        "width": "40%",
                                                        "borderRadius": "$token-border-radius-sm",
                                                        "animation": "pulse 2s infinite",
                                                        "backgroundColor": "$token-color-border"
                                                    }
                                                    }
                                                }
                                                ],
                                                "style": {
                                                "display": "flex",
                                                "height": "36px",
                                                "width": "100%",
                                                "flexShrink": "0",
                                                "cursor": "pointer",
                                                "alignItems": "center",
                                                "gap": "16px",
                                                "borderRadius": "$token-border-radius-md",
                                                "border": "1px solid $token-color-border",
                                                "backgroundColor": "$token-color-background",
                                                "padding": "0 8px",
                                                "opacity": "1"
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "sidebar",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "multiple-skeletons-display",
                                        "children": [
                                            {
                                            "type": "repeat",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "skeleton-item",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "skeleton-placeholder",
                                                        "style": {
                                                            "animation": "pulse 2s infinite",
                                                            "borderRadius": "$token-border-radius-md",
                                                            "backgroundColor": "$token-color-border",
                                                            "height": "20px",
                                                            "width": "100%",
                                                            "marginBottom": "8px"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                "dataSource": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "state",
                                                    "id": "skeletonCount"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "loadingType",
                                        "conditions": [
                                            {
                                            "operand": "multiple",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                }
                                ]
                            }
                            },
                            "stateDefinitions": {
                            "loadingType": {
                                "type": "string",
                                "defaultValue": "spinner"
                            },
                            "isLoading": {
                                "type": "boolean",
                                "defaultValue": true
                            },
                            "loadingText": {
                                "type": "string",
                                "defaultValue": "Loading"
                            },
                            "dots": {
                                "type": "string",
                                "defaultValue": "."
                            },
                            "skeletonCount": {
                                "type": "array",
                                "defaultValue": [1, 2, 3]
                            },
                            "animationState": {
                                "type": "string",
                                "defaultValue": "running"
                            }
                            },
                            "propDefinitions": {
                            "size": {
                                "type": "number",
                                "defaultValue": 24
                            },
                            "remSize": {
                                "type": "string",
                                "defaultValue": "64px"
                            },
                            "text": {
                                "type": "string",
                                "defaultValue": "Loading"
                            },
                            "skeletonHeight": {
                                "type": "string",
                                "defaultValue": "20px"
                            },
                            "skeletonWidth": {
                                "type": "string",
                                "defaultValue": "100%"
                            },
                            "variant": {
                                "type": "string",
                                "defaultValue": "spinner"
                            },
                            "showText": {
                                "type": "boolean",
                                "defaultValue": true
                            }
                            },
                            "compDefinitions": {
                            "loadingTextWithDots": {
                                "type": "string",
                                "content": "$state.loadingText + $state.dots"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "spinnerAnimation": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "animation": "spin 1s linear infinite"
                            }
                            },
                            "pulseAnimation": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "animation": "pulse 2s infinite"
                            }
                            },
                            "loadingSpinner": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "color": "currentColor",
                                "animation": "spin 1s linear infinite"
                            }
                            },
                            "loadingText": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "animation": "pulse 2s infinite",
                                "fontSize": "$token-font-size-lg",
                                "color": "$token-color-primary",
                                "textAlign": "center"
                            }
                            },
                            "skeletonElement": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "animation": "pulse 2s infinite",
                                "borderRadius": "$token-border-radius-md",
                                "backgroundColor": "$token-color-border"
                            }
                            },
                            "loadingContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "alignItems": "center",
                                "justifyContent": "center",
                                "padding": "$token-spacing-md"
                            }
                            },
                            "skeletonCard": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "padding": "16px",
                                "backgroundColor": "$token-color-surface",
                                "borderRadius": "$token-border-radius-lg",
                                "border": "1px solid $token-color-border",
                                "animation": "pulse 2s infinite"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-secondary": "#6B7280",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-muted": "#F3F4F6",
                                "token-color-border": "#E5E7EB",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px"
                            },
                            "typography": {
                                "token-font-size-sm": "12px",
                                "token-font-size-md": "14px",
                                "token-font-size-lg": "16px",
                                "token-font-size-xl": "20px"
                            },
                            "animations": {
                                "token-animation-spin": "spin 1s linear infinite",
                                "token-animation-pulse": "pulse 2s infinite",
                                "token-animation-bounce": "bounce 1s infinite"
                            }
                            }
                        }
                        }
				},
				{
					"id": "theme_provider",
					"type": "interface",
					"name": "ThemeProvider",
					"description": "Application theme management with light/dark modes, custom themes, and responsive design tokens",
					"component_path": "src/frontend/src/contexts/ThemeContext",
					"uidl_definition_physical": {
                        "name": "ThemeContext",
                        "globals": {
                            "settings": {
                            "title": "Theme Context System",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "ThemeContext",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "theme-context-wrapper",
                                "children": [
                                {
                                    "type": "element",
                                    "content": {
                                    "elementType": "container",
                                    "name": "theme-provider-container",
                                    "children": [
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "container",
                                            "name": "theme-buttons-component",
                                            "children": [
                                            {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "theme-selector-wrapper",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "sliding-indicator",
                                                        "style": {
                                                        "position": "absolute",
                                                        "bottom": "2px",
                                                        "left": "1px",
                                                        "top": "2px",
                                                        "width": "30%",
                                                        "borderRadius": "50px",
                                                        "backgroundColor": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "computed",
                                                            "id": "indicatorColor"
                                                            }
                                                        },
                                                        "transform": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "computed",
                                                            "id": "indicatorTransform"
                                                            }
                                                        },
                                                        "zIndex": "0",
                                                        "transition": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "hasInteracted",
                                                            "conditions": [
                                                                {
                                                                "operand": true,
                                                                "operation": "===",
                                                                "value": "all 0.3s ease"
                                                                }
                                                            ],
                                                            "fallback": "none"
                                                            }
                                                        }
                                                        }
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "button",
                                                        "name": "light-theme-button",
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "name": "data-testid",
                                                            "content": "menu_light_button"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "id",
                                                            "content": "menu_light_button"
                                                        }
                                                        ],
                                                        "style": {
                                                        "position": "relative",
                                                        "zIndex": "10",
                                                        "display": "inline-flex",
                                                        "alignItems": "center",
                                                        "borderRadius": "50px",
                                                        "padding": "4px",
                                                        "background": "transparent",
                                                        "border": "none",
                                                        "cursor": "pointer",
                                                        "color": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "selectedTheme",
                                                            "conditions": [
                                                                {
                                                                "operand": "light",
                                                                "operation": "===",
                                                                "value": "$token-color-text-primary"
                                                                }
                                                            ],
                                                            "fallback": "$token-color-text-secondary"
                                                            }
                                                        },
                                                        "hover": {
                                                            "backgroundColor": "$token-color-warning",
                                                            "color": "$token-color-background"
                                                        }
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "icon",
                                                            "name": "sun-icon",
                                                            "style": {
                                                            "width": "16px",
                                                            "height": "16px",
                                                            "strokeWidth": "2"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "button",
                                                        "name": "dark-theme-button",
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "name": "data-testid",
                                                            "content": "menu_dark_button"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "id",
                                                            "content": "menu_dark_button"
                                                        }
                                                        ],
                                                        "style": {
                                                        "position": "relative",
                                                        "zIndex": "10",
                                                        "margin": "0 4px",
                                                        "display": "inline-flex",
                                                        "alignItems": "center",
                                                        "borderRadius": "50px",
                                                        "padding": "4px",
                                                        "background": "transparent",
                                                        "border": "none",
                                                        "cursor": "pointer",
                                                        "color": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "selectedTheme",
                                                            "conditions": [
                                                                {
                                                                "operand": "dark",
                                                                "operation": "===",
                                                                "value": "$token-color-primary"
                                                                }
                                                            ],
                                                            "fallback": "$token-color-text-secondary"
                                                            }
                                                        },
                                                        "hover": {
                                                            "backgroundColor": "$token-color-secondary",
                                                            "color": "$token-color-background"
                                                        }
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "icon",
                                                            "name": "moon-icon",
                                                            "style": {
                                                            "width": "16px",
                                                            "height": "16px",
                                                            "strokeWidth": "2"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "button",
                                                        "name": "system-theme-button",
                                                        "attrs": [
                                                        {
                                                            "type": "static",
                                                            "name": "data-testid",
                                                            "content": "menu_system_button"
                                                        },
                                                        {
                                                            "type": "static",
                                                            "name": "id",
                                                            "content": "menu_system_button"
                                                        }
                                                        ],
                                                        "style": {
                                                        "position": "relative",
                                                        "zIndex": "10",
                                                        "display": "inline-flex",
                                                        "alignItems": "center",
                                                        "borderRadius": "50px",
                                                        "padding": "4px",
                                                        "background": "transparent",
                                                        "border": "none",
                                                        "cursor": "pointer",
                                                        "backgroundColor": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "selectedTheme",
                                                            "conditions": [
                                                                {
                                                                "operand": "system",
                                                                "operation": "===",
                                                                "value": "$token-color-text-primary"
                                                                }
                                                            ],
                                                            "fallback": "transparent"
                                                            }
                                                        },
                                                        "color": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "state",
                                                            "id": "selectedTheme",
                                                            "conditions": [
                                                                {
                                                                "operand": "system",
                                                                "operation": "===",
                                                                "value": "$token-color-background"
                                                                }
                                                            ],
                                                            "fallback": "$token-color-text-secondary"
                                                            }
                                                        },
                                                        "hover": {
                                                            "backgroundColor": "$token-color-text-primary",
                                                            "color": "$token-color-background"
                                                        }
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "content": {
                                                            "elementType": "icon",
                                                            "name": "monitor-icon",
                                                            "style": {
                                                            "width": "16px",
                                                            "height": "16px",
                                                            "strokeWidth": "2"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                ],
                                                "style": {
                                                    "position": "relative",
                                                    "marginLeft": "auto",
                                                    "display": "inline-flex",
                                                    "borderRadius": "50px",
                                                    "border": "1px solid $token-color-border"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        },
                                        {
                                        "type": "element",
                                        "content": {
                                            "elementType": "container",
                                            "name": "theme-provider-content",
                                            "children": [
                                            {
                                                "type": "element",
                                                "content": {
                                                "elementType": "container",
                                                "name": "theme-context-display",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "current-theme-info",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "current-theme-label",
                                                            "style": {
                                                                "fontSize": "$token-font-size-sm",
                                                                "fontWeight": "600",
                                                                "color": "$token-color-text-primary",
                                                                "marginBottom": "8px"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Current Theme:"
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "current-theme-value",
                                                            "style": {
                                                                "fontSize": "$token-font-size-md",
                                                                "color": "$token-color-text-secondary",
                                                                "textTransform": "capitalize"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "state",
                                                                "id": "selectedTheme"
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        ],
                                                        "style": {
                                                        "padding": "$token-spacing-md",
                                                        "backgroundColor": "$token-color-surface",
                                                        "borderRadius": "$token-border-radius-lg",
                                                        "border": "1px solid $token-color-border",
                                                        "marginBottom": "$token-spacing-md"
                                                        }
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "theme-preferences-info",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "system-preference-label",
                                                            "style": {
                                                                "fontSize": "$token-font-size-sm",
                                                                "fontWeight": "600",
                                                                "color": "$token-color-text-primary",
                                                                "marginBottom": "8px"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "System Preference:"
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "system-preference-value",
                                                            "style": {
                                                                "fontSize": "$token-font-size-md",
                                                                "color": "$token-color-text-secondary"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "static",
                                                                    "content": "Dark Mode"
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "state",
                                                                    "id": "systemDarkMode"
                                                                    }
                                                                }
                                                                }
                                                            },
                                                            {
                                                                "type": "conditional",
                                                                "content": {
                                                                "node": {
                                                                    "type": "static",
                                                                    "content": "Light Mode"
                                                                },
                                                                "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "computed",
                                                                    "id": "isSystemLight"
                                                                    }
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "dark-mode-status-label",
                                                            "style": {
                                                                "fontSize": "$token-font-size-sm",
                                                                "fontWeight": "600",
                                                                "color": "$token-color-text-primary",
                                                                "marginTop": "12px",
                                                                "marginBottom": "8px"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Current Mode:"
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "container",
                                                            "name": "dark-mode-status-indicator",
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "container",
                                                                    "name": "mode-indicator-dot",
                                                                    "style": {
                                                                    "width": "12px",
                                                                    "height": "12px",
                                                                    "borderRadius": "50%",
                                                                    "backgroundColor": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "state",
                                                                        "id": "dark",
                                                                        "conditions": [
                                                                            {
                                                                            "operand": true,
                                                                            "operation": "===",
                                                                            "value": "$token-color-info"
                                                                            }
                                                                        ],
                                                                        "fallback": "$token-color-warning"
                                                                        }
                                                                    },
                                                                    "marginRight": "8px"
                                                                    }
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "text",
                                                                    "name": "dark-mode-status-text",
                                                                    "style": {
                                                                    "fontSize": "$token-font-size-md",
                                                                    "color": "$token-color-text-secondary"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                        "node": {
                                                                        "type": "static",
                                                                        "content": "Dark Mode Active"
                                                                        },
                                                                        "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "state",
                                                                            "id": "dark"
                                                                        }
                                                                        }
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "conditional",
                                                                    "content": {
                                                                        "node": {
                                                                        "type": "static",
                                                                        "content": "Light Mode Active"
                                                                        },
                                                                        "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "computed",
                                                                            "id": "isLightMode"
                                                                        }
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            ],
                                                            "style": {
                                                                "display": "flex",
                                                                "alignItems": "center"
                                                            }
                                                            }
                                                        }
                                                        ],
                                                        "style": {
                                                        "padding": "$token-spacing-md",
                                                        "backgroundColor": "$token-color-surface",
                                                        "borderRadius": "$token-border-radius-lg",
                                                        "border": "1px solid $token-color-border",
                                                        "marginBottom": "$token-spacing-md"
                                                        }
                                                    }
                                                    },
                                                    {
                                                    "type": "element",
                                                    "content": {
                                                        "elementType": "container",
                                                        "name": "theme-features-info",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "text",
                                                            "name": "theme-features-label",
                                                            "style": {
                                                                "fontSize": "$token-font-size-sm",
                                                                "fontWeight": "600",
                                                                "color": "$token-color-text-primary",
                                                                "marginBottom": "12px"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Theme Features:"
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "content": {
                                                            "elementType": "list",
                                                            "name": "theme-features-list",
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "list-item",
                                                                    "name": "auto-system-detection",
                                                                    "children": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "Automatic system theme detection"
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "fontSize": "$token-font-size-sm",
                                                                    "color": "$token-color-text-secondary",
                                                                    "marginBottom": "4px"
                                                                    }
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "list-item",
                                                                    "name": "persistent-preferences",
                                                                    "children": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "Persistent theme preferences in localStorage"
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "fontSize": "$token-font-size-sm",
                                                                    "color": "$token-color-text-secondary",
                                                                    "marginBottom": "4px"
                                                                    }
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "list-item",
                                                                    "name": "smooth-transitions",
                                                                    "children": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "Smooth animated transitions between themes"
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "fontSize": "$token-font-size-sm",
                                                                    "color": "$token-color-text-secondary",
                                                                    "marginBottom": "4px"
                                                                    }
                                                                }
                                                                },
                                                                {
                                                                "type": "element",
                                                                "content": {
                                                                    "elementType": "list-item",
                                                                    "name": "three-theme-options",
                                                                    "children": [
                                                                    {
                                                                        "type": "static",
                                                                        "content": "Light, Dark, and System theme options"
                                                                    }
                                                                    ],
                                                                    "style": {
                                                                    "fontSize": "$token-font-size-sm",
                                                                    "color": "$token-color-text-secondary"
                                                                    }
                                                                }
                                                                }
                                                            ],
                                                            "style": {
                                                                "listStyleType": "disc",
                                                                "paddingLeft": "20px"
                                                            }
                                                            }
                                                        }
                                                        ],
                                                        "style": {
                                                        "padding": "$token-spacing-md",
                                                        "backgroundColor": "$token-color-surface",
                                                        "borderRadius": "$token-border-radius-lg",
                                                        "border": "1px solid $token-color-border"
                                                        }
                                                    }
                                                    }
                                                ]
                                                }
                                            },
                                            {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "prop",
                                                "id": "children"
                                                }
                                            }
                                            ],
                                            "style": {
                                            "width": "100%"
                                            }
                                        }
                                        }
                                    ]
                                    }
                                }
                                ],
                                "style": {
                                "width": "100%",
                                "minHeight": "100vh",
                                "backgroundColor": "$token-color-background",
                                "color": "$token-color-text-primary",
                                "transition": "background-color 0.2s ease, color 0.2s ease"
                                }
                            }
                            },
                            "stateDefinitions": {
                            "dark": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "systemTheme": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "systemDarkMode": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "selectedTheme": {
                                "type": "string",
                                "defaultValue": "light"
                            },
                            "hasInteracted": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "themePreference": {
                                "type": "string",
                                "defaultValue": "system"
                            }
                            },
                            "propDefinitions": {
                            "children": {
                                "type": "element",
                                "defaultValue": null
                            },
                            "initialTheme": {
                                "type": "string",
                                "defaultValue": "system"
                            }
                            },
                            "compDefinitions": {
                            "indicatorColor": {
                                "type": "string",
                                "content": "$state.dark ? '#A855F7' : '#FBBF24'"
                            },
                            "indicatorTransform": {
                                "type": "string",
                                "content": "$state.selectedTheme === 'light' ? 'translateX(2%)' : $state.selectedTheme === 'dark' ? 'translateX(112%)' : 'translateX(223%)'"
                            },
                            "isSystemLight": {
                                "type": "boolean",
                                "content": "!$state.systemDarkMode"
                            },
                            "isLightMode": {
                                "type": "boolean",
                                "content": "!$state.dark"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "themeButton": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "position": "relative",
                                "zIndex": "10",
                                "display": "inline-flex",
                                "alignItems": "center",
                                "borderRadius": "50px",
                                "padding": "4px",
                                "background": "transparent",
                                "border": "none",
                                "cursor": "pointer",
                                "transition": "all 0.2s ease"
                            }
                            },
                            "themeButtonActive": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "color": "$token-color-text-primary",
                                "backgroundColor": "transparent"
                            }
                            },
                            "themeButtonInactive": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "color": "$token-color-text-secondary"
                            }
                            },
                            "themeSelector": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "position": "relative",
                                "marginLeft": "auto",
                                "display": "inline-flex",
                                "borderRadius": "50px",
                                "border": "1px solid $token-color-border",
                                "backgroundColor": "$token-color-surface"
                            }
                            },
                            "slidingIndicator": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "position": "absolute",
                                "bottom": "2px",
                                "left": "1px",
                                "top": "2px",
                                "width": "30%",
                                "borderRadius": "50px",
                                "zIndex": "0",
                                "transition": "all 0.3s ease"
                            }
                            },
                            "themeInfoCard": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "padding": "$token-spacing-md",
                                "backgroundColor": "$token-color-surface",
                                "borderRadius": "$token-border-radius-lg",
                                "border": "1px solid $token-color-border",
                                "marginBottom": "$token-spacing-md"
                            }
                            },
                            "statusIndicator": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "12px",
                                "height": "12px",
                                "borderRadius": "50%",
                                "marginRight": "8px"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-secondary": "#A855F7",
                                "token-color-warning": "#FBBF24",
                                "token-color-info": "#3B82F6",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-border": "#E5E7EB",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px"
                            },
                            "typography": {
                                "token-font-size-sm": "14px",
                                "token-font-size-md": "16px",
                                "token-font-size-lg": "18px"
                            }
                            }
                        }
                        }
				},
				{
					"id": "auth_guard",
					"type": "interface",
					"name": "AuthGuard",
					"description": "Route protection and authentication state management with automatic redirects and session handling",
					"component_path": "src/frontend/src/components/AuthGuard",
					"uidl_definition_physical": {
                        "name": "AuthGuard",
                        "globals": {
                            "settings": {
                            "title": "Authentication Guard System",
                            "language": "en"
                            },
                            "customCode": {
                            "head": "",
                            "body": ""
                            },
                            "meta": [],
                            "assets": [],
                            "manifest": {},
                            "variables": {}
                        },
                        "root": {
                            "name": "AuthGuard",
                            "node": {
                            "type": "element",
                            "content": {
                                "elementType": "container",
                                "name": "auth-guard-wrapper",
                                "children": [
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "protected-route-guard",
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "login-redirect-container",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "redirect-loading-screen",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "redirect-loading-spinner",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "container",
                                                                    "name": "loading-spinner-component",
                                                                    "style": {
                                                                        "width": "64px",
                                                                        "height": "64px",
                                                                        "border": "4px solid $token-color-border",
                                                                        "borderTop": "4px solid $token-color-primary",
                                                                        "borderRadius": "50%",
                                                                        "animation": "spin 1s linear infinite"
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "redirect-message",
                                                                "style": {
                                                                "fontSize": "$token-font-size-lg",
                                                                "color": "$token-color-primary",
                                                                "marginTop": "16px",
                                                                "textAlign": "center"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Redirecting to login..."
                                                                }
                                                            ]
                                                            }
                                                        ],
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "alignItems": "center",
                                                            "justifyContent": "center",
                                                            "minHeight": "100vh",
                                                            "backgroundColor": "$token-color-background"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "shouldRedirectToLogin"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "prop",
                                                    "id": "children"
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "isAuthorizedForContent"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "guardType",
                                        "conditions": [
                                            {
                                            "operand": "protected",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "admin-route-guard",
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "admin-loading-page",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "admin-loading-container",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "container",
                                                                "name": "admin-loading-spinner",
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "content": {
                                                                    "elementType": "svg",
                                                                    "name": "admin-loading-svg",
                                                                    "attrs": [
                                                                        {
                                                                        "type": "static",
                                                                        "name": "role",
                                                                        "content": "status"
                                                                        },
                                                                        {
                                                                        "type": "static",
                                                                        "name": "aria-hidden",
                                                                        "content": "true"
                                                                        },
                                                                        {
                                                                        "type": "static",
                                                                        "name": "viewBox",
                                                                        "content": "0 0 100 101"
                                                                        },
                                                                        {
                                                                        "type": "static",
                                                                        "name": "fill",
                                                                        "content": "none"
                                                                        },
                                                                        {
                                                                        "type": "static",
                                                                        "name": "xmlns",
                                                                        "content": "http://www.w3.org/2000/svg"
                                                                        }
                                                                    ],
                                                                    "style": {
                                                                        "width": "200px",
                                                                        "height": "200px",
                                                                        "animation": "spin 1s linear infinite",
                                                                        "fill": "$token-color-primary",
                                                                        "color": "$token-color-muted"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "path",
                                                                        "name": "admin-spinner-background",
                                                                        "attrs": [
                                                                            {
                                                                            "type": "static",
                                                                            "name": "d",
                                                                            "content": "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                                                                            },
                                                                            {
                                                                            "type": "static",
                                                                            "name": "fill",
                                                                            "content": "currentColor"
                                                                            }
                                                                        ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "element",
                                                                        "content": {
                                                                        "elementType": "path",
                                                                        "name": "admin-spinner-foreground",
                                                                        "attrs": [
                                                                            {
                                                                            "type": "static",
                                                                            "name": "d",
                                                                            "content": "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                                                                            },
                                                                            {
                                                                            "type": "static",
                                                                            "name": "fill",
                                                                            "content": "currentFill"
                                                                            }
                                                                        ]
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                ]
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "admin-loading-text",
                                                                "style": {
                                                                "animation": "pulse 2s infinite",
                                                                "fontSize": "$token-font-size-xl",
                                                                "color": "$token-color-primary",
                                                                "marginTop": "24px"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Verifying admin access..."
                                                                }
                                                            ]
                                                            }
                                                        ],
                                                        "style": {
                                                            "display": "flex",
                                                            "flexDirection": "column",
                                                            "alignItems": "center",
                                                            "justifyContent": "center"
                                                        }
                                                        }
                                                    }
                                                    ],
                                                    "style": {
                                                    "display": "flex",
                                                    "height": "100vh",
                                                    "width": "100vw",
                                                    "alignItems": "center",
                                                    "justifyContent": "center",
                                                    "backgroundColor": "$token-color-background"
                                                    }
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "showAdminLoading"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "admin-access-denied",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "access-denied-content",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "icon",
                                                                "name": "access-denied-icon",
                                                                "style": {
                                                                "width": "80px",
                                                                "height": "80px",
                                                                "color": "$token-color-error",
                                                                "marginBottom": "16px"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "access-denied-title",
                                                                "style": {
                                                                "fontSize": "$token-font-size-xxl",
                                                                "fontWeight": "600",
                                                                "color": "$token-color-text-primary",
                                                                "marginBottom": "8px",
                                                                "textAlign": "center"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Access Denied"
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "access-denied-message",
                                                                "style": {
                                                                "fontSize": "$token-font-size-lg",
                                                                "color": "$token-color-text-secondary",
                                                                "textAlign": "center",
                                                                "marginBottom": "24px"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "You don't have permission to access this area. Admin privileges required."
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "redirect-home-message",
                                                                "style": {
                                                                "fontSize": "$token-font-size-sm",
                                                                "color": "$token-color-text-disabled",
                                                                "textAlign": "center"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Redirecting to home..."
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ],
                                                    "style": {
                                                    "display": "flex",
                                                    "height": "100vh",
                                                    "width": "100vw",
                                                    "alignItems": "center",
                                                    "justifyContent": "center",
                                                    "backgroundColor": "$token-color-background"
                                                    }
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "showAccessDenied"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "prop",
                                                    "id": "children"
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "isAuthorizedAdmin"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "guardType",
                                        "conditions": [
                                            {
                                            "operand": "admin",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "login-route-guard",
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "already-authenticated-redirect",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "container",
                                                        "name": "redirect-authenticated-message",
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "icon",
                                                                "name": "check-circle-icon",
                                                                "style": {
                                                                "width": "64px",
                                                                "height": "64px",
                                                                "color": "$token-color-success",
                                                                "marginBottom": "16px"
                                                                }
                                                            }
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "already-authenticated-text",
                                                                "style": {
                                                                "fontSize": "$token-font-size-lg",
                                                                "color": "$token-color-text-primary",
                                                                "marginBottom": "8px",
                                                                "textAlign": "center"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Already authenticated"
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "content": {
                                                                "elementType": "text",
                                                                "name": "redirect-home-text",
                                                                "style": {
                                                                "fontSize": "$token-font-size-sm",
                                                                "color": "$token-color-text-secondary",
                                                                "textAlign": "center"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Redirecting to dashboard..."
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ],
                                                    "style": {
                                                    "display": "flex",
                                                    "height": "100vh",
                                                    "width": "100vw",
                                                    "alignItems": "center",
                                                    "justifyContent": "center",
                                                    "backgroundColor": "$token-color-background"
                                                    }
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "shouldRedirectFromLogin"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "prop",
                                                    "id": "children"
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "canShowLoginForm"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "guardType",
                                        "conditions": [
                                            {
                                            "operand": "login",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "settings-route-guard",
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "settings-redirect-message",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "settings-unavailable-text",
                                                        "style": {
                                                            "fontSize": "$token-font-size-lg",
                                                            "color": "$token-color-text-primary",
                                                            "textAlign": "center",
                                                            "marginBottom": "8px"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "General settings not available"
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "redirect-global-vars-text",
                                                        "style": {
                                                            "fontSize": "$token-font-size-sm",
                                                            "color": "$token-color-text-secondary",
                                                            "textAlign": "center"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Redirecting to Global Variables..."
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "shouldRedirectFromSettings"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "prop",
                                                    "id": "children"
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "canShowSettings"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "guardType",
                                        "conditions": [
                                            {
                                            "operand": "settings",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "conditional",
                                    "content": {
                                    "node": {
                                        "type": "element",
                                        "content": {
                                        "elementType": "container",
                                        "name": "store-route-guard",
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "element",
                                                "content": {
                                                    "elementType": "container",
                                                    "name": "store-redirect-message",
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "store-unavailable-text",
                                                        "style": {
                                                            "fontSize": "$token-font-size-lg",
                                                            "color": "$token-color-text-primary",
                                                            "textAlign": "center",
                                                            "marginBottom": "8px"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Store not available"
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "content": {
                                                        "elementType": "text",
                                                        "name": "redirect-all-text",
                                                        "style": {
                                                            "fontSize": "$token-font-size-sm",
                                                            "color": "$token-color-text-secondary",
                                                            "textAlign": "center"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Redirecting to flows..."
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "shouldRedirectFromStore"
                                                }
                                                }
                                            }
                                            },
                                            {
                                            "type": "conditional",
                                            "content": {
                                                "node": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "prop",
                                                    "id": "children"
                                                }
                                                },
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "computed",
                                                    "id": "canShowStore"
                                                }
                                                }
                                            }
                                            }
                                        ]
                                        }
                                    },
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "state",
                                        "id": "guardType",
                                        "conditions": [
                                            {
                                            "operand": "store",
                                            "operation": "===",
                                            "value": true
                                            }
                                        ],
                                        "fallback": false
                                        }
                                    }
                                    }
                                }
                                ]
                            }
                            },
                            "stateDefinitions": {
                            "isAuthenticated": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "isAdmin": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "autoLogin": {
                                "type": "boolean",
                                "defaultValue": null
                            },
                            "hasStore": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "enableProfileIcons": {
                                "type": "boolean",
                                "defaultValue": false
                            },
                            "guardType": {
                                "type": "string",
                                "defaultValue": "protected"
                            },
                            "currentPath": {
                                "type": "string",
                                "defaultValue": "/"
                            },
                            "redirectPath": {
                                "type": "string",
                                "defaultValue": null
                            },
                            "userData": {
                                "type": "object",
                                "defaultValue": null
                            },
                            "isLoading": {
                                "type": "boolean",
                                "defaultValue": true
                            }
                            },
                            "propDefinitions": {
                            "children": {
                                "type": "element",
                                "defaultValue": null
                            },
                            "guardType": {
                                "type": "string",
                                "defaultValue": "protected"
                            }
                            },
                            "compDefinitions": {
                            "shouldRedirectToLogin": {
                                "type": "boolean",
                                "content": "!$state.isAuthenticated && $state.autoLogin !== undefined && (!$state.autoLogin || !$state.isAutoLoginEnv)"
                            },
                            "isAuthorizedForContent": {
                                "type": "boolean",
                                "content": "$state.isAuthenticated && !$computed.shouldRedirectToLogin"
                            },
                            "showAdminLoading": {
                                "type": "boolean",
                                "content": "!$state.isAuthenticated"
                            },
                            "showAccessDenied": {
                                "type": "boolean",
                                "content": "$state.isAuthenticated && $state.userData && !$state.isAdmin"
                            },
                            "isAuthorizedAdmin": {
                                "type": "boolean",
                                "content": "$state.isAuthenticated && $state.isAdmin && !$state.autoLogin"
                            },
                            "shouldRedirectFromLogin": {
                                "type": "boolean",
                                "content": "$state.autoLogin === true || $state.isAuthenticated"
                            },
                            "canShowLoginForm": {
                                "type": "boolean",
                                "content": "!$computed.shouldRedirectFromLogin"
                            },
                            "shouldRedirectFromSettings": {
                                "type": "boolean",
                                "content": "!$computed.canShowSettings"
                            },
                            "canShowSettings": {
                                "type": "boolean",
                                "content": "$state.enableProfileIcons || $state.hasStore || !$state.autoLogin"
                            },
                            "shouldRedirectFromStore": {
                                "type": "boolean",
                                "content": "!$state.hasStore"
                            },
                            "canShowStore": {
                                "type": "boolean",
                                "content": "$state.hasStore"
                            }
                            }
                        },
                        "styleSetDefinitions": {
                            "loadingContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "height": "100vh",
                                "width": "100vw",
                                "alignItems": "center",
                                "justifyContent": "center",
                                "backgroundColor": "$token-color-background"
                            }
                            },
                            "loadingSpinner": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "64px",
                                "height": "64px",
                                "border": "4px solid $token-color-border",
                                "borderTop": "4px solid $token-color-primary",
                                "borderRadius": "50%",
                                "animation": "spin 1s linear infinite"
                            }
                            },
                            "redirectMessage": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "fontSize": "$token-font-size-lg",
                                "color": "$token-color-primary",
                                "marginTop": "16px",
                                "textAlign": "center"
                            }
                            },
                            "accessDeniedContainer": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "display": "flex",
                                "flexDirection": "column",
                                "alignItems": "center",
                                "justifyContent": "center",
                                "minHeight": "100vh",
                                "backgroundColor": "$token-color-background",
                                "padding": "$token-spacing-xl"
                            }
                            },
                            "statusIcon": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "width": "80px",
                                "height": "80px",
                                "marginBottom": "16px"
                            }
                            },
                            "statusTitle": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "fontSize": "$token-font-size-xxl",
                                "fontWeight": "600",
                                "marginBottom": "8px",
                                "textAlign": "center"
                            }
                            },
                            "statusMessage": {
                            "type": "reusable-component-style-map",
                            "content": {
                                "fontSize": "$token-font-size-lg",
                                "textAlign": "center",
                                "marginBottom": "24px"
                            }
                            }
                        },
                        "designLanguage": {
                            "tokens": {
                            "colors": {
                                "token-color-primary": "#0066FF",
                                "token-color-secondary": "#6B7280",
                                "token-color-success": "#22C55E",
                                "token-color-warning": "#F59E0B",
                                "token-color-error": "#EF4444",
                                "token-color-background": "#FFFFFF",
                                "token-color-surface": "#F9FAFB",
                                "token-color-muted": "#F3F4F6",
                                "token-color-border": "#E5E7EB",
                                "token-color-text-primary": "#111827",
                                "token-color-text-secondary": "#6B7280",
                                "token-color-text-disabled": "#9CA3AF"
                            },
                            "spacing": {
                                "token-spacing-xs": "4px",
                                "token-spacing-sm": "8px",
                                "token-spacing-md": "16px",
                                "token-spacing-lg": "24px",
                                "token-spacing-xl": "32px"
                            },
                            "borderRadius": {
                                "token-border-radius-sm": "4px",
                                "token-border-radius-md": "6px",
                                "token-border-radius-lg": "8px"
                            },
                            "typography": {
                                "token-font-size-sm": "12px",
                                "token-font-size-md": "14px",
                                "token-font-size-lg": "16px",
                                "token-font-size-xl": "20px",
                                "token-font-size-xxl": "24px"
                            }
                            }
                        }
                    }
				},
				{
					"id": "data_table",
					"type": "interface",
					"name": "DataTable",
					"description": "Advanced data table with sorting, filtering, pagination, and export capabilities",
					"component_path": "src/frontend/src/components/DataTable",
					"uidl_definition_physical": {
                        "root": {
                            "type": "element",
                            "name": "data-table-container",
                            "elementType": "div",
                            "children": [
                            {
                                "type": "element",
                                "name": "search-and-table-container",
                                "elementType": "main",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex h-full w-full flex-1 flex-col gap-2 overflow-hidden py-4"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "search-container",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex-none px-4"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "search-tools-input",
                                        "elementType": "input",
                                        "attrs": {
                                        "type": {
                                            "type": "static",
                                            "content": "text"
                                        },
                                        "placeholder": {
                                            "type": "static",
                                            "content": "Search tools..."
                                        },
                                        "className": {
                                            "type": "static",
                                            "content": "h-8 border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 pl-10"
                                        },
                                        "value": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "prop",
                                            "id": "searchQuery"
                                            }
                                        }
                                        },
                                        "events": {
                                        "onChange": [
                                            {
                                            "type": "propCall",
                                            "id": "handleSearchChange"
                                            }
                                        ]
                                        }
                                    },
                                    {
                                        "type": "element",
                                        "name": "search-icon",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "absolute left-3 top-1/2 transform -translate-y-1/2"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "search-icon-svg",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "text-muted-foreground"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "search-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "table-container",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex-1 overflow-auto"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "reference": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "comp",
                                            "id": "hasNoData"
                                        }
                                        },
                                        "value": true,
                                        "node": {
                                        "type": "element",
                                        "name": "empty-state-alert",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "flex h-full w-full items-center justify-center rounded-md border"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "empty-alert",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground w-fit"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "alert-icon",
                                                "elementType": "svg",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "h-5 w-5 text-primary"
                                                    },
                                                    "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                    },
                                                    "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "alert-circle-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                        "d": {
                                                        "type": "static",
                                                        "content": "m21 16-4-4-4 4"
                                                        }
                                                    }
                                                    }
                                                ]
                                                },
                                                {
                                                "type": "element",
                                                "name": "alert-title",
                                                "elementType": "h5",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "mb-1 font-medium leading-none tracking-tight"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "static",
                                                    "content": "No Data Available"
                                                    }
                                                ]
                                                },
                                                {
                                                "type": "element",
                                                "name": "alert-description",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "text-sm [&_p]:leading-relaxed"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "static",
                                                    "content": "There are no items to display in the table."
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        ]
                                        },
                                        "fallback": {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "hasNoColumns"
                                            }
                                        },
                                        "value": true,
                                        "node": {
                                            "type": "element",
                                            "name": "no-columns-alert",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex h-full w-full items-center justify-center rounded-md border"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "no-columns-alert-inner",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground w-fit"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "no-columns-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "h-5 w-5 text-primary"
                                                    },
                                                    "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                    },
                                                    "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "no-columns-circle-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "m21 16-4-4-4 4"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "no-columns-title",
                                                    "elementType": "h5",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "mb-1 font-medium leading-none tracking-tight"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "No Column Definitions"
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "no-columns-description",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-sm [&_p]:leading-relaxed"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "Column definitions are required to display the table."
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        "fallback": {
                                            "type": "element",
                                            "name": "ag-grid-table",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "comp",
                                                "id": "gridThemeClass"
                                                }
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "ag-grid-react",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "ag-tool-mode h-full w-full overflow-visible"
                                                },
                                                "role": {
                                                    "type": "static",
                                                    "content": "grid"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "table-header",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "ag-header ag-pivot-off"
                                                    },
                                                    "role": {
                                                        "type": "static",
                                                        "content": "rowgroup"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "header-row",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "ag-header-row"
                                                        },
                                                        "role": {
                                                            "type": "static",
                                                            "content": "row"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "repeat",
                                                            "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "prop",
                                                                "id": "columnDefs"
                                                            }
                                                            },
                                                            "node": {
                                                            "type": "element",
                                                            "name": "header-cell",
                                                            "elementType": "div",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "ag-header-cell ag-focus-managed"
                                                                },
                                                                "role": {
                                                                "type": "static",
                                                                "content": "columnheader"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "name": "header-cell-content",
                                                                "elementType": "div",
                                                                "attrs": {
                                                                    "className": {
                                                                    "type": "static",
                                                                    "content": "ag-header-cell-label"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "conditional",
                                                                    "reference": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "local",
                                                                        "id": "checkboxSelection"
                                                                        }
                                                                    },
                                                                    "value": true,
                                                                    "node": {
                                                                        "type": "element",
                                                                        "name": "header-checkbox",
                                                                        "elementType": "input",
                                                                        "attrs": {
                                                                        "type": {
                                                                            "type": "static",
                                                                            "content": "checkbox"
                                                                        },
                                                                        "className": {
                                                                            "type": "static",
                                                                            "content": "ag-header-select-all"
                                                                        }
                                                                        }
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "element",
                                                                    "name": "header-text",
                                                                    "elementType": "span",
                                                                    "attrs": {
                                                                        "className": {
                                                                        "type": "static",
                                                                        "content": "ag-header-cell-text"
                                                                        }
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "local",
                                                                            "id": "headerName"
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "table-body",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "ag-body-viewport ag-layout-normal ag-row-no-animation"
                                                    },
                                                    "role": {
                                                        "type": "static",
                                                        "content": "rowgroup"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "table-body-container",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "ag-center-cols-clipper"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "table-body-container-inner",
                                                            "elementType": "div",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "ag-center-cols-viewport"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "table-body-container-canvas",
                                                                "elementType": "div",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "ag-center-cols-container"
                                                                },
                                                                "role": {
                                                                    "type": "static",
                                                                    "content": "rowgroup"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "repeat",
                                                                    "dataSource": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "prop",
                                                                        "id": "rowData"
                                                                    }
                                                                    },
                                                                    "node": {
                                                                    "type": "element",
                                                                    "name": "table-row",
                                                                    "elementType": "div",
                                                                    "attrs": {
                                                                        "className": {
                                                                        "type": "static",
                                                                        "content": "ag-row ag-row-even ag-row-level-0 ag-row-position-absolute ag-row-no-focus"
                                                                        },
                                                                        "role": {
                                                                        "type": "static",
                                                                        "content": "row"
                                                                        }
                                                                    },
                                                                    "events": {
                                                                        "onClick": [
                                                                        {
                                                                            "type": "propCall",
                                                                            "id": "handleRowClicked"
                                                                        }
                                                                        ]
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "repeat",
                                                                        "dataSource": {
                                                                            "type": "dynamic",
                                                                            "content": {
                                                                            "referenceType": "prop",
                                                                            "id": "columnDefs"
                                                                            }
                                                                        },
                                                                        "node": {
                                                                            "type": "element",
                                                                            "name": "table-cell",
                                                                            "elementType": "div",
                                                                            "attrs": {
                                                                            "className": {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                "referenceType": "comp",
                                                                                "id": "cellClass"
                                                                                }
                                                                            },
                                                                            "role": {
                                                                                "type": "static",
                                                                                "content": "gridcell"
                                                                            }
                                                                            },
                                                                            "children": [
                                                                            {
                                                                                "type": "conditional",
                                                                                "reference": {
                                                                                "type": "dynamic",
                                                                                "content": {
                                                                                    "referenceType": "local",
                                                                                    "id": "checkboxSelection"
                                                                                }
                                                                                },
                                                                                "value": true,
                                                                                "node": {
                                                                                "type": "element",
                                                                                "name": "row-checkbox",
                                                                                "elementType": "input",
                                                                                "attrs": {
                                                                                    "type": {
                                                                                    "type": "static",
                                                                                    "content": "checkbox"
                                                                                    },
                                                                                    "className": {
                                                                                    "type": "static",
                                                                                    "content": "ag-selection-checkbox"
                                                                                    }
                                                                                },
                                                                                "events": {
                                                                                    "onChange": [
                                                                                    {
                                                                                        "type": "propCall",
                                                                                        "id": "handleSelectionChanged"
                                                                                    }
                                                                                    ]
                                                                                }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "element",
                                                                                "name": "cell-content",
                                                                                "elementType": "div",
                                                                                "attrs": {
                                                                                "className": {
                                                                                    "type": "static",
                                                                                    "content": "ag-cell-wrapper"
                                                                                }
                                                                                },
                                                                                "children": [
                                                                                {
                                                                                    "type": "dynamic",
                                                                                    "content": {
                                                                                    "referenceType": "comp",
                                                                                    "id": "cellValue"
                                                                                    }
                                                                                }
                                                                                ]
                                                                            }
                                                                            ]
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        }
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "element",
                                "name": "sidebar",
                                "elementType": "aside",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex h-full flex-col overflow-auto border-l border-border"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "sidebar-header",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex-none px-4 py-4"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "reference": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "prop",
                                            "id": "focusedRow"
                                        }
                                        },
                                        "value": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "comp",
                                            "id": "hasFocusedRow"
                                        }
                                        },
                                        "node": {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "isEditable"
                                            }
                                        },
                                        "value": true,
                                        "node": {
                                            "type": "element",
                                            "name": "editable-form",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex flex-col gap-4"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "name-field-group",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "flex flex-col gap-2"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "name-field-label",
                                                    "elementType": "label",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-mmd font-medium"
                                                    },
                                                    "for": {
                                                        "type": "static",
                                                        "content": "sidebar-name-input"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "nameFieldLabel"
                                                        }
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "name-input-field",
                                                    "elementType": "input",
                                                    "attrs": {
                                                    "id": {
                                                        "type": "static",
                                                        "content": "sidebar-name-input"
                                                    },
                                                    "type": {
                                                        "type": "static",
                                                        "content": "text"
                                                    },
                                                    "className": {
                                                        "type": "static",
                                                        "content": "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                                                    },
                                                    "value": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "prop",
                                                        "id": "sidebarName"
                                                        }
                                                    },
                                                    "maxLength": {
                                                        "type": "static",
                                                        "content": "46"
                                                    },
                                                    "placeholder": {
                                                        "type": "static",
                                                        "content": "Edit name..."
                                                    }
                                                    },
                                                    "events": {
                                                    "onChange": [
                                                        {
                                                        "type": "propCall",
                                                        "id": "handleNameChange"
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "name-field-help-text",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-xs text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "nameFieldHelpText"
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "description-field-group",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "flex flex-col gap-2"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "description-field-label",
                                                    "elementType": "label",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-mmd font-medium"
                                                    },
                                                    "for": {
                                                        "type": "static",
                                                        "content": "sidebar-desc-input"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "descriptionFieldLabel"
                                                        }
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "description-textarea-field",
                                                    "elementType": "textarea",
                                                    "attrs": {
                                                    "id": {
                                                        "type": "static",
                                                        "content": "sidebar-desc-input"
                                                    },
                                                    "className": {
                                                        "type": "static",
                                                        "content": "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 h-24"
                                                    },
                                                    "value": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "prop",
                                                        "id": "sidebarDescription"
                                                        }
                                                    },
                                                    "placeholder": {
                                                        "type": "static",
                                                        "content": "Edit description..."
                                                    }
                                                    },
                                                    "events": {
                                                    "onChange": [
                                                        {
                                                        "type": "propCall",
                                                        "id": "handleDescriptionChange"
                                                        }
                                                    ]
                                                    }
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "description-field-help-text",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-xs text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "descriptionFieldHelpText"
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        "fallback": {
                                            "type": "element",
                                            "name": "readonly-header",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex flex-col gap-1"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "readonly-header-name",
                                                "elementType": "h3",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-base font-medium"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "rowName"
                                                    }
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "readonly-header-description",
                                                "elementType": "p",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-mmd text-muted-foreground"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "rowDescription"
                                                    }
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        }
                                    }
                                    ]
                                },
                                {
                                    "type": "conditional",
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "comp",
                                        "id": "showSeparator"
                                    }
                                    },
                                    "value": true,
                                    "node": {
                                    "type": "element",
                                    "name": "sidebar-separator",
                                    "elementType": "div",
                                    "attrs": {
                                        "className": {
                                        "type": "static",
                                        "content": "shrink-0 bg-border h-[1px] w-full"
                                        }
                                    }
                                    }
                                },
                                {
                                    "type": "element",
                                    "name": "sidebar-content",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex flex-1 flex-col gap-0 overflow-visible px-2"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "reference": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "prop",
                                            "id": "focusedRow"
                                        }
                                        },
                                        "value": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "comp",
                                            "id": "hasFocusedRow"
                                        }
                                        },
                                        "node": {
                                        "type": "element",
                                        "name": "parameters-section",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "flex h-full flex-col gap-4"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "parameters-group",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "flex-1"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "parameters-content",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "h-full pb-4"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "parameters-container",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "flex h-full flex-col gap-4"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "conditional",
                                                        "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "comp",
                                                            "id": "hasParameters"
                                                            }
                                                        },
                                                        "value": true,
                                                        "node": {
                                                            "type": "element",
                                                            "name": "parameters-header",
                                                            "elementType": "div",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "flex flex-col gap-1.5"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "parameters-title",
                                                                "elementType": "h3",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "mt-2 text-base font-medium"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Parameters"
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "name": "parameters-subtitle",
                                                                "elementType": "p",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "text-mmd text-muted-foreground"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "static",
                                                                    "content": "Manage inputs for this tool"
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "repeat",
                                                        "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "prop",
                                                            "id": "actionArgs"
                                                            }
                                                        },
                                                        "node": {
                                                            "type": "element",
                                                            "name": "parameter-field",
                                                            "elementType": "div",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "flex flex-col gap-2"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "parameter-label",
                                                                "elementType": "label",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "flex text-sm font-medium"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "display_name"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "conditional",
                                                                    "reference": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "local",
                                                                        "id": "description"
                                                                    }
                                                                    },
                                                                    "value": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "comp",
                                                                        "id": "hasDescription"
                                                                    }
                                                                    },
                                                                    "node": {
                                                                    "type": "element",
                                                                    "name": "parameter-info-tooltip",
                                                                    "elementType": "div",
                                                                    "attrs": {
                                                                        "className": {
                                                                        "type": "static",
                                                                        "content": "flex items-center text-sm font-medium hover:cursor-help"
                                                                        },
                                                                        "title": {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                            "referenceType": "local",
                                                                            "id": "description"
                                                                        }
                                                                        }
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "name": "info-icon",
                                                                        "elementType": "svg",
                                                                        "attrs": {
                                                                            "className": {
                                                                            "type": "static",
                                                                            "content": "ml-1.5 h-4 w-4 text-muted-foreground"
                                                                            },
                                                                            "viewBox": {
                                                                            "type": "static",
                                                                            "content": "0 0 24 24"
                                                                            },
                                                                            "fill": {
                                                                            "type": "static",
                                                                            "content": "none"
                                                                            },
                                                                            "stroke": {
                                                                            "type": "static",
                                                                            "content": "currentColor"
                                                                            }
                                                                        },
                                                                        "children": [
                                                                            {
                                                                            "type": "element",
                                                                            "name": "info-path",
                                                                            "elementType": "path",
                                                                            "attrs": {
                                                                                "d": {
                                                                                "type": "static",
                                                                                "content": "m9 12 2 2 4-4"
                                                                                }
                                                                            }
                                                                            }
                                                                        ]
                                                                        }
                                                                    ]
                                                                    }
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "name": "parameter-input",
                                                                "elementType": "input",
                                                                "attrs": {
                                                                "type": {
                                                                    "type": "static",
                                                                    "content": "text"
                                                                },
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                                                                },
                                                                "disabled": {
                                                                    "type": "static",
                                                                    "content": true
                                                                },
                                                                "placeholder": {
                                                                    "type": "static",
                                                                    "content": "Input controlled by the agent"
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        ]
                                        }
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "conditional",
                                "reference": {
                                "type": "dynamic",
                                "content": {
                                    "referenceType": "prop",
                                    "id": "pagination"
                                }
                                },
                                "value": true,
                                "node": {
                                "type": "element",
                                "name": "table-options",
                                "elementType": "div",
                                "attrs": {
                                    "className": {
                                    "type": "static",
                                    "content": "absolute bottom-3 left-6"
                                    }
                                },
                                "children": [
                                    {
                                    "type": "element",
                                    "name": "table-options-container",
                                    "elementType": "div",
                                    "attrs": {
                                        "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-3"
                                        }
                                    },
                                    "children": [
                                        {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "canAddRows"
                                            }
                                        },
                                        "value": true,
                                        "node": {
                                            "type": "element",
                                            "name": "add-row-button-container",
                                            "elementType": "div",
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "add-row-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
                                                },
                                                "title": {
                                                    "type": "static",
                                                    "content": "Add a new row"
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "addRow"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "add-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "h-5 w-5 text-primary transition-all"
                                                    },
                                                    "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                    },
                                                    "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "add-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "M5 12h14m-7-7v14"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        },
                                        {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "prop",
                                            "id": "onDuplicate"
                                            }
                                        },
                                        "value": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "hasDuplicateFunction"
                                            }
                                        },
                                        "node": {
                                            "type": "element",
                                            "name": "duplicate-row-button-container",
                                            "elementType": "div",
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "duplicate-row-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
                                                },
                                                "title": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "duplicateTooltip"
                                                    }
                                                },
                                                "disabled": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "isDisabledDuplicate"
                                                    }
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "onDuplicate"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "duplicate-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "duplicateIconClass"
                                                        }
                                                    },
                                                    "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                    },
                                                    "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "duplicate-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2m4-2a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h4z"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        },
                                        {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "prop",
                                            "id": "onDelete"
                                            }
                                        },
                                        "value": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "hasDeleteFunction"
                                            }
                                        },
                                        "node": {
                                            "type": "element",
                                            "name": "delete-row-button-container",
                                            "elementType": "div",
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "delete-row-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
                                                },
                                                "title": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "deleteTooltip"
                                                    }
                                                },
                                                "disabled": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "isDisabledDelete"
                                                    }
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "onDelete"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "delete-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "deleteIconClass"
                                                        }
                                                    },
                                                    "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                    },
                                                    "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "delete-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "m3 6 3 0m0 0 18 0M6 6v14a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V6m-6 0V4a2 2 0 0 0-2-2H8a2 2 0 0 0-2 2v2"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        },
                                        {
                                        "type": "element",
                                        "name": "reset-columns-button-container",
                                        "elementType": "div",
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "reset-columns-button",
                                            "elementType": "button",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50"
                                                },
                                                "title": {
                                                "type": "static",
                                                "content": "Reset Columns"
                                                },
                                                "disabled": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "comp",
                                                    "id": "isResetDisabled"
                                                }
                                                }
                                            },
                                            "events": {
                                                "onClick": [
                                                {
                                                    "type": "propCall",
                                                    "id": "resetGrid"
                                                }
                                                ]
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "reset-icon",
                                                "elementType": "svg",
                                                "attrs": {
                                                    "className": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "comp",
                                                        "id": "resetIconClass"
                                                    }
                                                    },
                                                    "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                    },
                                                    "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                    },
                                                    "strokeWidth": {
                                                    "type": "static",
                                                    "content": "2"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "reset-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                        "d": {
                                                        "type": "static",
                                                        "content": "m3 7 5 5 5-5"
                                                        }
                                                    }
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        ]
                                        },
                                        {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "prop",
                                            "id": "paginationInfo"
                                            }
                                        },
                                        "value": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "hasPaginationInfo"
                                            }
                                        },
                                        "node": {
                                            "type": "element",
                                            "name": "pagination-info",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "ml-2 text-xs text-muted-foreground"
                                            },
                                            "title": {
                                                "type": "static",
                                                "content": "Pagination Info"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "pagination-text",
                                                "elementType": "span",
                                                "children": [
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "paginationInfo"
                                                    }
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        }
                                    ]
                                    }
                                ]
                                }
                            }
                            ]
                        },
                        "stateDefinitions": {
                            "searchQuery": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "selectedRows": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "focusedRow": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "sidebarName": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "sidebarDescription": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "columnStateChange": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "data": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "isAction": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "open": {
                            "type": "boolean",
                            "defaultValue": true
                            },
                            "placeholder": {
                            "type": "string",
                            "defaultValue": "Search tools..."
                            },
                            "pagination": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "paginationInfo": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "darkMode": {
                            "type": "boolean",
                            "defaultValue": false
                            }
                        },
                        "propDefinitions": {
                            "rows": {
                            "type": "array"
                            },
                            "data": {
                            "type": "array"
                            },
                            "setData": {
                            "type": "func"
                            },
                            "isAction": {
                            "type": "boolean"
                            },
                            "placeholder": {
                            "type": "string"
                            },
                            "open": {
                            "type": "boolean"
                            },
                            "handleOnNewValue": {
                            "type": "func"
                            },
                            "columnDefs": {
                            "type": "array"
                            },
                            "rowData": {
                            "type": "array"
                            },
                            "quickFilterText": {
                            "type": "string"
                            },
                            "rowSelection": {
                            "type": "string"
                            },
                            "suppressRowClickSelection": {
                            "type": "boolean"
                            },
                            "headerHeight": {
                            "type": "number"
                            },
                            "rowHeight": {
                            "type": "number"
                            },
                            "onSelectionChanged": {
                            "type": "func"
                            },
                            "tableOptions": {
                            "type": "object"
                            },
                            "onRowClicked": {
                            "type": "func"
                            },
                            "getRowId": {
                            "type": "func"
                            },
                            "searchQuery": {
                            "type": "string"
                            },
                            "handleSearchChange": {
                            "type": "func"
                            },
                            "selectedRows": {
                            "type": "array"
                            },
                            "focusedRow": {
                            "type": "object"
                            },
                            "sidebarName": {
                            "type": "string"
                            },
                            "sidebarDescription": {
                            "type": "string"
                            },
                            "handleNameChange": {
                            "type": "func"
                            },
                            "handleDescriptionChange": {
                            "type": "func"
                            },
                            "actionArgs": {
                            "type": "array"
                            },
                            "addRow": {
                            "type": "func"
                            },
                            "onDuplicate": {
                            "type": "func"
                            },
                            "onDelete": {
                            "type": "func"
                            },
                            "resetGrid": {
                            "type": "func"
                            },
                            "pagination": {
                            "type": "boolean"
                            },
                            "paginationInfo": {
                            "type": "string"
                            }
                        },
                        "mappings": {
                            "components": {
                            "hasNoData": "props.rowData.length === 0",
                            "hasNoColumns": "props.columnDefs.length === 0",
                            "gridThemeClass": "state.darkMode ? 'ag-theme-quartz-dark ag-theme-shadcn flex h-full flex-col relative' : 'ag-theme-quartz ag-theme-shadcn flex h-full flex-col relative'",
                            "hasFocusedRow": "props.focusedRow !== null",
                            "isEditable": "props.isAction || (!props.focusedRow?.readonly)",
                            "nameFieldLabel": "props.isAction ? 'Tool name' : 'Name'",
                            "nameFieldHelpText": "props.isAction ? 'Used as the function name when this flow is exposed to clients.' : 'Used as the function name when this tool is exposed to the agent.'",
                            "descriptionFieldLabel": "props.isAction ? 'Tool description' : 'Description'",
                            "descriptionFieldHelpText": "props.isAction ? 'This is the description for the tool exposed to a client.' : 'This is the description for the tool exposed to the agents.'",
                            "rowName": "props.focusedRow?.display_name || props.focusedRow?.name || ''",
                            "rowDescription": "props.focusedRow?.display_description || props.focusedRow?.description",
                            "showSeparator": "!props.isAction",
                            "hasParameters": "props.actionArgs.length > 0",
                            "canAddRows": "props.addRow && !props.tableOptions?.block_add",
                            "hasDuplicateFunction": "props.onDuplicate !== undefined",
                            "hasDeleteFunction": "props.onDelete !== undefined",
                            "duplicateTooltip": "props.selectedRows.length === 0 ? 'Select items to duplicate' : 'Duplicate selected items'",
                            "deleteTooltip": "props.selectedRows.length === 0 ? 'Select items to delete' : 'Delete selected items'",
                            "isDisabledDuplicate": "props.selectedRows.length === 0",
                            "isDisabledDelete": "props.selectedRows.length === 0",
                            "duplicateIconClass": "props.selectedRows.length > 0 ? 'h-5 w-5 transition-all text-primary' : 'h-5 w-5 transition-all cursor-not-allowed text-placeholder-foreground'",
                            "deleteIconClass": "props.selectedRows.length === 0 ? 'h-5 w-5 transition-all cursor-not-allowed text-placeholder-foreground' : 'h-5 w-5 transition-all text-primary hover:text-status-red'",
                            "isResetDisabled": "!state.columnStateChange",
                            "resetIconClass": "state.columnStateChange ? 'h-5 w-5 transition-all text-primary' : 'h-5 w-5 transition-all cursor-not-allowed text-placeholder-foreground'",
                            "hasPaginationInfo": "props.paginationInfo !== undefined && props.paginationInfo !== ''",
                            "cellClass": "local.cellClass || 'ag-cell ag-cell-not-inline-editing ag-cell-with-height ag-cell-value'",
                            "cellValue": "local.cellValue",
                            "hasDescription": "local.description !== undefined && local.description !== ''"
                            }
                        }
                        }
				},
				{
					"id": "form_builder",
					"type": "interface",
					"name": "FormBuilder",
					"description": "Dynamic form generation with validation, conditional fields, and custom input types",
					"component_path": "src/frontend/src/components/FormBuilder",
					"uidl_definition_physical": {
                        "root": {
                            "type": "element",
                            "name": "form-builder-container",
                            "elementType": "div",
                            "attrs": {
                            "className": {
                                "type": "static",
                                "content": "h-full w-full flex flex-col bg-background"
                            }
                            },
                            "children": [
                            {
                                "type": "element",
                                "name": "form-builder-header",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex items-center justify-between p-4 border-b border-border bg-card"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "header-title-section",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-3"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "form-builder-icon",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 bg-primary/10 rounded-md"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "form-icon-svg",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "20"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "20"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "text-primary"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "form-icon-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "header-title-text",
                                        "elementType": "h2",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "text-xl font-semibold text-foreground"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "static",
                                            "content": "Form Builder"
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "header-actions",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-2"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "preview-toggle-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "className": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "previewButtonClass"
                                            }
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Toggle Preview Mode"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleTogglePreview"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "preview-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "preview-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "preview-circle",
                                                "elementType": "circle",
                                                "attrs": {
                                                "cx": {
                                                    "type": "static",
                                                    "content": "12"
                                                },
                                                "cy": {
                                                    "type": "static",
                                                    "content": "12"
                                                },
                                                "r": {
                                                    "type": "static",
                                                    "content": "3"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "refresh-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 hover:bg-muted rounded-md transition-colors"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Refresh Form Builder"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleRefresh"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "refresh-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "comp",
                                                "id": "refreshIconClass"
                                                }
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "refresh-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-2",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-3",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 8-3-3-3 3"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-4",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m3 16 3 3 3-3"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "element",
                                "name": "form-builder-main-content",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex-1 flex overflow-hidden"
                                }
                                },
                                "children": [
                                {
                                    "type": "conditional",
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "prop",
                                        "id": "isPreviewMode"
                                    }
                                    },
                                    "value": false,
                                    "node": {
                                    "type": "element",
                                    "name": "form-builder-design-mode",
                                    "elementType": "div",
                                    "attrs": {
                                        "className": {
                                        "type": "static",
                                        "content": "flex flex-1"
                                        }
                                    },
                                    "children": [
                                        {
                                        "type": "element",
                                        "name": "field-palette",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "w-64 bg-card border-r border-border p-4 overflow-y-auto"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "palette-header",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "mb-4"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "palette-title",
                                                "elementType": "h3",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "text-sm font-semibold text-foreground mb-2"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "static",
                                                    "content": "Form Elements"
                                                    }
                                                ]
                                                },
                                                {
                                                "type": "element",
                                                "name": "palette-search",
                                                "elementType": "input",
                                                "attrs": {
                                                    "type": {
                                                    "type": "static",
                                                    "content": "text"
                                                    },
                                                    "placeholder": {
                                                    "type": "static",
                                                    "content": "Search elements..."
                                                    },
                                                    "className": {
                                                    "type": "static",
                                                    "content": "w-full px-3 py-2 text-sm border border-input rounded-md bg-background"
                                                    },
                                                    "value": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "prop",
                                                        "id": "paletteSearch"
                                                    }
                                                    }
                                                },
                                                "events": {
                                                    "onChange": [
                                                    {
                                                        "type": "propCall",
                                                        "id": "handlePaletteSearch"
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            },
                                            {
                                            "type": "element",
                                            "name": "field-groups",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "space-y-6"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "basic-fields-group",
                                                "elementType": "div",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "basic-fields-title",
                                                    "elementType": "h4",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "text-xs font-medium text-muted-foreground uppercase tracking-wider mb-3"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Basic Fields"
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "name": "basic-fields-list",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "space-y-2"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "repeat",
                                                        "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "comp",
                                                            "id": "basicFieldTypes"
                                                            }
                                                        },
                                                        "node": {
                                                            "type": "element",
                                                            "name": "draggable-field-item",
                                                            "elementType": "div",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "p-3 border border-border rounded-md cursor-move hover:bg-accent hover:border-accent-foreground/20 transition-all duration-200 flex items-center gap-2"
                                                            },
                                                            "draggable": {
                                                                "type": "static",
                                                                "content": true
                                                            }
                                                            },
                                                            "events": {
                                                            "onDragStart": [
                                                                {
                                                                "type": "propCall",
                                                                "id": "handleDragStart"
                                                                }
                                                            ]
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "field-type-icon",
                                                                "elementType": "div",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "w-4 h-4"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "icon"
                                                                    }
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "name": "field-type-label",
                                                                "elementType": "span",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "text-sm font-medium"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "label"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                ]
                                                },
                                                {
                                                "type": "element",
                                                "name": "advanced-fields-group",
                                                "elementType": "div",
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "advanced-fields-title",
                                                    "elementType": "h4",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "text-xs font-medium text-muted-foreground uppercase tracking-wider mb-3"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Advanced Fields"
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "name": "advanced-fields-list",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "space-y-2"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "repeat",
                                                        "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "comp",
                                                            "id": "advancedFieldTypes"
                                                            }
                                                        },
                                                        "node": {
                                                            "type": "element",
                                                            "name": "draggable-advanced-field-item",
                                                            "elementType": "div",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "p-3 border border-border rounded-md cursor-move hover:bg-accent hover:border-accent-foreground/20 transition-all duration-200 flex items-center gap-2"
                                                            },
                                                            "draggable": {
                                                                "type": "static",
                                                                "content": true
                                                            }
                                                            },
                                                            "events": {
                                                            "onDragStart": [
                                                                {
                                                                "type": "propCall",
                                                                "id": "handleDragStart"
                                                                }
                                                            ]
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "advanced-field-type-icon",
                                                                "elementType": "div",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "w-4 h-4"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "icon"
                                                                    }
                                                                }
                                                                ]
                                                            },
                                                            {
                                                                "type": "element",
                                                                "name": "advanced-field-type-label",
                                                                "elementType": "span",
                                                                "attrs": {
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "text-sm font-medium"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "label"
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        }
                                                    ]
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        ]
                                        },
                                        {
                                        "type": "element",
                                        "name": "form-canvas",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "flex-1 bg-muted/30 p-6 overflow-auto"
                                            }
                                        },
                                        "events": {
                                            "onDrop": [
                                            {
                                                "type": "propCall",
                                                "id": "handleDrop"
                                            }
                                            ],
                                            "onDragOver": [
                                            {
                                                "type": "propCall",
                                                "id": "handleDragOver"
                                            }
                                            ]
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "form-canvas-container",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "max-w-2xl mx-auto"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "conditional",
                                                "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "hasFormFields"
                                                    }
                                                },
                                                "value": false,
                                                "node": {
                                                    "type": "element",
                                                    "name": "empty-canvas-state",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "flex flex-col items-center justify-center h-96 text-center border-2 border-dashed border-border rounded-lg bg-background/50"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "empty-state-icon",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "mb-4 p-4 bg-muted rounded-full"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "form-empty-icon",
                                                            "elementType": "svg",
                                                            "attrs": {
                                                            "width": {
                                                                "type": "static",
                                                                "content": "48"
                                                            },
                                                            "height": {
                                                                "type": "static",
                                                                "content": "48"
                                                            },
                                                            "viewBox": {
                                                                "type": "static",
                                                                "content": "0 0 24 24"
                                                            },
                                                            "fill": {
                                                                "type": "static",
                                                                "content": "none"
                                                            },
                                                            "stroke": {
                                                                "type": "static",
                                                                "content": "currentColor"
                                                            },
                                                            "strokeWidth": {
                                                                "type": "static",
                                                                "content": "1.5"
                                                            },
                                                            "className": {
                                                                "type": "static",
                                                                "content": "text-muted-foreground"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "form-empty-path",
                                                                "elementType": "path",
                                                                "attrs": {
                                                                "d": {
                                                                    "type": "static",
                                                                    "content": "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                                                                }
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "empty-state-title",
                                                        "elementType": "h3",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-lg font-semibold text-foreground mb-2"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Start Building Your Form"
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "empty-state-description",
                                                        "elementType": "p",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-muted-foreground max-w-sm"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Drag and drop form elements from the sidebar to create your dynamic form. Add validation rules, conditional logic, and custom styling."
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                },
                                                "fallback": {
                                                    "type": "element",
                                                    "name": "form-fields-container",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "space-y-6 bg-background p-6 rounded-lg border border-border shadow-sm"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "form-header-section",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "border-b border-border pb-4 mb-6"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "form-title-input",
                                                            "elementType": "input",
                                                            "attrs": {
                                                            "type": {
                                                                "type": "static",
                                                                "content": "text"
                                                            },
                                                            "placeholder": {
                                                                "type": "static",
                                                                "content": "Form Title"
                                                            },
                                                            "className": {
                                                                "type": "static",
                                                                "content": "text-2xl font-bold bg-transparent border-none outline-none w-full placeholder:text-muted-foreground"
                                                            },
                                                            "value": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "prop",
                                                                "id": "formTitle"
                                                                }
                                                            }
                                                            },
                                                            "events": {
                                                            "onChange": [
                                                                {
                                                                "type": "propCall",
                                                                "id": "handleFormTitleChange"
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        {
                                                            "type": "element",
                                                            "name": "form-description-textarea",
                                                            "elementType": "textarea",
                                                            "attrs": {
                                                            "placeholder": {
                                                                "type": "static",
                                                                "content": "Form description (optional)"
                                                            },
                                                            "className": {
                                                                "type": "static",
                                                                "content": "mt-2 bg-transparent border-none outline-none w-full placeholder:text-muted-foreground text-muted-foreground resize-none"
                                                            },
                                                            "rows": {
                                                                "type": "static",
                                                                "content": "2"
                                                            },
                                                            "value": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "prop",
                                                                "id": "formDescription"
                                                                }
                                                            }
                                                            },
                                                            "events": {
                                                            "onChange": [
                                                                {
                                                                "type": "propCall",
                                                                "id": "handleFormDescriptionChange"
                                                                }
                                                            ]
                                                            }
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "repeat",
                                                        "dataSource": {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "prop",
                                                            "id": "formFields"
                                                        }
                                                        },
                                                        "node": {
                                                        "type": "element",
                                                        "name": "form-field-wrapper",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "comp",
                                                                "id": "fieldWrapperClass"
                                                            }
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "field-toolbar",
                                                            "elementType": "div",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "absolute -top-2 -right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex gap-1 z-10"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "name": "field-settings-button",
                                                                "elementType": "button",
                                                                "attrs": {
                                                                    "className": {
                                                                    "type": "static",
                                                                    "content": "w-6 h-6 bg-primary text-primary-foreground rounded-full hover:bg-primary/90 flex items-center justify-center text-xs"
                                                                    },
                                                                    "title": {
                                                                    "type": "static",
                                                                    "content": "Field Settings"
                                                                    }
                                                                },
                                                                "events": {
                                                                    "onClick": [
                                                                    {
                                                                        "type": "propCall",
                                                                        "id": "handleFieldSettings"
                                                                    }
                                                                    ]
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "name": "settings-icon",
                                                                    "elementType": "svg",
                                                                    "attrs": {
                                                                        "width": {
                                                                        "type": "static",
                                                                        "content": "12"
                                                                        },
                                                                        "height": {
                                                                        "type": "static",
                                                                        "content": "12"
                                                                        },
                                                                        "viewBox": {
                                                                        "type": "static",
                                                                        "content": "0 0 24 24"
                                                                        },
                                                                        "fill": {
                                                                        "type": "static",
                                                                        "content": "none"
                                                                        },
                                                                        "stroke": {
                                                                        "type": "static",
                                                                        "content": "currentColor"
                                                                        },
                                                                        "strokeWidth": {
                                                                        "type": "static",
                                                                        "content": "2"
                                                                        }
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "name": "settings-path",
                                                                        "elementType": "path",
                                                                        "attrs": {
                                                                            "d": {
                                                                            "type": "static",
                                                                            "content": "M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"
                                                                            }
                                                                        }
                                                                        },
                                                                        {
                                                                        "type": "element",
                                                                        "name": "settings-circle",
                                                                        "elementType": "circle",
                                                                        "attrs": {
                                                                            "cx": {
                                                                            "type": "static",
                                                                            "content": "12"
                                                                            },
                                                                            "cy": {
                                                                            "type": "static",
                                                                            "content": "12"
                                                                            },
                                                                            "r": {
                                                                            "type": "static",
                                                                            "content": "3"
                                                                            }
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                ]
                                                                },
                                                                {
                                                                "type": "element",
                                                                "name": "field-delete-button",
                                                                "elementType": "button",
                                                                "attrs": {
                                                                    "className": {
                                                                    "type": "static",
                                                                    "content": "w-6 h-6 bg-destructive text-destructive-foreground rounded-full hover:bg-destructive/90 flex items-center justify-center text-xs"
                                                                    },
                                                                    "title": {
                                                                    "type": "static",
                                                                    "content": "Delete Field"
                                                                    }
                                                                },
                                                                "events": {
                                                                    "onClick": [
                                                                    {
                                                                        "type": "propCall",
                                                                        "id": "handleFieldDelete"
                                                                    }
                                                                    ]
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "name": "delete-icon",
                                                                    "elementType": "svg",
                                                                    "attrs": {
                                                                        "width": {
                                                                        "type": "static",
                                                                        "content": "12"
                                                                        },
                                                                        "height": {
                                                                        "type": "static",
                                                                        "content": "12"
                                                                        },
                                                                        "viewBox": {
                                                                        "type": "static",
                                                                        "content": "0 0 24 24"
                                                                        },
                                                                        "fill": {
                                                                        "type": "static",
                                                                        "content": "none"
                                                                        },
                                                                        "stroke": {
                                                                        "type": "static",
                                                                        "content": "currentColor"
                                                                        },
                                                                        "strokeWidth": {
                                                                        "type": "static",
                                                                        "content": "2"
                                                                        }
                                                                    },
                                                                    "children": [
                                                                        {
                                                                        "type": "element",
                                                                        "name": "delete-path",
                                                                        "elementType": "path",
                                                                        "attrs": {
                                                                            "d": {
                                                                            "type": "static",
                                                                            "content": "M18 6 6 18M6 6l12 12"
                                                                            }
                                                                        }
                                                                        }
                                                                    ]
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "comp",
                                                                "id": "renderFormField"
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                }
                                            ]
                                            }
                                        ]
                                        },
                                        {
                                        "type": "element",
                                        "name": "field-properties-panel",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "comp",
                                                "id": "propertiesPanelClass"
                                            }
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "conditional",
                                            "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "prop",
                                                "id": "selectedField"
                                                }
                                            },
                                            "value": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "comp",
                                                "id": "hasSelectedField"
                                                }
                                            },
                                            "node": {
                                                "type": "element",
                                                "name": "field-properties-content",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "h-full"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "properties-header",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "p-4 border-b border-border"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "properties-title",
                                                        "elementType": "h3",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-sm font-semibold text-foreground"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Field Properties"
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "properties-form",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "p-4 space-y-4 overflow-y-auto"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "field-label-property",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "space-y-2"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "field-label-property-label",
                                                            "elementType": "label",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "text-sm font-medium text-foreground"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Field Label"
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "name": "field-label-input",
                                                            "elementType": "input",
                                                            "attrs": {
                                                            "type": {
                                                                "type": "static",
                                                                "content": "text"
                                                            },
                                                            "className": {
                                                                "type": "static",
                                                                "content": "w-full px-3 py-2 text-sm border border-input rounded-md bg-background"
                                                            },
                                                            "value": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "prop",
                                                                "id": "selectedFieldLabel"
                                                                }
                                                            }
                                                            },
                                                            "events": {
                                                            "onChange": [
                                                                {
                                                                "type": "propCall",
                                                                "id": "handleFieldLabelChange"
                                                                }
                                                            ]
                                                            }
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "field-required-property",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "flex items-center space-x-2"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "field-required-checkbox",
                                                            "elementType": "input",
                                                            "attrs": {
                                                            "type": {
                                                                "type": "static",
                                                                "content": "checkbox"
                                                            },
                                                            "id": {
                                                                "type": "static",
                                                                "content": "field-required"
                                                            },
                                                            "checked": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "prop",
                                                                "id": "selectedFieldRequired"
                                                                }
                                                            }
                                                            },
                                                            "events": {
                                                            "onChange": [
                                                                {
                                                                "type": "propCall",
                                                                "id": "handleFieldRequiredChange"
                                                                }
                                                            ]
                                                            }
                                                        },
                                                        {
                                                            "type": "element",
                                                            "name": "field-required-label",
                                                            "elementType": "label",
                                                            "attrs": {
                                                            "for": {
                                                                "type": "static",
                                                                "content": "field-required"
                                                            },
                                                            "className": {
                                                                "type": "static",
                                                                "content": "text-sm font-medium text-foreground cursor-pointer"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Required Field"
                                                            }
                                                            ]
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                }
                                                ]
                                            },
                                            "fallback": {
                                                "type": "element",
                                                "name": "no-field-selected",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "flex flex-col items-center justify-center h-full text-center p-8"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "no-selection-icon",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "mb-4 p-3 bg-muted rounded-full"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "cursor-icon",
                                                        "elementType": "svg",
                                                        "attrs": {
                                                        "width": {
                                                            "type": "static",
                                                            "content": "24"
                                                        },
                                                        "height": {
                                                            "type": "static",
                                                            "content": "24"
                                                        },
                                                        "viewBox": {
                                                            "type": "static",
                                                            "content": "0 0 24 24"
                                                        },
                                                        "fill": {
                                                            "type": "static",
                                                            "content": "none"
                                                        },
                                                        "stroke": {
                                                            "type": "static",
                                                            "content": "currentColor"
                                                        },
                                                        "strokeWidth": {
                                                            "type": "static",
                                                            "content": "1.5"
                                                        },
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-muted-foreground"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "cursor-path",
                                                            "elementType": "path",
                                                            "attrs": {
                                                            "d": {
                                                                "type": "static",
                                                                "content": "m3 3 7.07 16.97 2.51-7.39 7.39-2.51L3 3z"
                                                            }
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "no-selection-title",
                                                    "elementType": "h3",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-sm font-medium text-foreground mb-2"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "Select a Field"
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "no-selection-description",
                                                    "elementType": "p",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-xs text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "Click on a form field to edit its properties and validation rules."
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            }
                                        ]
                                        }
                                    ]
                                    },
                                    "fallback": {
                                    "type": "element",
                                    "name": "form-preview-mode",
                                    "elementType": "div",
                                    "attrs": {
                                        "className": {
                                        "type": "static",
                                        "content": "flex-1 bg-background p-6 overflow-auto"
                                        }
                                    },
                                    "children": [
                                        {
                                        "type": "element",
                                        "name": "preview-container",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "max-w-2xl mx-auto"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "preview-form",
                                            "elementType": "form",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "space-y-6 bg-card p-6 rounded-lg border border-border shadow-sm"
                                                }
                                            },
                                            "events": {
                                                "onSubmit": [
                                                {
                                                    "type": "propCall",
                                                    "id": "handleFormPreviewSubmit"
                                                }
                                                ]
                                            },
                                            "children": [
                                                {
                                                "type": "conditional",
                                                "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "formTitle"
                                                    }
                                                },
                                                "value": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "hasFormTitle"
                                                    }
                                                },
                                                "node": {
                                                    "type": "element",
                                                    "name": "preview-form-header",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "border-b border-border pb-4 mb-6"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "preview-form-title",
                                                        "elementType": "h2",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-2xl font-bold text-foreground"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "prop",
                                                            "id": "formTitle"
                                                            }
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "conditional",
                                                        "reference": {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "prop",
                                                            "id": "formDescription"
                                                        }
                                                        },
                                                        "value": {
                                                        "type": "dynamic",
                                                        "content": {
                                                            "referenceType": "comp",
                                                            "id": "hasFormDescription"
                                                        }
                                                        },
                                                        "node": {
                                                        "type": "element",
                                                        "name": "preview-form-description",
                                                        "elementType": "p",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "mt-2 text-muted-foreground"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "prop",
                                                                "id": "formDescription"
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    }
                                                    ]
                                                }
                                                },
                                                {
                                                "type": "repeat",
                                                "dataSource": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "formFields"
                                                    }
                                                },
                                                "node": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "renderPreviewField"
                                                    }
                                                }
                                                },
                                                {
                                                "type": "element",
                                                "name": "preview-submit-section",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "flex justify-end gap-3 pt-4 border-t border-border"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "preview-reset-button",
                                                    "elementType": "button",
                                                    "attrs": {
                                                        "type": {
                                                        "type": "static",
                                                        "content": "button"
                                                        },
                                                        "className": {
                                                        "type": "static",
                                                        "content": "px-4 py-2 text-sm font-medium text-muted-foreground border border-input rounded-md hover:bg-muted transition-colors"
                                                        }
                                                    },
                                                    "events": {
                                                        "onClick": [
                                                        {
                                                            "type": "propCall",
                                                            "id": "handlePreviewReset"
                                                        }
                                                        ]
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Reset"
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "name": "preview-submit-button",
                                                    "elementType": "button",
                                                    "attrs": {
                                                        "type": {
                                                        "type": "static",
                                                        "content": "submit"
                                                        },
                                                        "className": {
                                                        "type": "static",
                                                        "content": "px-4 py-2 text-sm font-medium bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "Submit Form"
                                                        }
                                                    ]
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        ]
                                        }
                                    ]
                                    }
                                }
                                ]
                            }
                            ]
                        },
                        "stateDefinitions": {
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isPreviewMode": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "formTitle": {
                            "type": "string",
                            "defaultValue": "Untitled Form"
                            },
                            "formDescription": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "formFields": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "selectedField": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "selectedFieldLabel": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "selectedFieldRequired": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "paletteSearch": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "draggedFieldType": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "showPropertiesPanel": {
                            "type": "boolean",
                            "defaultValue": true
                            }
                        },
                        "propDefinitions": {
                            "isLoading": {
                            "type": "boolean"
                            },
                            "isPreviewMode": {
                            "type": "boolean"
                            },
                            "formTitle": {
                            "type": "string"
                            },
                            "formDescription": {
                            "type": "string"
                            },
                            "formFields": {
                            "type": "array"
                            },
                            "selectedField": {
                            "type": "object"
                            },
                            "selectedFieldLabel": {
                            "type": "string"
                            },
                            "selectedFieldRequired": {
                            "type": "boolean"
                            },
                            "paletteSearch": {
                            "type": "string"
                            },
                            "showPropertiesPanel": {
                            "type": "boolean"
                            },
                            "handleRefresh": {
                            "type": "func"
                            },
                            "handleTogglePreview": {
                            "type": "func"
                            },
                            "handlePaletteSearch": {
                            "type": "func"
                            },
                            "handleDragStart": {
                            "type": "func"
                            },
                            "handleDrop": {
                            "type": "func"
                            },
                            "handleDragOver": {
                            "type": "func"
                            },
                            "handleFormTitleChange": {
                            "type": "func"
                            },
                            "handleFormDescriptionChange": {
                            "type": "func"
                            },
                            "handleFieldSettings": {
                            "type": "func"
                            },
                            "handleFieldDelete": {
                            "type": "func"
                            },
                            "handleFieldLabelChange": {
                            "type": "func"
                            },
                            "handleFieldRequiredChange": {
                            "type": "func"
                            },
                            "handleFormPreviewSubmit": {
                            "type": "func"
                            },
                            "handlePreviewReset": {
                            "type": "func"
                            }
                        },
                        "mappings": {
                            "components": {
                            "previewButtonClass": "state.isPreviewMode ? 'p-2 bg-primary text-primary-foreground rounded-md transition-colors' : 'p-2 hover:bg-muted rounded-md transition-colors'",
                            "refreshIconClass": "state.isLoading ? 'animate-spin' : ''",
                            "hasFormFields": "state.formFields.length > 0",
                            "fieldWrapperClass": "'relative group border border-transparent hover:border-border/50 rounded-lg p-4 transition-all duration-200 ' + (local.isSelected ? 'border-primary bg-primary/5' : '')",
                            "propertiesPanelClass": "state.showPropertiesPanel ? 'w-80 bg-card border-l border-border overflow-hidden' : 'w-0 overflow-hidden'",
                            "hasSelectedField": "state.selectedField !== null",
                            "hasFormTitle": "state.formTitle !== ''",
                            "hasFormDescription": "state.formDescription !== ''",
                            "renderFormField": "local.fieldComponent",
                            "renderPreviewField": "local.previewFieldComponent",
                            "basicFieldTypes": "[{type: 'text', label: 'Text Input', icon: 'Type'}, {type: 'email', label: 'Email', icon: 'Mail'}, {type: 'number', label: 'Number', icon: 'Hash'}, {type: 'textarea', label: 'Textarea', icon: 'AlignLeft'}, {type: 'select', label: 'Select', icon: 'ChevronDown'}, {type: 'checkbox', label: 'Checkbox', icon: 'Check'}, {type: 'radio', label: 'Radio Group', icon: 'Circle'}]",
                            "advancedFieldTypes": "[{type: 'date', label: 'Date Picker', icon: 'Calendar'}, {type: 'file', label: 'File Upload', icon: 'Upload'}, {type: 'range', label: 'Range Slider', icon: 'Minus'}, {type: 'color', label: 'Color Picker', icon: 'Palette'}, {type: 'section', label: 'Section Divider', icon: 'Separator'}, {type: 'html', label: 'Custom HTML', icon: 'Code'}]"
                            }
                        }
                        }
				},
				{
					"id": "code_editor",
					"type": "interface",
					"name": "CodeEditor",
					"description": "Integrated code editor with syntax highlighting, auto-completion, and debugging support",
					"component_path": "src/frontend/src/components/CodeEditor",
					"uidl_definition_physical": {
						"name": "CodeEditor",
						"type": "component",
						"description": "Code editing interface",
						"content": {
							"elementType": "container",
							"name": "CodeEditorContainer",
							"attrs": {
								"className": "h-full w-full flex flex-col"
							},
							"children": [
								{
									"elementType": "div",
									"name": "CodeEditorHeader",
									"attrs": {
										"className": "flex items-center justify-between p-4 border-b"
									},
									"children": [
										{
											"elementType": "text",
											"content": "CodeEditor"
										},
										{
											"elementType": "button",
											"attrs": {
												"onClick": "handleRefresh",
												"className": "p-2 hover:bg-muted rounded"
											},
											"children": [
												{
													"elementType": "icon",
													"name": "refresh"
												}
											]
										}
									]
								},
								{
									"elementType": "div",
									"name": "CodeEditorContent",
									"attrs": {
										"className": "flex-1 p-4 overflow-auto"
									},
									"children": [
										{
											"elementType": "text",
											"content": "Code editing interface - Content area for CodeEditor"
										}
									]
								}
							]
						},
						"stateDefinitions": {
							"isLoading": {
								"type": "boolean",
								"defaultValue": false
							},
							"data": {
								"type": "array",
								"defaultValue": [

								]
							},
							"selectedItems": {
								"type": "array",
								"defaultValue": [

								]
							}
						},
						"actions": {
							"handleRefresh": {
								"type": "async",
								"handler": "refreshData"
							},
							"handleSubmit": {
								"type": "async",
								"handler": "submitForm"
							}
						}
					}
				},
				{
					"id": "search_interface",
					"type": "interface",
					"name": "SearchInterface",
					"description": "Global search functionality with autocomplete, filters, and result categorization",
					"component_path": "src/frontend/src/components/SearchInterface",
					"uidl_definition_physical": {
                        "root": {
                            "type": "element",
                            "name": "search-interface-container",
                            "elementType": "div",
                            "attrs": {
                            "className": {
                                "type": "static",
                                "content": "h-full w-full flex flex-col bg-background"
                            }
                            },
                            "children": [
                            {
                                "type": "element",
                                "name": "search-interface-header",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex items-center justify-between p-4 border-b border-border bg-card"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "header-title-section",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-3"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "search-interface-icon",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 bg-primary/10 rounded-md"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "search-icon-svg",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "20"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "20"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "text-primary"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "search-icon-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "header-title",
                                        "elementType": "div",
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "page-title",
                                            "elementType": "h1",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-xl font-semibold text-foreground"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Search Interface"
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "header-actions",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-2"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "refresh-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 hover:bg-muted rounded-md transition-colors"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Refresh Search Results"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleRefresh"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "refresh-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "comp",
                                                "id": "refreshIconClass"
                                                }
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "refresh-path-1",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-2",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 8-3-3-3 3"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-3",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-4",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m3 16 3 3 3-3"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "element",
                                "name": "search-interface-main",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex-1 flex flex-col overflow-hidden"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "search-controls-section",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "p-4 border-b border-border bg-card/50"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "search-input-container",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "flex flex-col gap-4"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "main-search-input-wrapper",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "relative flex-1"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "search-input-icon",
                                                "elementType": "svg",
                                                "attrs": {
                                                "width": {
                                                    "type": "static",
                                                    "content": "16"
                                                },
                                                "height": {
                                                    "type": "static",
                                                    "content": "16"
                                                },
                                                "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                },
                                                "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                },
                                                "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                },
                                                "strokeWidth": {
                                                    "type": "static",
                                                    "content": "2"
                                                },
                                                "className": {
                                                    "type": "static",
                                                    "content": "absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "input-search-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                    "d": {
                                                        "type": "static",
                                                        "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                    }
                                                    }
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "main-search-input",
                                                "elementType": "input",
                                                "attrs": {
                                                "type": {
                                                    "type": "static",
                                                    "content": "search"
                                                },
                                                "placeholder": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "searchPlaceholder"
                                                    }
                                                },
                                                "className": {
                                                    "type": "static",
                                                    "content": "flex h-12 w-full rounded-md border border-input bg-background pl-10 pr-4 py-3 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                                                },
                                                "value": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "searchQuery"
                                                    }
                                                },
                                                "disabled": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "isLoading"
                                                    }
                                                }
                                                },
                                                "events": {
                                                "onChange": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleSearchChange"
                                                    }
                                                ],
                                                "onKeyDown": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleSearchKeyDown"
                                                    }
                                                ],
                                                "onFocus": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleSearchFocus"
                                                    }
                                                ],
                                                "onBlur": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleSearchBlur"
                                                    }
                                                ]
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "search-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "absolute right-3 top-1/2 transform -translate-y-1/2 p-1 hover:bg-muted rounded"
                                                },
                                                "disabled": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "isLoading"
                                                    }
                                                },
                                                "title": {
                                                    "type": "static",
                                                    "content": "Execute Search"
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleSearch"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "conditional",
                                                    "reference": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "prop",
                                                        "id": "isLoading"
                                                    }
                                                    },
                                                    "value": true,
                                                    "node": {
                                                    "type": "element",
                                                    "name": "loading-spinner",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                        "width": {
                                                        "type": "static",
                                                        "content": "16"
                                                        },
                                                        "height": {
                                                        "type": "static",
                                                        "content": "16"
                                                        },
                                                        "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                        },
                                                        "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                        },
                                                        "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                        },
                                                        "strokeWidth": {
                                                        "type": "static",
                                                        "content": "2"
                                                        },
                                                        "className": {
                                                        "type": "static",
                                                        "content": "animate-spin text-muted-foreground"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "name": "spinner-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                            "d": {
                                                            "type": "static",
                                                            "content": "M21 12a9 9 0 11-6.219-8.56"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    },
                                                    "fallback": {
                                                    "type": "element",
                                                    "name": "search-execute-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                        "width": {
                                                        "type": "static",
                                                        "content": "16"
                                                        },
                                                        "height": {
                                                        "type": "static",
                                                        "content": "16"
                                                        },
                                                        "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                        },
                                                        "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                        },
                                                        "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                        },
                                                        "strokeWidth": {
                                                        "type": "static",
                                                        "content": "2"
                                                        },
                                                        "className": {
                                                        "type": "static",
                                                        "content": "text-muted-foreground"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "name": "execute-search-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                            "d": {
                                                            "type": "static",
                                                            "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                            }
                                                        }
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            },
                                            {
                                                "type": "conditional",
                                                "reference": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "comp",
                                                    "id": "showShortcut"
                                                }
                                                },
                                                "value": true,
                                                "node": {
                                                "type": "element",
                                                "name": "search-shortcut-hint",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "pointer-events-none absolute right-12 top-1/2 transform -translate-y-1/2 flex items-center gap-1 text-xs text-muted-foreground"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "shortcut-key",
                                                    "elementType": "kbd",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "px-1.5 py-0.5 text-xs font-mono bg-muted border border-border rounded"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "static",
                                                        "content": "/"
                                                        }
                                                    ]
                                                    }
                                                ]
                                                }
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "search-filters-container",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex flex-wrap items-center gap-3"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "search-scope-filters",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "flex items-center gap-2"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "filters-label",
                                                    "elementType": "label",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-sm font-medium text-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "static",
                                                        "content": "Search in:"
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "repeat",
                                                    "dataSource": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "comp",
                                                        "id": "searchScopes"
                                                    }
                                                    },
                                                    "node": {
                                                    "type": "element",
                                                    "name": "scope-filter-option",
                                                    "elementType": "label",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "flex items-center gap-2 cursor-pointer"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "name": "scope-checkbox",
                                                        "elementType": "input",
                                                        "attrs": {
                                                            "type": {
                                                            "type": "static",
                                                            "content": "checkbox"
                                                            },
                                                            "checked": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "isSelected"
                                                            }
                                                            },
                                                            "className": {
                                                            "type": "static",
                                                            "content": "h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary focus:ring-2"
                                                            }
                                                        },
                                                        "events": {
                                                            "onChange": [
                                                            {
                                                                "type": "propCall",
                                                                "id": "handleScopeToggle"
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "scope-label-text",
                                                        "elementType": "span",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "text-sm text-foreground"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "label"
                                                            }
                                                            }
                                                        ]
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "clear-filters-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-xs text-muted-foreground hover:text-foreground underline transition-colors"
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleClearFilters"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "Clear filters"
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "search-results-container",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex-1 overflow-y-auto"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "reference": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "comp",
                                            "id": "shouldShowResults"
                                        }
                                        },
                                        "value": false,
                                        "node": {
                                        "type": "element",
                                        "name": "search-empty-state",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "flex flex-col items-center justify-center h-full text-center p-8"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "empty-state-icon",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "mb-4 p-4 bg-muted rounded-full"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "search-empty-icon",
                                                "elementType": "svg",
                                                "attrs": {
                                                    "width": {
                                                    "type": "static",
                                                    "content": "48"
                                                    },
                                                    "height": {
                                                    "type": "static",
                                                    "content": "48"
                                                    },
                                                    "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                    },
                                                    "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                    },
                                                    "strokeWidth": {
                                                    "type": "static",
                                                    "content": "1.5"
                                                    },
                                                    "className": {
                                                    "type": "static",
                                                    "content": "text-muted-foreground"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "empty-search-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                        "d": {
                                                        "type": "static",
                                                        "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                        }
                                                    }
                                                    }
                                                ]
                                                }
                                            ]
                                            },
                                            {
                                            "type": "element",
                                            "name": "empty-state-title",
                                            "elementType": "h3",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "text-lg font-semibold text-foreground mb-2"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "static",
                                                "content": "Start Your Search"
                                                }
                                            ]
                                            },
                                            {
                                            "type": "element",
                                            "name": "empty-state-description",
                                            "elementType": "p",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "text-muted-foreground max-w-md"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "static",
                                                "content": "Enter a search term to find flows, components, and other resources across your workspace."
                                                }
                                            ]
                                            }
                                        ]
                                        },
                                        "fallback": {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "hasNoResults"
                                            }
                                        },
                                        "value": true,
                                        "node": {
                                            "type": "element",
                                            "name": "no-results-state",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex flex-col items-center justify-center h-full text-center p-8"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "no-results-icon",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "mb-4 p-4 bg-muted rounded-full"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "no-results-search-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                    "width": {
                                                        "type": "static",
                                                        "content": "48"
                                                    },
                                                    "height": {
                                                        "type": "static",
                                                        "content": "48"
                                                    },
                                                    "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                    },
                                                    "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                    },
                                                    "strokeWidth": {
                                                        "type": "static",
                                                        "content": "1.5"
                                                    },
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "no-results-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                        }
                                                        }
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "no-results-slash",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "m9 9 6 6"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "no-results-title",
                                                "elementType": "h3",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-lg font-semibold text-foreground mb-2"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "No Results Found"
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "no-results-description",
                                                "elementType": "p",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-muted-foreground max-w-md mb-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "No items match your search criteria. Try adjusting your search terms or filters."
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "clear-search-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleClearSearch"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "Clear Search"
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        "fallback": {
                                            "type": "element",
                                            "name": "search-results-list",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "p-4"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "results-header",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "flex items-center justify-between mb-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "results-count",
                                                    "elementType": "p",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-sm text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "resultsCountText"
                                                        }
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "sort-dropdown",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "flex items-center gap-2"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "sort-label",
                                                        "elementType": "label",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-sm font-medium text-foreground"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "static",
                                                            "content": "Sort by:"
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "sort-select",
                                                        "elementType": "select",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "text-sm border border-input rounded px-2 py-1 bg-background"
                                                        },
                                                        "value": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "prop",
                                                            "id": "sortBy"
                                                            }
                                                        }
                                                        },
                                                        "events": {
                                                        "onChange": [
                                                            {
                                                            "type": "propCall",
                                                            "id": "handleSortChange"
                                                            }
                                                        ]
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "repeat",
                                                            "dataSource": {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "comp",
                                                                "id": "sortOptions"
                                                            }
                                                            },
                                                            "node": {
                                                            "type": "element",
                                                            "name": "sort-option",
                                                            "elementType": "option",
                                                            "attrs": {
                                                                "value": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "value"
                                                                }
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "label"
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "search-results-grid",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "space-y-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "repeat",
                                                    "dataSource": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "prop",
                                                        "id": "searchResults"
                                                    }
                                                    },
                                                    "node": {
                                                    "type": "element",
                                                    "name": "search-result-item",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "border border-border rounded-lg p-4 hover:bg-accent/50 transition-colors cursor-pointer"
                                                        }
                                                    },
                                                    "events": {
                                                        "onClick": [
                                                        {
                                                            "type": "propCall",
                                                            "id": "handleResultClick"
                                                        }
                                                        ]
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "name": "result-header",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "flex items-start justify-between mb-2"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "result-title",
                                                            "elementType": "h3",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "font-semibold text-foreground"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "title"
                                                                }
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "result-type-badge",
                                                            "elementType": "span",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "bg-primary/10 text-primary px-2 py-1 rounded-full text-xs font-medium"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "type"
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "result-description",
                                                        "elementType": "p",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "text-muted-foreground text-sm mb-2 line-clamp-2"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "description"
                                                            }
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "result-metadata",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "flex items-center gap-4 text-xs text-muted-foreground"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "result-path",
                                                            "elementType": "span",
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "path"
                                                                }
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "result-modified-date",
                                                            "elementType": "span",
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Modified: "
                                                                },
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "modifiedDate"
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        }
                                    }
                                    ]
                                }
                                ]
                            }
                            ]
                        },
                        "stateDefinitions": {
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "searchQuery": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "isInputFocused": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "searchResults": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "selectedScopes": {
                            "type": "array",
                            "defaultValue": ["flows", "components"]
                            },
                            "sortBy": {
                            "type": "string",
                            "defaultValue": "relevance"
                            },
                            "hasSearched": {
                            "type": "boolean",
                            "defaultValue": false
                            }
                        },
                        "propDefinitions": {
                            "isLoading": {
                            "type": "boolean"
                            },
                            "searchQuery": {
                            "type": "string"
                            },
                            "isInputFocused": {
                            "type": "boolean"
                            },
                            "searchResults": {
                            "type": "array"
                            },
                            "selectedScopes": {
                            "type": "array"
                            },
                            "sortBy": {
                            "type": "string"
                            },
                            "hasSearched": {
                            "type": "boolean"
                            },
                            "handleRefresh": {
                            "type": "func"
                            },
                            "handleSearchChange": {
                            "type": "func"
                            },
                            "handleSearchKeyDown": {
                            "type": "func"
                            },
                            "handleSearchFocus": {
                            "type": "func"
                            },
                            "handleSearchBlur": {
                            "type": "func"
                            },
                            "handleSearch": {
                            "type": "func"
                            },
                            "handleScopeToggle": {
                            "type": "func"
                            },
                            "handleClearFilters": {
                            "type": "func"
                            },
                            "handleClearSearch": {
                            "type": "func"
                            },
                            "handleSortChange": {
                            "type": "func"
                            },
                            "handleResultClick": {
                            "type": "func"
                            }
                        },
                        "mappings": {
                            "components": {
                            "refreshIconClass": "props.isLoading ? 'animate-spin' : ''",
                            "searchPlaceholder": "props.selectedScopes.includes('flows') && props.selectedScopes.includes('components') ? 'Search Flows and Components' : props.selectedScopes.includes('flows') ? 'Search Flows' : props.selectedScopes.includes('components') ? 'Search Components' : 'Search...'",
                            "showShortcut": "!props.isInputFocused && props.searchQuery === ''",
                            "searchScopes": "[{id: 'flows', label: 'Flows', isSelected: props.selectedScopes.includes('flows')}, {id: 'components', label: 'Components', isSelected: props.selectedScopes.includes('components')}, {id: 'variables', label: 'Variables', isSelected: props.selectedScopes.includes('variables')}, {id: 'files', label: 'Files', isSelected: props.selectedScopes.includes('files')}]",
                            "shouldShowResults": "props.hasSearched && props.searchQuery.length > 0",
                            "hasNoResults": "props.hasSearched && props.searchResults.length === 0",
                            "resultsCountText": "props.searchResults.length === 1 ? '1 result found' : `${props.searchResults.length} results found`",
                            "sortOptions": "[{value: 'relevance', label: 'Relevance'}, {value: 'name', label: 'Name'}, {value: 'modified', label: 'Last Modified'}, {value: 'created', label: 'Date Created'}, {value: 'type', label: 'Type'}]"
                            }
                        }
                    }
				},
				{
					"id": "paginator_component",
					"type": "interface",
					"name": "PaginatorComponent",
					"description": "Advanced pagination component with page size selection, navigation, and total count display",
					"component_path": "src/frontend/src/components/PaginatorComponent",
					"uidl_definition_physical": {
                        "root": {
                            "type": "element",
                            "name": "paginator-container",
                            "elementType": "div",
                            "attrs": {
                            "className": {
                                "type": "static",
                                "content": "flex flex-1 items-center justify-between px-6"
                            }
                            },
                            "children": [
                            {
                                "type": "element",
                                "name": "items-count-display",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex items-center justify-end gap-1 text-mmd text-secondary-foreground"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "current-range-start",
                                    "elementType": "span",
                                    "children": [
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "comp",
                                        "id": "rangeStart"
                                        }
                                    }
                                    ]
                                },
                                {
                                    "type": "static",
                                    "content": "-"
                                },
                                {
                                    "type": "element",
                                    "name": "current-range-end",
                                    "elementType": "span",
                                    "children": [
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "comp",
                                        "id": "rangeEnd"
                                        }
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "total-items-info",
                                    "elementType": "span",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "text-muted-foreground"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "static",
                                        "content": " of "
                                    },
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "prop",
                                        "id": "totalRowsCount"
                                        }
                                    },
                                    {
                                        "type": "static",
                                        "content": " "
                                    },
                                    {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "comp",
                                        "id": "itemTypeLabel"
                                        }
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "element",
                                "name": "pagination-controls",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex items-center gap-2"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "page-selector-container",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-1 text-mmd text-secondary-foreground"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "page-select-dropdown",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "relative"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "page-select-trigger",
                                            "elementType": "button",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex h-7 w-fit items-center justify-between gap-1 border-none p-1 pl-1.5 text-mmd focus:border-none focus:ring-0 focus:!ring-offset-0 bg-transparent hover:bg-accent hover:text-accent-foreground rounded-md transition-colors"
                                            },
                                            "type": {
                                                "type": "static",
                                                "content": "button"
                                            },
                                            "aria-expanded": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "prop",
                                                "id": "isPageSelectOpen"
                                                }
                                            },
                                            "aria-label": {
                                                "type": "static",
                                                "content": "Select page number"
                                            }
                                            },
                                            "events": {
                                            "onClick": [
                                                {
                                                "type": "propCall",
                                                "id": "handleTogglePageSelect"
                                                }
                                            ]
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "current-page-display",
                                                "elementType": "span",
                                                "children": [
                                                {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "prop",
                                                    "id": "pageIndex"
                                                    }
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "page-select-chevron",
                                                "elementType": "svg",
                                                "attrs": {
                                                "width": {
                                                    "type": "static",
                                                    "content": "16"
                                                },
                                                "height": {
                                                    "type": "static",
                                                    "content": "16"
                                                },
                                                "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                },
                                                "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                },
                                                "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                },
                                                "strokeWidth": {
                                                    "type": "static",
                                                    "content": "2"
                                                },
                                                "className": {
                                                    "type": "dynamic",
                                                    "content": {
                                                    "referenceType": "comp",
                                                    "id": "chevronClass"
                                                    }
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "chevron-up-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                    "d": {
                                                        "type": "static",
                                                        "content": "m18 15-6-6-6 6"
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        {
                                            "type": "conditional",
                                            "reference": {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "prop",
                                                "id": "isPageSelectOpen"
                                            }
                                            },
                                            "value": true,
                                            "node": {
                                            "type": "element",
                                            "name": "page-select-dropdown-content",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "absolute bottom-full mb-1 z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "page-options-list",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "p-1 max-h-48 overflow-y-auto"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "repeat",
                                                    "dataSource": {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "comp",
                                                        "id": "pageNumbers"
                                                        }
                                                    },
                                                    "node": {
                                                        "type": "element",
                                                        "name": "page-option-item",
                                                        "elementType": "button",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "comp",
                                                            "id": "pageOptionClass"
                                                            }
                                                        },
                                                        "type": {
                                                            "type": "static",
                                                            "content": "button"
                                                        }
                                                        },
                                                        "events": {
                                                        "onClick": [
                                                            {
                                                            "type": "propCall",
                                                            "id": "handlePageSelect"
                                                            }
                                                        ]
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "local",
                                                            "id": "pageNumber"
                                                            }
                                                        }
                                                        ]
                                                    }
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "pages-total-label",
                                        "elementType": "span",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "text-muted-foreground"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "static",
                                            "content": "of "
                                        },
                                        {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "prop",
                                            "id": "maxIndex"
                                            }
                                        },
                                        {
                                            "type": "static",
                                            "content": " pages"
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "navigation-buttons",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-1"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "previous-page-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "type": {
                                            "type": "static",
                                            "content": "button"
                                        },
                                        "className": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "previousButtonClass"
                                            }
                                        },
                                        "disabled": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "disableFirstPage"
                                            }
                                        },
                                        "aria-label": {
                                            "type": "static",
                                            "content": "Go to previous page"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Previous page"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handlePreviousPage"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "previous-page-screen-reader-text",
                                            "elementType": "span",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "sr-only"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Go to previous page"
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "previous-page-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "h-4 w-4"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "chevron-left-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m15 18-6-6 6-6"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "next-page-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "type": {
                                            "type": "static",
                                            "content": "button"
                                        },
                                        "className": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "nextButtonClass"
                                            }
                                        },
                                        "disabled": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "disableLastPage"
                                            }
                                        },
                                        "aria-label": {
                                            "type": "static",
                                            "content": "Go to next page"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Next page"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleNextPage"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "next-page-screen-reader-text",
                                            "elementType": "span",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "sr-only"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Go to next page"
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "next-page-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "h-4 w-4"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "chevron-right-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m9 18 6-6-6-6"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                }
                                ]
                            }
                            ]
                        },
                        "stateDefinitions": {
                            "pageSize": {
                            "type": "number",
                            "defaultValue": 10
                            },
                            "pageIndex": {
                            "type": "number",
                            "defaultValue": 1
                            },
                            "maxIndex": {
                            "type": "number",
                            "defaultValue": 1
                            },
                            "totalRowsCount": {
                            "type": "number",
                            "defaultValue": 0
                            },
                            "isComponent": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "isPageSelectOpen": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "pages": {
                            "type": "number",
                            "defaultValue": null
                            }
                        },
                        "propDefinitions": {
                            "pageSize": {
                            "type": "number"
                            },
                            "pageIndex": {
                            "type": "number"
                            },
                            "rowsCount": {
                            "type": "array"
                            },
                            "totalRowsCount": {
                            "type": "number"
                            },
                            "paginate": {
                            "type": "func"
                            },
                            "pages": {
                            "type": "number"
                            },
                            "isComponent": {
                            "type": "boolean"
                            },
                            "maxIndex": {
                            "type": "number"
                            },
                            "isPageSelectOpen": {
                            "type": "boolean"
                            },
                            "handleTogglePageSelect": {
                            "type": "func"
                            },
                            "handlePageSelect": {
                            "type": "func"
                            },
                            "handlePreviousPage": {
                            "type": "func"
                            },
                            "handleNextPage": {
                            "type": "func"
                            }
                        },
                        "mappings": {
                            "components": {
                            "rangeStart": "(props.pageIndex - 1) * props.pageSize + 1",
                            "rangeEnd": "Math.min(props.totalRowsCount, (props.pageIndex - 1) * props.pageSize + props.pageSize)",
                            "itemTypeLabel": "props.isComponent === undefined ? 'items' : props.isComponent ? 'components' : 'flows'",
                            "chevronClass": "props.isPageSelectOpen ? 'h-4 w-4 transition-transform transform rotate-180' : 'h-4 w-4 transition-transform'",
                            "pageNumbers": "Array.from({ length: props.maxIndex }, (_, i) => ({ pageNumber: i + 1, isSelected: i + 1 === props.pageIndex }))",
                            "pageOptionClass": "local.isSelected ? 'relative flex w-full cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground bg-accent text-accent-foreground' : 'relative flex w-full cursor-pointer select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground hover:bg-accent hover:text-accent-foreground'",
                            "disableFirstPage": "props.pageIndex <= 1",
                            "disableLastPage": "props.pageIndex === props.maxIndex",
                            "previousButtonClass": "state.disableFirstPage ? 'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-8 w-8 p-0 opacity-50 cursor-not-allowed' : 'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-8 w-8 p-0'",
                            "nextButtonClass": "state.disableLastPage ? 'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-8 w-8 p-0 opacity-50 cursor-not-allowed' : 'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-8 w-8 p-0'"
                            }
                        }
                        }
				},
				{
					"id": "template_gallery",
					"type": "interface",
					"name": "TemplateGallery",
					"description": "Template selection interface with categories, previews, and quick start functionality",
					"route": "/templates",
					"component_path": "src/frontend/src/pages/TemplateGallery",
					"uidl_definition_physical": {
                        "root": {
                            "type": "element",
                            "name": "template-gallery-container",
                            "elementType": "div",
                            "attrs": {
                            "className": {
                                "type": "static",
                                "content": "h-full w-full flex flex-col bg-background"
                            }
                            },
                            "children": [
                            {
                                "type": "element",
                                "name": "template-gallery-header",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex items-center justify-between p-6 border-b border-border bg-card"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "header-title-section",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-3"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "template-gallery-icon",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 bg-primary/10 rounded-md"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "gallery-icon-svg",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "24"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "24"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "text-primary"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "gallery-icon-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "gallery-icon-path-2",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v2H3V5z"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "header-title",
                                        "elementType": "div",
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "page-title",
                                            "elementType": "h1",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-2xl font-bold text-foreground"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Template Gallery"
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "page-subtitle",
                                            "elementType": "p",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-sm text-muted-foreground mt-1"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Browse and use pre-built flow templates to get started quickly"
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "header-actions",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-3"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "search-templates-input",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "relative"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "search-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "search-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 21-6-6m2-5a7 7 0 1 1-14 0 7 7 0 0 1 14 0z"
                                                }
                                                }
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "template-search-input",
                                            "elementType": "input",
                                            "attrs": {
                                            "type": {
                                                "type": "static",
                                                "content": "text"
                                            },
                                            "placeholder": {
                                                "type": "static",
                                                "content": "Search templates..."
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "flex h-10 w-80 rounded-md border border-input bg-background pl-10 pr-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
                                            },
                                            "value": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "prop",
                                                "id": "searchQuery"
                                                }
                                            }
                                            },
                                            "events": {
                                            "onChange": [
                                                {
                                                "type": "propCall",
                                                "id": "handleSearchChange"
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "refresh-templates-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-10 w-10"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Refresh Templates"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleRefresh"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "refresh-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "comp",
                                                "id": "refreshIconClass"
                                                }
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "refresh-path-1",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-2",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-3",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 8-3-3-3 3"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-4",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m3 16 3 3 3-3"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "element",
                                "name": "template-gallery-main-content",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex flex-1 overflow-hidden"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "template-categories-sidebar",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "w-64 bg-card border-r border-border p-4 overflow-y-auto"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "categories-header",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "mb-4"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "categories-title",
                                            "elementType": "h3",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-sm font-semibold text-foreground mb-3"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Categories"
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "categories-list",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "space-y-1"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "repeat",
                                            "dataSource": {
                                            "type": "dynamic",
                                            "content": {
                                                "referenceType": "comp",
                                                "id": "templateCategories"
                                            }
                                            },
                                            "node": {
                                            "type": "element",
                                            "name": "category-item",
                                            "elementType": "button",
                                            "attrs": {
                                                "className": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "comp",
                                                    "id": "categoryButtonClass"
                                                }
                                                },
                                                "type": {
                                                "type": "static",
                                                "content": "button"
                                                }
                                            },
                                            "events": {
                                                "onClick": [
                                                {
                                                    "type": "propCall",
                                                    "id": "handleCategorySelect"
                                                }
                                                ]
                                            },
                                            "children": [
                                                {
                                                "type": "element",
                                                "name": "category-icon",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "w-4 h-4"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "local",
                                                        "id": "icon"
                                                    }
                                                    }
                                                ]
                                                },
                                                {
                                                "type": "element",
                                                "name": "category-name",
                                                "elementType": "span",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "text-sm font-medium"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "local",
                                                        "id": "name"
                                                    }
                                                    }
                                                ]
                                                },
                                                {
                                                "type": "element",
                                                "name": "category-count",
                                                "elementType": "span",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "ml-auto text-xs text-muted-foreground bg-muted px-2 py-1 rounded-full"
                                                    }
                                                },
                                                "children": [
                                                    {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "local",
                                                        "id": "count"
                                                    }
                                                    }
                                                ]
                                                }
                                            ]
                                            }
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "templates-grid-container",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex-1 p-6 overflow-y-auto bg-muted/30"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "conditional",
                                        "reference": {
                                        "type": "dynamic",
                                        "content": {
                                            "referenceType": "prop",
                                            "id": "isLoading"
                                        }
                                        },
                                        "value": true,
                                        "node": {
                                        "type": "element",
                                        "name": "loading-state",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "flex items-center justify-center h-64"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "element",
                                            "name": "loading-spinner",
                                            "elementType": "div",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "animate-spin rounded-full h-8 w-8 border-b-2 border-primary"
                                                }
                                            }
                                            },
                                            {
                                            "type": "element",
                                            "name": "loading-text",
                                            "elementType": "span",
                                            "attrs": {
                                                "className": {
                                                "type": "static",
                                                "content": "ml-3 text-muted-foreground"
                                                }
                                            },
                                            "children": [
                                                {
                                                "type": "static",
                                                "content": "Loading templates..."
                                                }
                                            ]
                                            }
                                        ]
                                        },
                                        "fallback": {
                                        "type": "conditional",
                                        "reference": {
                                            "type": "dynamic",
                                            "content": {
                                            "referenceType": "comp",
                                            "id": "hasTemplates"
                                            }
                                        },
                                        "value": false,
                                        "node": {
                                            "type": "element",
                                            "name": "empty-templates-state",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "flex flex-col items-center justify-center h-96 text-center"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "empty-state-icon",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "mb-4 p-4 bg-muted rounded-full"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "empty-templates-icon",
                                                    "elementType": "svg",
                                                    "attrs": {
                                                    "width": {
                                                        "type": "static",
                                                        "content": "48"
                                                    },
                                                    "height": {
                                                        "type": "static",
                                                        "content": "48"
                                                    },
                                                    "viewBox": {
                                                        "type": "static",
                                                        "content": "0 0 24 24"
                                                    },
                                                    "fill": {
                                                        "type": "static",
                                                        "content": "none"
                                                    },
                                                    "stroke": {
                                                        "type": "static",
                                                        "content": "currentColor"
                                                    },
                                                    "strokeWidth": {
                                                        "type": "static",
                                                        "content": "1.5"
                                                    },
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "empty-path",
                                                        "elementType": "path",
                                                        "attrs": {
                                                        "d": {
                                                            "type": "static",
                                                            "content": "M3 7v10a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2z"
                                                        }
                                                        }
                                                    }
                                                    ]
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "empty-state-title",
                                                "elementType": "h3",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-lg font-semibold text-foreground mb-2"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "No Templates Found"
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "empty-state-description",
                                                "elementType": "p",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-muted-foreground max-w-sm mb-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "No templates match your current search or category selection. Try adjusting your filters."
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "clear-filters-button",
                                                "elementType": "button",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2"
                                                }
                                                },
                                                "events": {
                                                "onClick": [
                                                    {
                                                    "type": "propCall",
                                                    "id": "handleClearFilters"
                                                    }
                                                ]
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "Clear Filters"
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        "fallback": {
                                            "type": "element",
                                            "name": "templates-grid",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "repeat",
                                                "dataSource": {
                                                "type": "dynamic",
                                                "content": {
                                                    "referenceType": "prop",
                                                    "id": "filteredTemplates"
                                                }
                                                },
                                                "node": {
                                                "type": "element",
                                                "name": "template-card",
                                                "elementType": "div",
                                                "attrs": {
                                                    "className": {
                                                    "type": "static",
                                                    "content": "group bg-background border border-border rounded-lg overflow-hidden hover:shadow-md transition-all duration-200 cursor-pointer"
                                                    }
                                                },
                                                "events": {
                                                    "onClick": [
                                                    {
                                                        "type": "propCall",
                                                        "id": "handleTemplateSelect"
                                                    }
                                                    ]
                                                },
                                                "children": [
                                                    {
                                                    "type": "element",
                                                    "name": "template-card-preview",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "aspect-video bg-gradient-to-br from-primary/10 to-secondary/10 relative overflow-hidden"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "conditional",
                                                        "reference": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "local",
                                                            "id": "thumbnail"
                                                            }
                                                        },
                                                        "value": {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "comp",
                                                            "id": "hasThumbnail"
                                                            }
                                                        },
                                                        "node": {
                                                            "type": "element",
                                                            "name": "template-thumbnail-image",
                                                            "elementType": "img",
                                                            "attrs": {
                                                            "src": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "local",
                                                                "id": "thumbnail"
                                                                }
                                                            },
                                                            "alt": {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "local",
                                                                "id": "name"
                                                                }
                                                            },
                                                            "className": {
                                                                "type": "static",
                                                                "content": "w-full h-full object-cover"
                                                            }
                                                            }
                                                        },
                                                        "fallback": {
                                                            "type": "element",
                                                            "name": "template-placeholder-icon",
                                                            "elementType": "div",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "flex items-center justify-center w-full h-full"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "element",
                                                                "name": "template-icon",
                                                                "elementType": "svg",
                                                                "attrs": {
                                                                "width": {
                                                                    "type": "static",
                                                                    "content": "48"
                                                                },
                                                                "height": {
                                                                    "type": "static",
                                                                    "content": "48"
                                                                },
                                                                "viewBox": {
                                                                    "type": "static",
                                                                    "content": "0 0 24 24"
                                                                },
                                                                "fill": {
                                                                    "type": "static",
                                                                    "content": "none"
                                                                },
                                                                "stroke": {
                                                                    "type": "static",
                                                                    "content": "currentColor"
                                                                },
                                                                "strokeWidth": {
                                                                    "type": "static",
                                                                    "content": "1.5"
                                                                },
                                                                "className": {
                                                                    "type": "static",
                                                                    "content": "text-muted-foreground"
                                                                }
                                                                },
                                                                "children": [
                                                                {
                                                                    "type": "element",
                                                                    "name": "template-path",
                                                                    "elementType": "path",
                                                                    "attrs": {
                                                                    "d": {
                                                                        "type": "static",
                                                                        "content": "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
                                                                    }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "element",
                                                                    "name": "template-path-2",
                                                                    "elementType": "polyline",
                                                                    "attrs": {
                                                                    "points": {
                                                                        "type": "static",
                                                                        "content": "14,2 14,8 20,8"
                                                                    }
                                                                    }
                                                                }
                                                                ]
                                                            }
                                                            ]
                                                        }
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "template-card-overlay",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-colors duration-200 flex items-center justify-center opacity-0 group-hover:opacity-100"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "preview-template-button",
                                                            "elementType": "button",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "bg-background text-foreground px-4 py-2 rounded-md text-sm font-medium shadow-sm hover:bg-accent transition-colors"
                                                                }
                                                            },
                                                            "events": {
                                                                "onClick": [
                                                                {
                                                                    "type": "propCall",
                                                                    "id": "handleTemplatePreview"
                                                                }
                                                                ]
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Preview"
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        }
                                                    ]
                                                    },
                                                    {
                                                    "type": "element",
                                                    "name": "template-card-content",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "p-4"
                                                        }
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "name": "template-card-header",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "flex items-start justify-between mb-2"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "template-title",
                                                            "elementType": "h3",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "font-semibold text-foreground text-sm line-clamp-2"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "name"
                                                                }
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "template-category-badge",
                                                            "elementType": "span",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "bg-primary/10 text-primary px-2 py-1 rounded-full text-xs font-medium"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "category"
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "template-description",
                                                        "elementType": "p",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "text-muted-foreground text-xs mb-3 line-clamp-2"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "description"
                                                            }
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "template-card-footer",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "flex items-center justify-between"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "template-tags",
                                                            "elementType": "div",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "flex gap-1 flex-wrap"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "repeat",
                                                                "dataSource": {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                    "referenceType": "local",
                                                                    "id": "tags"
                                                                    }
                                                                },
                                                                "node": {
                                                                    "type": "element",
                                                                    "name": "template-tag",
                                                                    "elementType": "span",
                                                                    "attrs": {
                                                                    "className": {
                                                                        "type": "static",
                                                                        "content": "bg-muted text-muted-foreground px-2 py-1 rounded text-xs"
                                                                    }
                                                                    },
                                                                    "children": [
                                                                    {
                                                                        "type": "dynamic",
                                                                        "content": {
                                                                        "referenceType": "local",
                                                                        "id": "tag"
                                                                        }
                                                                    }
                                                                    ]
                                                                }
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "use-template-button",
                                                            "elementType": "button",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-8 px-3"
                                                                }
                                                            },
                                                            "events": {
                                                                "onClick": [
                                                                {
                                                                    "type": "propCall",
                                                                    "id": "handleUseTemplate"
                                                                }
                                                                ]
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "static",
                                                                "content": "Use Template"
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        }
                                                    ]
                                                    }
                                                ]
                                                }
                                            }
                                            ]
                                        }
                                        }
                                    }
                                    ]
                                }
                                ]
                            }
                            ]
                        },
                        "stateDefinitions": {
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "searchQuery": {
                            "type": "string",
                            "defaultValue": ""
                            },
                            "selectedCategory": {
                            "type": "string",
                            "defaultValue": "all"
                            },
                            "templates": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "filteredTemplates": {
                            "type": "array",
                            "defaultValue": []
                            }
                        },
                        "propDefinitions": {
                            "isLoading": {
                            "type": "boolean"
                            },
                            "searchQuery": {
                            "type": "string"
                            },
                            "selectedCategory": {
                            "type": "string"
                            },
                            "templates": {
                            "type": "array"
                            },
                            "filteredTemplates": {
                            "type": "array"
                            },
                            "handleRefresh": {
                            "type": "func"
                            },
                            "handleSearchChange": {
                            "type": "func"
                            },
                            "handleCategorySelect": {
                            "type": "func"
                            },
                            "handleClearFilters": {
                            "type": "func"
                            },
                            "handleTemplateSelect": {
                            "type": "func"
                            },
                            "handleTemplatePreview": {
                            "type": "func"
                            },
                            "handleUseTemplate": {
                            "type": "func"
                            }
                        },
                        "mappings": {
                            "components": {
                            "refreshIconClass": "props.isLoading ? 'animate-spin' : ''",
                            "templateCategories": "[{name: 'All Templates', id: 'all', icon: 'Grid3X3', count: props.templates.length, isSelected: props.selectedCategory === 'all'}, {name: 'AI & ML', id: 'ai-ml', icon: 'Bot', count: 15, isSelected: props.selectedCategory === 'ai-ml'}, {name: 'Data Processing', id: 'data', icon: 'Database', count: 8, isSelected: props.selectedCategory === 'data'}, {name: 'Web Scraping', id: 'scraping', icon: 'Globe', count: 12, isSelected: props.selectedCategory === 'scraping'}, {name: 'Automation', id: 'automation', icon: 'Zap', count: 10, isSelected: props.selectedCategory === 'automation'}, {name: 'Integrations', id: 'integrations', icon: 'Link', count: 18, isSelected: props.selectedCategory === 'integrations'}, {name: 'Utilities', id: 'utilities', icon: 'Tool', count: 6, isSelected: props.selectedCategory === 'utilities'}]",
                            "categoryButtonClass": "local.isSelected ? 'w-full flex items-center gap-3 px-3 py-2 text-left rounded-md bg-primary text-primary-foreground transition-colors' : 'w-full flex items-center gap-3 px-3 py-2 text-left rounded-md hover:bg-accent hover:text-accent-foreground transition-colors'",
                            "hasTemplates": "props.filteredTemplates.length > 0",
                            "hasThumbnail": "local.thumbnail !== undefined && local.thumbnail !== null && local.thumbnail !== ''"
                            }
                        }
                        }
				},
				{
					"id": "workspace_switcher",
					"type": "interface",
					"name": "WorkspaceSwitcher",
					"description": "Multi-workspace management with workspace selection, creation, and switching capabilities",
					"component_path": "src/frontend/src/components/WorkspaceSwitcher",
					"uidl_definition_physical": {
                        "root": {
                            "type": "element",
                            "name": "workspace-switcher-container",
                            "elementType": "div",
                            "attrs": {
                            "className": {
                                "type": "static",
                                "content": "h-full w-full flex flex-col bg-background"
                            }
                            },
                            "children": [
                            {
                                "type": "element",
                                "name": "workspace-switcher-header",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex items-center justify-between p-4 border-b border-border bg-card"
                                }
                                },
                                "children": [
                                {
                                    "type": "element",
                                    "name": "header-title-section",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-3"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "workspace-switcher-icon",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 bg-primary/10 rounded-md"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "workspace-icon-svg",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "20"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "20"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "text-primary"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "workspace-icon-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 3h6v6H3zM15 3h6v6h-6zM3 15h6v6H3zM15 15h6v6h-6z"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "header-title",
                                        "elementType": "div",
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "page-title",
                                            "elementType": "h1",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-xl font-semibold text-foreground"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Workspace Switcher"
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "page-subtitle",
                                            "elementType": "p",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-sm text-muted-foreground mt-1"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Switch between workspaces or create new ones"
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                },
                                {
                                    "type": "element",
                                    "name": "header-actions",
                                    "elementType": "div",
                                    "attrs": {
                                    "className": {
                                        "type": "static",
                                        "content": "flex items-center gap-2"
                                    }
                                    },
                                    "children": [
                                    {
                                        "type": "element",
                                        "name": "create-workspace-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-3"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Create New Workspace"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleCreateWorkspace"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "plus-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "static",
                                                "content": "mr-2"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "plus-path",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M5 12h14m-7-7v14"
                                                }
                                                }
                                            }
                                            ]
                                        },
                                        {
                                            "type": "static",
                                            "content": "New Workspace"
                                        }
                                        ]
                                    },
                                    {
                                        "type": "element",
                                        "name": "refresh-workspaces-button",
                                        "elementType": "button",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "p-2 hover:bg-muted rounded-md transition-colors"
                                        },
                                        "title": {
                                            "type": "static",
                                            "content": "Refresh Workspaces"
                                        }
                                        },
                                        "events": {
                                        "onClick": [
                                            {
                                            "type": "propCall",
                                            "id": "handleRefresh"
                                            }
                                        ]
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "refresh-icon",
                                            "elementType": "svg",
                                            "attrs": {
                                            "width": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "height": {
                                                "type": "static",
                                                "content": "16"
                                            },
                                            "viewBox": {
                                                "type": "static",
                                                "content": "0 0 24 24"
                                            },
                                            "fill": {
                                                "type": "static",
                                                "content": "none"
                                            },
                                            "stroke": {
                                                "type": "static",
                                                "content": "currentColor"
                                            },
                                            "strokeWidth": {
                                                "type": "static",
                                                "content": "2"
                                            },
                                            "className": {
                                                "type": "dynamic",
                                                "content": {
                                                "referenceType": "comp",
                                                "id": "refreshIconClass"
                                                }
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "refresh-path-1",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-2",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m21 8-3-3-3 3"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-3",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"
                                                }
                                                }
                                            },
                                            {
                                                "type": "element",
                                                "name": "refresh-path-4",
                                                "elementType": "path",
                                                "attrs": {
                                                "d": {
                                                    "type": "static",
                                                    "content": "m3 16 3 3 3-3"
                                                }
                                                }
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    ]
                                }
                                ]
                            },
                            {
                                "type": "element",
                                "name": "workspace-switcher-main",
                                "elementType": "div",
                                "attrs": {
                                "className": {
                                    "type": "static",
                                    "content": "flex-1 p-6 overflow-y-auto"
                                }
                                },
                                "children": [
                                {
                                    "type": "conditional",
                                    "reference": {
                                    "type": "dynamic",
                                    "content": {
                                        "referenceType": "prop",
                                        "id": "isLoading"
                                    }
                                    },
                                    "value": true,
                                    "node": {
                                    "type": "element",
                                    "name": "loading-state",
                                    "elementType": "div",
                                    "attrs": {
                                        "className": {
                                        "type": "static",
                                        "content": "flex items-center justify-center h-64"
                                        }
                                    },
                                    "children": [
                                        {
                                        "type": "element",
                                        "name": "loading-spinner",
                                        "elementType": "div",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "animate-spin rounded-full h-8 w-8 border-b-2 border-primary"
                                            }
                                        }
                                        },
                                        {
                                        "type": "element",
                                        "name": "loading-text",
                                        "elementType": "span",
                                        "attrs": {
                                            "className": {
                                            "type": "static",
                                            "content": "ml-3 text-muted-foreground"
                                            }
                                        },
                                        "children": [
                                            {
                                            "type": "static",
                                            "content": "Loading workspaces..."
                                            }
                                        ]
                                        }
                                    ]
                                    },
                                    "fallback": {
                                    "type": "conditional",
                                    "reference": {
                                        "type": "dynamic",
                                        "content": {
                                        "referenceType": "comp",
                                        "id": "hasWorkspaces"
                                        }
                                    },
                                    "value": false,
                                    "node": {
                                        "type": "element",
                                        "name": "empty-workspaces-state",
                                        "elementType": "div",
                                        "attrs": {
                                        "className": {
                                            "type": "static",
                                            "content": "flex flex-col items-center justify-center h-96 text-center"
                                        }
                                        },
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "empty-state-icon",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "mb-4 p-4 bg-muted rounded-full"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "empty-workspace-icon",
                                                "elementType": "svg",
                                                "attrs": {
                                                "width": {
                                                    "type": "static",
                                                    "content": "48"
                                                },
                                                "height": {
                                                    "type": "static",
                                                    "content": "48"
                                                },
                                                "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                },
                                                "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                },
                                                "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                },
                                                "strokeWidth": {
                                                    "type": "static",
                                                    "content": "1.5"
                                                },
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-muted-foreground"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "empty-workspace-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                    "d": {
                                                        "type": "static",
                                                        "content": "M3 3h6v6H3zM15 3h6v6h-6zM3 15h6v6H3zM15 15h6v6h-6z"
                                                    }
                                                    }
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "empty-state-title",
                                            "elementType": "h3",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-lg font-semibold text-foreground mb-2"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "No Workspaces Found"
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "empty-state-description",
                                            "elementType": "p",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "text-muted-foreground max-w-sm mb-6"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "static",
                                                "content": "Create your first workspace to organize your flows and collaborate with your team."
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "create-first-workspace-button",
                                            "elementType": "button",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2"
                                            }
                                            },
                                            "events": {
                                            "onClick": [
                                                {
                                                "type": "propCall",
                                                "id": "handleCreateWorkspace"
                                                }
                                            ]
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "create-first-plus-icon",
                                                "elementType": "svg",
                                                "attrs": {
                                                "width": {
                                                    "type": "static",
                                                    "content": "16"
                                                },
                                                "height": {
                                                    "type": "static",
                                                    "content": "16"
                                                },
                                                "viewBox": {
                                                    "type": "static",
                                                    "content": "0 0 24 24"
                                                },
                                                "fill": {
                                                    "type": "static",
                                                    "content": "none"
                                                },
                                                "stroke": {
                                                    "type": "static",
                                                    "content": "currentColor"
                                                },
                                                "strokeWidth": {
                                                    "type": "static",
                                                    "content": "2"
                                                },
                                                "className": {
                                                    "type": "static",
                                                    "content": "mr-2"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "create-first-plus-path",
                                                    "elementType": "path",
                                                    "attrs": {
                                                    "d": {
                                                        "type": "static",
                                                        "content": "M5 12h14m-7-7v14"
                                                    }
                                                    }
                                                }
                                                ]
                                            },
                                            {
                                                "type": "static",
                                                "content": "Create First Workspace"
                                            }
                                            ]
                                        }
                                        ]
                                    },
                                    "fallback": {
                                        "type": "element",
                                        "name": "workspaces-grid",
                                        "elementType": "div",
                                        "children": [
                                        {
                                            "type": "element",
                                            "name": "current-workspace-section",
                                            "elementType": "div",
                                            "attrs": {
                                            "className": {
                                                "type": "static",
                                                "content": "mb-8"
                                            }
                                            },
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "current-workspace-title",
                                                "elementType": "h2",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-lg font-semibold text-foreground mb-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "Current Workspace"
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "current-workspace-card",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "bg-primary/5 border-2 border-primary/20 rounded-lg p-6 max-w-md"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "element",
                                                    "name": "current-workspace-header",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "flex items-center gap-3 mb-3"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "current-workspace-avatar",
                                                        "elementType": "div",
                                                        "attrs": {
                                                        "className": {
                                                            "type": "static",
                                                            "content": "w-12 h-12 bg-primary/20 rounded-lg flex items-center justify-center"
                                                        }
                                                        },
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "current-workspace-icon",
                                                            "elementType": "span",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "text-lg font-semibold text-primary"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "comp",
                                                                "id": "currentWorkspaceInitials"
                                                                }
                                                            }
                                                            ]
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "current-workspace-details",
                                                        "elementType": "div",
                                                        "children": [
                                                        {
                                                            "type": "element",
                                                            "name": "current-workspace-name",
                                                            "elementType": "h3",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "font-semibold text-foreground"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "dynamic",
                                                                "content": {
                                                                "referenceType": "prop",
                                                                "id": "currentWorkspaceName"
                                                                }
                                                            }
                                                            ]
                                                        },
                                                        {
                                                            "type": "element",
                                                            "name": "current-workspace-badge",
                                                            "elementType": "span",
                                                            "attrs": {
                                                            "className": {
                                                                "type": "static",
                                                                "content": "bg-primary text-primary-foreground px-2 py-1 rounded-full text-xs font-medium"
                                                            }
                                                            },
                                                            "children": [
                                                            {
                                                                "type": "static",
                                                                "content": "Current"
                                                            }
                                                            ]
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "current-workspace-description",
                                                    "elementType": "p",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "text-muted-foreground text-sm mb-4"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "dynamic",
                                                        "content": {
                                                        "referenceType": "prop",
                                                        "id": "currentWorkspaceDescription"
                                                        }
                                                    }
                                                    ]
                                                },
                                                {
                                                    "type": "element",
                                                    "name": "current-workspace-stats",
                                                    "elementType": "div",
                                                    "attrs": {
                                                    "className": {
                                                        "type": "static",
                                                        "content": "flex items-center gap-4 text-xs text-muted-foreground"
                                                    }
                                                    },
                                                    "children": [
                                                    {
                                                        "type": "element",
                                                        "name": "workspace-flows-count",
                                                        "elementType": "span",
                                                        "children": [
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "prop",
                                                            "id": "currentWorkspaceFlowsCount"
                                                            }
                                                        },
                                                        {
                                                            "type": "static",
                                                            "content": " flows"
                                                        }
                                                        ]
                                                    },
                                                    {
                                                        "type": "element",
                                                        "name": "workspace-members-count",
                                                        "elementType": "span",
                                                        "children": [
                                                        {
                                                            "type": "dynamic",
                                                            "content": {
                                                            "referenceType": "prop",
                                                            "id": "currentWorkspaceMembersCount"
                                                            }
                                                        },
                                                        {
                                                            "type": "static",
                                                            "content": " members"
                                                        }
                                                        ]
                                                    }
                                                    ]
                                                }
                                                ]
                                            }
                                            ]
                                        },
                                        {
                                            "type": "element",
                                            "name": "other-workspaces-section",
                                            "elementType": "div",
                                            "children": [
                                            {
                                                "type": "element",
                                                "name": "other-workspaces-title",
                                                "elementType": "h2",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "text-lg font-semibold text-foreground mb-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "static",
                                                    "content": "Available Workspaces"
                                                }
                                                ]
                                            },
                                            {
                                                "type": "element",
                                                "name": "workspaces-grid-container",
                                                "elementType": "div",
                                                "attrs": {
                                                "className": {
                                                    "type": "static",
                                                    "content": "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4"
                                                }
                                                },
                                                "children": [
                                                {
                                                    "type": "repeat",
                                                    "dataSource": {
                                                    "type": "dynamic",
                                                    "content": {
                                                        "referenceType": "prop",
                                                        "id": "otherWorkspaces"
                                                    }
                                                    },
                                                    "node": {
                                                    "type": "element",
                                                    "name": "workspace-card",
                                                    "elementType": "div",
                                                    "attrs": {
                                                        "className": {
                                                        "type": "static",
                                                        "content": "bg-card border border-border rounded-lg p-4 hover:shadow-md transition-all duration-200 cursor-pointer hover:border-primary/30"
                                                        }
                                                    },
                                                    "events": {
                                                        "onClick": [
                                                        {
                                                            "type": "propCall",
                                                            "id": "handleSwitchWorkspace"
                                                        }
                                                        ]
                                                    },
                                                    "children": [
                                                        {
                                                        "type": "element",
                                                        "name": "workspace-card-header",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "flex items-center gap-3 mb-3"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "workspace-avatar",
                                                            "elementType": "div",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "w-10 h-10 bg-muted rounded-lg flex items-center justify-center"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "name": "workspace-initials",
                                                                "elementType": "span",
                                                                "attrs": {
                                                                    "className": {
                                                                    "type": "static",
                                                                    "content": "text-sm font-semibold text-foreground"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "comp",
                                                                        "id": "workspaceInitials"
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "workspace-details",
                                                            "elementType": "div",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "flex-1 min-w-0"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "name": "workspace-name",
                                                                "elementType": "h3",
                                                                "attrs": {
                                                                    "className": {
                                                                    "type": "static",
                                                                    "content": "font-medium text-foreground truncate"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "local",
                                                                        "id": "name"
                                                                    }
                                                                    }
                                                                ]
                                                                },
                                                                {
                                                                "type": "element",
                                                                "name": "workspace-role",
                                                                "elementType": "p",
                                                                "attrs": {
                                                                    "className": {
                                                                    "type": "static",
                                                                    "content": "text-xs text-muted-foreground"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "local",
                                                                        "id": "role"
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "workspace-menu-button",
                                                            "elementType": "button",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "p-1 hover:bg-muted rounded opacity-0 group-hover:opacity-100 transition-opacity"
                                                                },
                                                                "title": {
                                                                "type": "static",
                                                                "content": "Workspace options"
                                                                }
                                                            },
                                                            "events": {
                                                                "onClick": [
                                                                {
                                                                    "type": "propCall",
                                                                    "id": "handleWorkspaceMenu"
                                                                }
                                                                ]
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "name": "menu-dots-icon",
                                                                "elementType": "svg",
                                                                "attrs": {
                                                                    "width": {
                                                                    "type": "static",
                                                                    "content": "16"
                                                                    },
                                                                    "height": {
                                                                    "type": "static",
                                                                    "content": "16"
                                                                    },
                                                                    "viewBox": {
                                                                    "type": "static",
                                                                    "content": "0 0 24 24"
                                                                    },
                                                                    "fill": {
                                                                    "type": "static",
                                                                    "content": "none"
                                                                    },
                                                                    "stroke": {
                                                                    "type": "static",
                                                                    "content": "currentColor"
                                                                    },
                                                                    "strokeWidth": {
                                                                    "type": "static",
                                                                    "content": "2"
                                                                    }
                                                                },
                                                                "children": [
                                                                    {
                                                                    "type": "element",
                                                                    "name": "dots-path",
                                                                    "elementType": "path",
                                                                    "attrs": {
                                                                        "d": {
                                                                        "type": "static",
                                                                        "content": "M12 12h.01M12 6h.01M12 18h.01"
                                                                        }
                                                                    }
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "workspace-description",
                                                        "elementType": "p",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "text-muted-foreground text-sm mb-3 line-clamp-2"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "dynamic",
                                                            "content": {
                                                                "referenceType": "local",
                                                                "id": "description"
                                                            }
                                                            }
                                                        ]
                                                        },
                                                        {
                                                        "type": "element",
                                                        "name": "workspace-stats",
                                                        "elementType": "div",
                                                        "attrs": {
                                                            "className": {
                                                            "type": "static",
                                                            "content": "flex items-center justify-between text-xs text-muted-foreground"
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                            "type": "element",
                                                            "name": "workspace-counts",
                                                            "elementType": "div",
                                                            "attrs": {
                                                                "className": {
                                                                "type": "static",
                                                                "content": "flex items-center gap-3"
                                                                }
                                                            },
                                                            "children": [
                                                                {
                                                                "type": "element",
                                                                "name": "flows-count",
                                                                "elementType": "span",
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "local",
                                                                        "id": "flowsCount"
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": " flows"
                                                                    }
                                                                ]
                                                                },
                                                                {
                                                                "type": "element",
                                                                "name": "members-count",
                                                                "elementType": "span",
                                                                "children": [
                                                                    {
                                                                    "type": "dynamic",
                                                                    "content": {
                                                                        "referenceType": "local",
                                                                        "id": "membersCount"
                                                                    }
                                                                    },
                                                                    {
                                                                    "type": "static",
                                                                    "content": " members"
                                                                    }
                                                                ]
                                                                }
                                                            ]
                                                            },
                                                            {
                                                            "type": "element",
                                                            "name": "last-activity",
                                                            "elementType": "span",
                                                            "children": [
                                                                {
                                                                "type": "dynamic",
                                                                "content": {
                                                                    "referenceType": "local",
                                                                    "id": "lastActivity"
                                                                }
                                                                }
                                                            ]
                                                            }
                                                        ]
                                                        }
                                                    ]
                                                    }
                                                }
                                                ]
                                            }
                                            ]
                                        }
                                        ]
                                    }
                                    }
                                }
                                ]
                            }
                            ]
                        },
                        "stateDefinitions": {
                            "isLoading": {
                            "type": "boolean",
                            "defaultValue": false
                            },
                            "currentWorkspace": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "otherWorkspaces": {
                            "type": "array",
                            "defaultValue": []
                            },
                            "selectedWorkspace": {
                            "type": "object",
                            "defaultValue": null
                            },
                            "showCreateModal": {
                            "type": "boolean",
                            "defaultValue": false
                            }
                        },
                        "propDefinitions": {
                            "isLoading": {
                            "type": "boolean"
                            },
                            "currentWorkspace": {
                            "type": "object"
                            },
                            "currentWorkspaceName": {
                            "type": "string"
                            },
                            "currentWorkspaceDescription": {
                            "type": "string"
                            },
                            "currentWorkspaceFlowsCount": {
                            "type": "number"
                            },
                            "currentWorkspaceMembersCount": {
                            "type": "number"
                            },
                            "otherWorkspaces": {
                            "type": "array"
                            },
                            "selectedWorkspace": {
                            "type": "object"
                            },
                            "showCreateModal": {
                            "type": "boolean"
                            },
                            "handleRefresh": {
                            "type": "func"
                            },
                            "handleCreateWorkspace": {
                            "type": "func"
                            },
                            "handleSwitchWorkspace": {
                            "type": "func"
                            },
                            "handleWorkspaceMenu": {
                            "type": "func"
                            }
                        },
                        "mappings": {
                            "components": {
                            "refreshIconClass": "props.isLoading ? 'animate-spin' : ''",
                            "hasWorkspaces": "props.otherWorkspaces.length > 0 || props.currentWorkspace !== null",
                            "currentWorkspaceInitials": "props.currentWorkspaceName ? props.currentWorkspaceName.split(' ').map(w => w[0]).join('').substring(0, 2).toUpperCase() : 'WS'",
                            "workspaceInitials": "local.name ? local.name.split(' ').map(w => w[0]).join('').substring(0, 2).toUpperCase() : 'WS'"
                            }
                        }
                        }
				}
			],
			"logic_nodes": [
				{
					"id": "application_lifecycle",
					"type": "logic",
					"name": "Application Lifecycle Management",
					"description": "Core application startup, initialization, and shutdown orchestration with service management",
					"path": "src/backend/base/langflow/main.py",
					"workflow_states": [
						"initializing",
						"services_starting",
						"ready",
						"processing",
						"shutting_down"
					],
					"statechart": {
						"id": "applicationLifecycleStatechart",
						"initial": "initializing",
						"states": {
							"initializing": {
								"entry": [
									"setup_llm_caching",
									"initialize_superuser"
								],
								"on": {
									"BUNDLES_LOADED": "services_starting",
									"INITIALIZATION_FAILED": "error"
								}
							},
							"services_starting": {
								"entry": [
									"load_bundles",
									"cache_types",
									"create_starter_projects"
								],
								"on": {
									"SERVICES_STARTED": "ready",
									"SERVICE_FAILED": "error"
								}
							},
							"ready": {
								"entry": [
									"start_telemetry",
									"load_flows",
									"load_mcp_servers"
								],
								"on": {
									"PROCESS_REQUEST": "processing",
									"SHUTDOWN_REQUESTED": "shutting_down"
								}
							},
							"processing": {
								"on": {
									"PROCESSING_COMPLETE": "ready",
									"SHUTDOWN_REQUESTED": "shutting_down",
									"ERROR_OCCURRED": "error"
								}
							},
							"shutting_down": {
								"entry": [
									"stop_services",
									"cleanup_tasks",
									"teardown_services"
								],
								"on": {
									"SHUTDOWN_COMPLETE": "stopped"
								}
							},
							"error": {
								"on": {
									"RESTART": "initializing",
									"SHUTDOWN_REQUESTED": "shutting_down"
								}
							},
							"stopped": {
								"type": "final",
								"entry": [
									"clean_temp_files"
								]
							}
						}
					},
					"business_logic": {
						"initialization_sequence": [
							"setup_llm_caching",
							"initialize_superuser",
							"load_bundles",
							"cache_types",
							"create_starter_projects",
							"start_telemetry",
							"load_flows",
							"load_mcp_servers"
						],
						"shutdown_sequence": [
							"stop_services",
							"cleanup_tasks",
							"teardown_services",
							"clean_temp_files"
						]
					}
				},
				{
					"id": "flow_execution_engine",
					"type": "logic",
					"name": "Flow Execution Engine",
					"description": "Graph-based flow execution with dependency resolution, parallel processing, and state management",
					"path": "src/backend/base/langflow/graph/graph/",
					"workflow_states": [
						"draft",
						"validating",
						"building",
						"running",
						"success",
						"error",
						"cancelled"
					],
					"statechart": {
						"id": "flowExecutionStatechart",
						"initial": "draft",
						"states": {
							"draft": {
								"on": {
									"START_VALIDATION": "validating"
								}
							},
							"validating": {
								"entry": [
									"prepare_graph",
									"sort_vertices"
								],
								"on": {
									"VALIDATION_SUCCESS": "building",
									"VALIDATION_FAILED": "error",
									"CYCLES_DETECTED": "error"
								}
							},
							"building": {
								"entry": [
									"detect_cycles",
									"build_vertices"
								],
								"on": {
									"BUILD_SUCCESS": "running",
									"BUILD_FAILED": "error"
								}
							},
							"running": {
								"entry": [
									"execute_vertices"
								],
								"states": {
									"streaming": {
										"on": {
											"SWITCH_TO_BATCH": "batch",
											"ENABLE_DEBUG": "debug"
										}
									},
									"batch": {
										"on": {
											"SWITCH_TO_STREAMING": "streaming",
											"ENABLE_DEBUG": "debug"
										}
									},
									"debug": {
										"on": {
											"DISABLE_DEBUG": "streaming"
										}
									}
								},
								"initial": "streaming",
								"on": {
									"EXECUTION_SUCCESS": "success",
									"EXECUTION_FAILED": "error",
									"CANCEL_EXECUTION": "cancelled"
								}
							},
							"success": {
								"entry": [
									"collect_results"
								],
								"on": {
									"RESTART": "draft"
								}
							},
							"error": {
								"entry": [
									"handle_error"
								],
								"on": {
									"RETRY": "validating",
									"ROLLBACK": "draft",
									"PARTIAL_EXECUTION": "success"
								}
							},
							"cancelled": {
								"entry": [
									"cleanup_resources"
								],
								"on": {
									"RESTART": "draft"
								}
							}
						}
					},
					"business_logic": {
						"build_process": [
							"prepare_graph",
							"sort_vertices",
							"detect_cycles",
							"execute_vertices",
							"collect_results"
						],
						"execution_modes": [
							"streaming",
							"batch",
							"debug"
						],
						"error_handling": [
							"graceful_degradation",
							"partial_execution",
							"rollback"
						]
					}
				},
				{
					"id": "job_queue_system",
					"type": "logic",
					"name": "Asynchronous Job Queue System",
					"description": "Background job processing with event streaming, cancellation support, and resource management",
					"path": "src/backend/base/langflow/services/job_queue/",
					"workflow_states": [
						"creating",
						"queued",
						"running",
						"completed",
						"failed",
						"cancelled"
					],
					"statechart": {
						"id": "jobQueueStatechart",
						"initial": "creating",
						"states": {
							"creating": {
								"entry": [
									"create_job",
									"validate_parameters"
								],
								"on": {
									"JOB_CREATED": "queued",
									"VALIDATION_FAILED": "failed"
								}
							},
							"queued": {
								"entry": [
									"queue_job",
									"assign_priority"
								],
								"on": {
									"START_PROCESSING": "running",
									"CANCEL_JOB": "cancelled",
									"TIMEOUT": "failed"
								}
							},
							"running": {
								"entry": [
									"process_job",
									"start_event_streaming"
								],
								"states": {
									"streaming": {
										"entry": [
											"setup_stream"
										],
										"on": {
											"SWITCH_TO_POLLING": "polling"
										}
									},
									"polling": {
										"entry": [
											"setup_polling"
										],
										"on": {
											"SWITCH_TO_STREAMING": "streaming",
											"SWITCH_TO_DIRECT": "direct"
										}
									},
									"direct": {
										"entry": [
											"setup_direct_delivery"
										],
										"on": {
											"SWITCH_TO_STREAMING": "streaming"
										}
									}
								},
								"initial": "streaming",
								"on": {
									"JOB_COMPLETED": "completed",
									"JOB_FAILED": "failed",
									"CANCEL_JOB": "cancelled",
									"TIMEOUT": "failed"
								}
							},
							"completed": {
								"entry": [
									"stream_final_events",
									"cleanup_resources"
								],
								"on": {
									"ARCHIVE": "archived"
								}
							},
							"failed": {
								"entry": [
									"log_error",
									"cleanup_resources"
								],
								"on": {
									"RETRY": "queued",
									"ARCHIVE": "archived"
								}
							},
							"cancelled": {
								"entry": [
									"stop_processing",
									"cleanup_resources"
								],
								"on": {
									"ARCHIVE": "archived"
								}
							},
							"archived": {
								"type": "final",
								"entry": [
									"grace_period_cleanup"
								]
							}
						}
					},
					"business_logic": {
						"job_lifecycle": [
							"create_job",
							"queue_job",
							"process_job",
							"stream_events",
							"cleanup_resources"
						],
						"event_delivery_modes": [
							"streaming",
							"polling",
							"direct"
						],
						"resource_management": [
							"grace_period_cleanup",
							"memory_limits",
							"timeout_handling"
						]
					}
				},
				{
					"id": "authentication_system",
					"type": "logic",
					"name": "Authentication and Authorization System",
					"description": "JWT-based authentication with API key support, session management, and user isolation",
					"path": "src/backend/base/langflow/services/auth/",
					"workflow_states": [
						"unauthenticated",
						"authenticating",
						"authenticated",
						"token_expired",
						"refreshing"
					],
					"statechart": {
						"id": "authStatechart",
						"initial": "unauthenticated",
						"states": {
							"unauthenticated": {
								"on": {
									"LOGIN_REQUEST": "authenticating",
									"API_KEY_PROVIDED": "validating_api_key"
								}
							},
							"authenticating": {
								"entry": [
									"validate_credentials",
									"check_rate_limits"
								],
								"on": {
									"CREDENTIALS_VALID": "generating_token",
									"CREDENTIALS_INVALID": "unauthenticated",
									"RATE_LIMITED": "rate_limited",
									"ACCOUNT_LOCKED": "locked"
								}
							},
							"validating_api_key": {
								"entry": [
									"hash_api_key",
									"check_usage_limits"
								],
								"on": {
									"API_KEY_VALID": "authenticated",
									"API_KEY_INVALID": "unauthenticated",
									"USAGE_EXCEEDED": "rate_limited"
								}
							},
							"generating_token": {
								"entry": [
									"hash_password",
									"generate_jwt",
									"encrypt_token"
								],
								"on": {
									"TOKEN_GENERATED": "creating_session",
									"TOKEN_GENERATION_FAILED": "unauthenticated"
								}
							},
							"creating_session": {
								"entry": [
									"create_user_session",
									"apply_data_scoping"
								],
								"on": {
									"SESSION_CREATED": "authenticated",
									"SESSION_FAILED": "unauthenticated"
								}
							},
							"authenticated": {
								"entry": [
									"check_permissions",
									"apply_resource_access_control"
								],
								"on": {
									"LOGOUT": "unauthenticated",
									"TOKEN_EXPIRED": "refreshing",
									"SESSION_TIMEOUT": "unauthenticated",
									"PERMISSION_DENIED": "insufficient_permissions"
								}
							},
							"refreshing": {
								"entry": [
									"validate_refresh_token"
								],
								"on": {
									"REFRESH_SUCCESS": "generating_token",
									"REFRESH_FAILED": "unauthenticated"
								}
							},
							"rate_limited": {
								"entry": [
									"log_rate_limit_violation"
								],
								"after": {
									"RATE_LIMIT_TIMEOUT": "unauthenticated"
								}
							},
							"locked": {
								"entry": [
									"log_account_lock"
								],
								"on": {
									"UNLOCK_ACCOUNT": "unauthenticated"
								}
							},
							"insufficient_permissions": {
								"entry": [
									"log_permission_denial"
								],
								"on": {
									"REQUEST_PERMISSION": "authenticated",
									"LOGOUT": "unauthenticated"
								}
							}
						}
					},
					"business_logic": {
						"auth_flows": [
							"credential_validation",
							"token_generation",
							"session_creation",
							"permission_check"
						],
						"security_measures": [
							"password_hashing",
							"token_encryption",
							"api_key_hashing",
							"rate_limiting"
						],
						"user_isolation": [
							"data_scoping",
							"resource_access_control",
							"cross_tenant_protection"
						]
					}
				},
				{
					"id": "real_time_event_system",
					"type": "logic",
					"name": "Real-time Event Management System",
					"description": "Event-driven architecture with WebSocket/SSE support, queue management, and delivery guarantees",
					"path": "src/backend/base/langflow/events/",
					"workflow_states": [
						"event_received",
						"event_validated",
						"event_queued",
						"event_processing",
						"event_delivered"
					],
					"statechart": {
						"id": "realTimeEventStatechart",
						"initial": "event_received",
						"states": {
							"event_received": {
								"entry": [
									"capture_timestamp",
									"assign_event_id"
								],
								"on": {
									"START_VALIDATION": "event_validated",
									"INVALID_FORMAT": "rejected"
								}
							},
							"event_validated": {
								"entry": [
									"validate_schema",
									"classify_event_type"
								],
								"states": {
									"build_event": {
										"entry": [
											"process_build_context"
										]
									},
									"message_event": {
										"entry": [
											"process_message_context"
										]
									},
									"system_event": {
										"entry": [
											"process_system_context"
										]
									},
									"user_event": {
										"entry": [
											"process_user_context"
										]
									}
								},
								"on": {
									"VALIDATION_SUCCESS": "event_queued",
									"VALIDATION_FAILED": "rejected"
								}
							},
							"event_queued": {
								"entry": [
									"add_to_queue",
									"apply_priority"
								],
								"on": {
									"START_PROCESSING": "event_processing",
									"QUEUE_FULL": "backpressure"
								}
							},
							"event_processing": {
								"entry": [
									"select_delivery_mechanism"
								],
								"states": {
									"server_sent_events": {
										"entry": [
											"setup_sse_connection"
										],
										"on": {
											"CONNECTION_LOST": "retry",
											"DELIVERY_SUCCESS": "#event_delivered"
										}
									},
									"websocket": {
										"entry": [
											"setup_websocket_connection"
										],
										"on": {
											"CONNECTION_LOST": "retry",
											"DELIVERY_SUCCESS": "#event_delivered"
										}
									},
									"polling": {
										"entry": [
											"store_for_polling"
										],
										"on": {
											"POLL_REQUEST": "#event_delivered",
											"POLLING_TIMEOUT": "retry"
										}
									},
									"retry": {
										"entry": [
											"increment_retry_count"
										],
										"on": {
											"RETRY_DELIVERY": "server_sent_events",
											"MAX_RETRIES_EXCEEDED": "dead_letter"
										}
									},
									"dead_letter": {
										"entry": [
											"send_to_dead_letter_queue"
										],
										"on": {
											"MANUAL_RETRY": "server_sent_events"
										}
									}
								},
								"initial": "server_sent_events"
							},
							"event_delivered": {
								"id": "event_delivered",
								"entry": [
									"confirm_delivery",
									"update_metrics"
								],
								"type": "final"
							},
							"backpressure": {
								"entry": [
									"apply_backpressure"
								],
								"on": {
									"QUEUE_AVAILABLE": "event_queued",
									"DROP_EVENT": "rejected"
								}
							},
							"rejected": {
								"entry": [
									"log_rejection",
									"update_error_metrics"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"event_types": [
							"build_events",
							"message_events",
							"system_events",
							"user_events"
						],
						"delivery_mechanisms": [
							"server_sent_events",
							"websocket",
							"polling"
						],
						"reliability": [
							"delivery_guarantees",
							"retry_logic",
							"dead_letter_queues"
						]
					}
				},
				{
					"id": "component_management",
					"type": "logic",
					"name": "Component Lifecycle Management",
					"description": "Dynamic component loading, caching, validation, and execution with hot-reloading support",
					"path": "src/backend/base/langflow/components/",
					"workflow_states": [
						"unloaded",
						"loading",
						"validating",
						"cached",
						"executing",
						"error"
					],
					"statechart": {
						"id": "componentManagementStatechart",
						"initial": "unloaded",
						"states": {
							"unloaded": {
								"on": {
									"LOAD_COMPONENT": "loading",
									"HOT_RELOAD_DETECTED": "loading"
								}
							},
							"loading": {
								"entry": [
									"start_dynamic_import",
									"setup_file_watching"
								],
								"on": {
									"IMPORT_SUCCESS": "validating",
									"IMPORT_FAILED": "error",
									"DEPENDENCY_MISSING": "resolving_dependencies"
								}
							},
							"resolving_dependencies": {
								"entry": [
									"analyze_dependencies",
									"fetch_missing_dependencies"
								],
								"on": {
									"DEPENDENCIES_RESOLVED": "loading",
									"DEPENDENCY_CONFLICT": "error",
									"CIRCULAR_DEPENDENCY": "error"
								}
							},
							"validating": {
								"entry": [
									"validate_template",
									"check_schema_compliance"
								],
								"on": {
									"VALIDATION_SUCCESS": "caching",
									"VALIDATION_FAILED": "error"
								}
							},
							"caching": {
								"entry": [
									"cache_template",
									"cache_metadata"
								],
								"states": {
									"template_caching": {
										"entry": [
											"store_template_cache"
										]
									},
									"instance_caching": {
										"entry": [
											"prepare_instance_cache"
										]
									},
									"result_caching": {
										"entry": [
											"setup_result_cache"
										]
									}
								},
								"type": "parallel",
								"on": {
									"CACHING_COMPLETE": "cached",
									"CACHE_ERROR": "error"
								}
							},
							"cached": {
								"entry": [
									"mark_ready_for_execution"
								],
								"on": {
									"EXECUTE_COMPONENT": "executing",
									"INVALIDATE_CACHE": "loading",
									"FILE_CHANGED": "hot_reloading"
								}
							},
							"hot_reloading": {
								"entry": [
									"invalidate_cache",
									"track_changes"
								],
								"on": {
									"RELOAD_COMPLETE": "loading",
									"RELOAD_FAILED": "cached"
								}
							},
							"executing": {
								"entry": [
									"create_component_instance",
									"setup_execution_context"
								],
								"on": {
									"EXECUTION_SUCCESS": "cached",
									"EXECUTION_FAILED": "error",
									"CACHE_RESULT": "caching"
								}
							},
							"error": {
								"entry": [
									"log_error",
									"cleanup_partial_state"
								],
								"on": {
									"RETRY_LOAD": "loading",
									"RESET_COMPONENT": "unloaded"
								}
							}
						}
					},
					"business_logic": {
						"component_lifecycle": [
							"dynamic_import",
							"template_validation",
							"dependency_resolution",
							"instance_creation"
						],
						"caching_strategy": [
							"template_cache",
							"instance_cache",
							"result_cache"
						],
						"hot_reloading": [
							"file_watching",
							"cache_invalidation",
							"dependency_tracking"
						]
					}
				},
				{
					"id": "graph_state_management",
					"type": "logic",
					"name": "Graph State Management",
					"description": "Vertex state tracking, dependency resolution, and execution coordination with cycle detection",
					"path": "src/backend/base/langflow/graph/vertex/",
					"workflow_states": [
						"not_started",
						"building",
						"built",
						"running",
						"completed",
						"error"
					],
					"statechart": {
						"id": "graphStateManagementStatechart",
						"initial": "not_started",
						"states": {
							"not_started": {
								"on": {
									"BEGIN_BUILD": "building"
								}
							},
							"building": {
								"entry": [
									"track_vertex_states",
									"validate_edges"
								],
								"states": {
									"dependency_analysis": {
										"entry": [
											"build_dependency_graph",
											"determine_execution_order"
										],
										"on": {
											"CYCLES_DETECTED": "cycle_resolution",
											"DEPENDENCIES_RESOLVED": "#build_complete"
										}
									},
									"cycle_resolution": {
										"entry": [
											"detect_cycles",
											"apply_max_iterations"
										],
										"on": {
											"CYCLES_RESOLVED": "dependency_analysis",
											"CYCLES_UNRESOLVABLE": "#error"
										}
									}
								},
								"initial": "dependency_analysis",
								"on": {
									"BUILD_SUCCESS": "built",
									"BUILD_FAILED": "error"
								}
							},
							"built": {
								"id": "build_complete",
								"entry": [
									"finalize_dependency_graph",
									"prepare_execution_plan"
								],
								"on": {
									"START_EXECUTION": "running",
									"REBUILD_REQUIRED": "building"
								}
							},
							"running": {
								"entry": [
									"allocate_resources",
									"ensure_thread_safety"
								],
								"states": {
									"sequential_execution": {
										"entry": [
											"execute_vertices_sequentially"
										]
									},
									"parallel_execution": {
										"entry": [
											"execute_independent_vertices_parallel"
										],
										"states": {
											"resource_management": {
												"entry": [
													"monitor_resource_usage"
												]
											},
											"thread_coordination": {
												"entry": [
													"coordinate_thread_execution"
												]
											}
										},
										"type": "parallel"
									}
								},
								"initial": "parallel_execution",
								"on": {
									"EXECUTION_COMPLETE": "completed",
									"EXECUTION_FAILED": "error",
									"RESOURCE_EXHAUSTED": "error"
								}
							},
							"completed": {
								"entry": [
									"collect_results",
									"cleanup_resources"
								],
								"on": {
									"RESTART_EXECUTION": "not_started"
								}
							},
							"error": {
								"id": "error",
								"entry": [
									"log_error_details",
									"cleanup_partial_execution"
								],
								"on": {
									"RETRY_BUILD": "building",
									"RESET_STATE": "not_started"
								}
							}
						}
					},
					"business_logic": {
						"state_tracking": [
							"vertex_states",
							"edge_validation",
							"dependency_graph",
							"execution_order"
						],
						"cycle_handling": [
							"cycle_detection",
							"max_iterations",
							"cache_control"
						],
						"parallelization": [
							"independent_execution",
							"resource_allocation",
							"thread_safety"
						]
					}
				},
				{
					"id": "validation_engine",
					"type": "logic",
					"name": "Multi-layer Validation Engine",
					"description": "Comprehensive input validation with schema validation, business rules, and data integrity checks",
					"path": "src/backend/base/langflow/api/",
					"workflow_states": [
						"schema_validation",
						"business_validation",
						"integrity_validation",
						"validated",
						"rejected"
					],
					"statechart": {
						"id": "validationEngineStatechart",
						"initial": "schema_validation",
						"states": {
							"schema_validation": {
								"entry": [
									"apply_pydantic_schema",
									"check_field_types"
								],
								"on": {
									"SCHEMA_VALID": "business_validation",
									"SCHEMA_INVALID": "collecting_errors",
									"FIELD_ERROR": "collecting_errors"
								}
							},
							"business_validation": {
								"entry": [
									"apply_business_rules",
									"check_constraints"
								],
								"states": {
									"constraint_checking": {
										"entry": [
											"validate_constraints"
										]
									},
									"custom_validation": {
										"entry": [
											"run_custom_validators"
										]
									},
									"performance_optimization": {
										"states": {
											"caching": {
												"entry": [
													"check_validation_cache"
												]
											},
											"lazy_validation": {
												"entry": [
													"defer_expensive_validations"
												]
											},
											"batch_processing": {
												"entry": [
													"batch_similar_validations"
												]
											}
										},
										"type": "parallel"
									}
								},
								"type": "parallel",
								"on": {
									"BUSINESS_RULES_VALID": "integrity_validation",
									"CONSTRAINT_VIOLATION": "collecting_errors",
									"BUSINESS_RULE_FAILED": "collecting_errors"
								}
							},
							"integrity_validation": {
								"entry": [
									"check_data_integrity",
									"validate_relationships"
								],
								"on": {
									"INTEGRITY_VALID": "validated",
									"INTEGRITY_VIOLATION": "collecting_errors"
								}
							},
							"collecting_errors": {
								"entry": [
									"aggregate_field_errors",
									"format_error_messages"
								],
								"on": {
									"ERRORS_COLLECTED": "rejected"
								}
							},
							"validated": {
								"entry": [
									"mark_validation_success",
									"cache_validation_result"
								],
								"type": "final"
							},
							"rejected": {
								"entry": [
									"provide_error_feedback",
									"suggest_corrections"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"validation_layers": [
							"pydantic_schema_validation",
							"business_rule_validation",
							"data_integrity_validation"
						],
						"error_handling": [
							"field_errors",
							"constraint_violations",
							"custom_validations"
						],
						"performance": [
							"validation_caching",
							"lazy_validation",
							"batch_validation"
						]
					}
				},
				{
					"id": "caching_system",
					"type": "logic",
					"name": "Multi-level Caching System",
					"description": "Hierarchical caching with TTL management, cache invalidation, and performance optimization",
					"path": "src/backend/base/langflow/services/cache/",
					"workflow_states": [
						"cache_miss",
						"loading",
						"cached",
						"stale",
						"invalidated"
					],
					"statechart": {
						"id": "cachingSystemStatechart",
						"initial": "cache_miss",
						"states": {
							"cache_miss": {
								"entry": [
									"log_cache_miss",
									"identify_cache_level"
								],
								"on": {
									"START_LOADING": "loading"
								}
							},
							"loading": {
								"entry": [
									"fetch_data",
									"apply_compression"
								],
								"states": {
									"graph_cache_loading": {
										"entry": [
											"load_graph_data"
										]
									},
									"component_cache_loading": {
										"entry": [
											"load_component_data"
										]
									},
									"api_response_cache_loading": {
										"entry": [
											"load_api_response"
										]
									},
									"vertex_result_cache_loading": {
										"entry": [
											"load_vertex_results"
										]
									}
								},
								"on": {
									"DATA_LOADED": "serializing",
									"LOAD_FAILED": "cache_miss"
								}
							},
							"serializing": {
								"entry": [
									"serialize_data",
									"optimize_storage"
								],
								"on": {
									"SERIALIZATION_COMPLETE": "storing",
									"SERIALIZATION_FAILED": "cache_miss"
								}
							},
							"storing": {
								"entry": [
									"store_in_cache",
									"set_ttl",
									"manage_memory"
								],
								"on": {
									"STORAGE_SUCCESS": "cached",
									"STORAGE_FAILED": "cache_miss",
									"MEMORY_FULL": "evicting"
								}
							},
							"cached": {
								"entry": [
									"mark_cache_hit",
									"update_access_time"
								],
								"on": {
									"TTL_EXPIRED": "stale",
									"DEPENDENCY_CHANGED": "invalidated",
									"MANUAL_INVALIDATION": "invalidated",
									"CACHE_HIT": "cached"
								}
							},
							"stale": {
								"entry": [
									"mark_as_stale"
								],
								"on": {
									"REFRESH_CACHE": "loading",
									"INVALIDATE": "invalidated",
									"SERVE_STALE": "cached"
								}
							},
							"invalidated": {
								"entry": [
									"remove_from_cache",
									"cleanup_memory"
								],
								"on": {
									"RELOAD_REQUESTED": "cache_miss"
								}
							},
							"evicting": {
								"entry": [
									"apply_eviction_policy",
									"free_memory"
								],
								"on": {
									"EVICTION_COMPLETE": "storing",
									"EVICTION_FAILED": "cache_miss"
								}
							}
						}
					},
					"business_logic": {
						"cache_levels": [
							"graph_cache",
							"component_cache",
							"api_response_cache",
							"vertex_result_cache"
						],
						"invalidation_strategies": [
							"ttl_expiration",
							"dependency_invalidation",
							"manual_invalidation"
						],
						"optimization": [
							"compression",
							"serialization",
							"memory_management"
						]
					}
				},
				{
					"id": "error_handling_system",
					"type": "logic",
					"name": "Comprehensive Error Handling System",
					"description": "Multi-level error handling with recovery strategies, logging, and user feedback",
					"path": "src/backend/base/langflow/exceptions/",
					"workflow_states": [
						"error_detected",
						"error_classified",
						"recovery_attempted",
						"escalated",
						"resolved"
					],
					"statechart": {
						"id": "errorHandlingStatechart",
						"initial": "error_detected",
						"states": {
							"error_detected": {
								"entry": [
									"capture_error_context",
									"timestamp_error"
								],
								"on": {
									"START_CLASSIFICATION": "error_classified"
								}
							},
							"error_classified": {
								"entry": [
									"analyze_error_type",
									"determine_severity"
								],
								"states": {
									"component_build_error": {
										"entry": [
											"handle_build_failure"
										]
									},
									"streaming_error": {
										"entry": [
											"handle_stream_failure"
										]
									},
									"job_queue_error": {
										"entry": [
											"handle_job_failure"
										]
									},
									"validation_error": {
										"entry": [
											"handle_validation_failure"
										]
									}
								},
								"on": {
									"CLASSIFICATION_COMPLETE": "recovery_attempted",
									"UNKNOWN_ERROR_TYPE": "escalated"
								}
							},
							"recovery_attempted": {
								"entry": [
									"select_recovery_strategy"
								],
								"states": {
									"graceful_degradation": {
										"entry": [
											"reduce_functionality",
											"maintain_core_services"
										],
										"on": {
											"DEGRADATION_SUCCESS": "#resolved",
											"DEGRADATION_FAILED": "#escalated"
										}
									},
									"retry_mechanism": {
										"entry": [
											"increment_retry_count",
											"apply_backoff"
										],
										"on": {
											"RETRY_SUCCESS": "#resolved",
											"MAX_RETRIES_EXCEEDED": "circuit_breaker",
											"RETRY_FAILED": "circuit_breaker"
										}
									},
									"circuit_breaker": {
										"entry": [
											"open_circuit",
											"route_to_fallback"
										],
										"states": {
											"open": {
												"entry": [
													"block_requests"
												],
												"after": {
													"CIRCUIT_TIMEOUT": "half_open"
												}
											},
											"half_open": {
												"entry": [
													"allow_test_requests"
												],
												"on": {
													"TEST_SUCCESS": "closed",
													"TEST_FAILED": "open"
												}
											},
											"closed": {
												"entry": [
													"resume_normal_operation"
												]
											}
										},
										"initial": "open",
										"on": {
											"FALLBACK_SUCCESS": "#resolved",
											"FALLBACK_FAILED": "#escalated"
										}
									},
									"fallback_response": {
										"entry": [
											"provide_default_response",
											"log_fallback_usage"
										],
										"on": {
											"FALLBACK_SERVED": "#resolved"
										}
									}
								},
								"initial": "retry_mechanism"
							},
							"escalated": {
								"id": "escalated",
								"entry": [
									"notify_administrators",
									"create_incident_ticket"
								],
								"on": {
									"MANUAL_RESOLUTION": "resolved",
									"SYSTEM_RESTART_REQUIRED": "system_restart"
								}
							},
							"resolved": {
								"id": "resolved",
								"entry": [
									"generate_user_friendly_message",
									"provide_recovery_suggestions",
									"report_resolution"
								],
								"type": "final"
							},
							"system_restart": {
								"entry": [
									"initiate_graceful_restart"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"error_classification": [
							"component_build_errors",
							"streaming_errors",
							"job_queue_errors",
							"validation_errors"
						],
						"recovery_strategies": [
							"graceful_degradation",
							"retry_mechanisms",
							"circuit_breakers",
							"fallback_responses"
						],
						"user_experience": [
							"user_friendly_messages",
							"recovery_suggestions",
							"error_reporting"
						]
					}
				},
				{
					"id": "security_access_control",
					"type": "logic",
					"name": "Security and Access Control System",
					"description": "Comprehensive security with RBAC, data isolation, input sanitization, and audit logging",
					"path": "src/backend/base/langflow/services/security/",
					"workflow_states": [
						"access_requested",
						"identity_verified",
						"permissions_checked",
						"access_granted",
						"access_denied"
					],
					"statechart": {
						"id": "securityAccessControlStatechart",
						"initial": "access_requested",
						"states": {
							"access_requested": {
								"entry": [
									"capture_access_request",
									"identify_user_context"
								],
								"on": {
									"START_VERIFICATION": "identity_verified"
								}
							},
							"identity_verified": {
								"entry": [
									"verify_user_identity",
									"check_session_validity"
								],
								"on": {
									"IDENTITY_VALID": "permissions_checked",
									"IDENTITY_INVALID": "access_denied",
									"SESSION_EXPIRED": "access_denied"
								}
							},
							"permissions_checked": {
								"entry": [
									"check_role_based_permissions",
									"validate_resource_access"
								],
								"states": {
									"rbac_validation": {
										"entry": [
											"validate_user_roles",
											"check_permission_matrix"
										],
										"on": {
											"ROLE_AUTHORIZED": "#resource_validation",
											"ROLE_DENIED": "#access_denied"
										}
									},
									"resource_validation": {
										"entry": [
											"validate_resource_ownership",
											"check_resource_permissions"
										],
										"on": {
											"RESOURCE_AUTHORIZED": "#isolation_check",
											"RESOURCE_DENIED": "#access_denied"
										}
									},
									"isolation_check": {
										"entry": [
											"enforce_user_isolation",
											"prevent_cross_tenant_access"
										],
										"on": {
											"ISOLATION_VALID": "#rate_limit_check",
											"ISOLATION_VIOLATION": "#access_denied"
										}
									},
									"rate_limit_check": {
										"entry": [
											"check_api_rate_limits",
											"update_usage_counters"
										],
										"on": {
											"RATE_LIMIT_OK": "#data_protection",
											"RATE_LIMIT_EXCEEDED": "#access_denied"
										}
									},
									"data_protection": {
										"entry": [
											"sanitize_input",
											"filter_output",
											"mask_sensitive_data"
										],
										"states": {
											"input_sanitization": {
												"entry": [
													"remove_malicious_content",
													"validate_input_format"
												]
											},
											"output_filtering": {
												"entry": [
													"filter_sensitive_fields",
													"apply_field_level_security"
												]
											},
											"data_masking": {
												"entry": [
													"mask_pii",
													"encrypt_at_rest"
												]
											}
										},
										"type": "parallel",
										"on": {
											"DATA_PROTECTION_COMPLETE": "#access_granted"
										}
									}
								},
								"initial": "rbac_validation"
							},
							"access_granted": {
								"id": "access_granted",
								"entry": [
									"log_successful_access",
									"track_resource_usage",
									"start_compliance_audit"
								],
								"on": {
									"SESSION_TIMEOUT": "access_denied",
									"PERMISSIONS_REVOKED": "access_denied"
								}
							},
							"access_denied": {
								"id": "access_denied",
								"entry": [
									"log_access_denial",
									"increment_failure_counter",
									"generate_audit_trail"
								],
								"on": {
									"RETRY_ACCESS": "access_requested"
								},
								"type": "final"
							}
						}
					},
					"business_logic": {
						"access_control": [
							"role_based_permissions",
							"resource_level_access",
							"cross_user_isolation",
							"api_rate_limiting"
						],
						"data_protection": [
							"input_sanitization",
							"output_filtering",
							"sensitive_data_masking",
							"encryption_at_rest"
						],
						"audit_compliance": [
							"access_logging",
							"change_tracking",
							"compliance_reporting"
						]
					}
				},
				{
					"id": "websocket_sse_communication",
					"type": "logic",
					"name": "WebSocket and SSE Communication System",
					"description": "Real-time bidirectional communication with connection management, heartbeats, and failover",
					"path": "src/backend/base/langflow/api/v1/endpoints.py",
					"workflow_states": [
						"disconnected",
						"connecting",
						"connected",
						"streaming",
						"reconnecting"
					],
					"statechart": {
						"id": "websocketSSEStatechart",
						"initial": "disconnected",
						"states": {
							"disconnected": {
								"entry": [
									"cleanup_previous_connection"
								],
								"on": {
									"CONNECT": "connecting"
								}
							},
							"connecting": {
								"entry": [
									"establish_connection",
									"setup_connection_pool"
								],
								"on": {
									"CONNECTION_SUCCESS": "connected",
									"CONNECTION_FAILED": "reconnecting",
									"TIMEOUT": "reconnecting"
								}
							},
							"connected": {
								"entry": [
									"start_heartbeat_monitoring",
									"initialize_message_queue"
								],
								"states": {
									"idle": {
										"on": {
											"MESSAGE_TO_SEND": "streaming",
											"HEARTBEAT_TIMEOUT": "reconnecting"
										}
									},
									"streaming": {
										"entry": [
											"serialize_events",
											"compress_messages"
										],
										"states": {
											"message_processing": {
												"entry": [
													"queue_messages",
													"apply_bandwidth_optimization"
												],
												"on": {
													"MESSAGE_QUEUED": "message_delivery",
													"QUEUE_FULL": "backpressure"
												}
											},
											"message_delivery": {
												"entry": [
													"send_message",
													"await_confirmation"
												],
												"on": {
													"DELIVERY_CONFIRMED": "message_processing",
													"DELIVERY_FAILED": "error_recovery",
													"CONNECTION_LOST": "#reconnecting"
												}
											},
											"error_recovery": {
												"entry": [
													"retry_message_delivery",
													"log_delivery_error"
												],
												"on": {
													"RECOVERY_SUCCESS": "message_delivery",
													"RECOVERY_FAILED": "#reconnecting",
													"MAX_RETRIES_EXCEEDED": "dead_letter"
												}
											},
											"backpressure": {
												"entry": [
													"apply_backpressure",
													"throttle_messages"
												],
												"on": {
													"PRESSURE_RELIEVED": "message_processing",
													"CLIENT_DISCONNECT": "#disconnected"
												}
											},
											"dead_letter": {
												"entry": [
													"move_to_dead_letter_queue"
												],
												"on": {
													"CONTINUE_PROCESSING": "message_processing"
												}
											}
										},
										"initial": "message_processing",
										"on": {
											"STREAMING_COMPLETE": "idle",
											"CONNECTION_ERROR": "#reconnecting"
										}
									}
								},
								"initial": "idle",
								"on": {
									"HEARTBEAT_FAILED": "reconnecting",
									"CONNECTION_LOST": "reconnecting",
									"DISCONNECT": "disconnected"
								}
							},
							"reconnecting": {
								"id": "reconnecting",
								"entry": [
									"increment_reconnect_attempts",
									"apply_exponential_backoff"
								],
								"on": {
									"RECONNECT_SUCCESS": "connected",
									"RECONNECT_FAILED": "graceful_degradation",
									"MAX_RECONNECT_ATTEMPTS": "graceful_degradation"
								}
							},
							"graceful_degradation": {
								"entry": [
									"switch_to_polling",
									"notify_degraded_service"
								],
								"on": {
									"RETRY_CONNECTION": "connecting",
									"ACCEPT_DEGRADED_MODE": "disconnected"
								}
							}
						}
					},
					"business_logic": {
						"connection_management": [
							"connection_establishment",
							"heartbeat_monitoring",
							"automatic_reconnection",
							"graceful_degradation"
						],
						"message_delivery": [
							"event_serialization",
							"message_queuing",
							"delivery_confirmation",
							"error_recovery"
						],
						"performance": [
							"connection_pooling",
							"message_compression",
							"bandwidth_optimization"
						]
					}
				},
				{
					"id": "frontend_state_management",
					"type": "logic",
					"name": "Frontend State Management System",
					"description": "Zustand-based state management with cross-store communication, persistence, and synchronization",
					"path": "src/frontend/src/stores/",
					"workflow_states": [
						"store_initializing",
						"store_ready",
						"action_dispatched",
						"state_updated",
						"persisted"
					],
					"statechart": {
						"id": "frontendStateManagementStatechart",
						"initial": "store_initializing",
						"states": {
							"store_initializing": {
								"entry": [
									"initialize_stores",
									"load_persisted_state"
								],
								"states": {
									"auth_store_init": {
										"entry": [
											"setup_auth_store"
										]
									},
									"flow_store_init": {
										"entry": [
											"setup_flow_store"
										]
									},
									"messages_store_init": {
										"entry": [
											"setup_messages_store"
										]
									},
									"voice_store_init": {
										"entry": [
											"setup_voice_store"
										]
									},
									"mcp_store_init": {
										"entry": [
											"setup_mcp_store"
										]
									}
								},
								"type": "parallel",
								"on": {
									"ALL_STORES_INITIALIZED": "store_ready",
									"INITIALIZATION_FAILED": "error"
								}
							},
							"store_ready": {
								"entry": [
									"enable_state_synchronization",
									"setup_persistence_watchers"
								],
								"on": {
									"ACTION_DISPATCHED": "state_updated",
									"SERVER_STATE_CHANGED": "syncing_server_state",
									"OFFLINE_MODE": "offline_handling"
								}
							},
							"state_updated": {
								"entry": [
									"apply_optimistic_updates",
									"validate_state_changes"
								],
								"states": {
									"local_storage_update": {
										"entry": [
											"persist_to_local_storage"
										]
									},
									"session_storage_update": {
										"entry": [
											"persist_to_session_storage"
										]
									},
									"cookie_storage_update": {
										"entry": [
											"persist_to_cookies"
										]
									}
								},
								"type": "parallel",
								"on": {
									"STATE_PERSISTED": "persisted",
									"PERSISTENCE_FAILED": "store_ready",
									"CONFLICT_DETECTED": "resolving_conflicts"
								}
							},
							"syncing_server_state": {
								"entry": [
									"fetch_server_state",
									"compare_with_local_state"
								],
								"on": {
									"SYNC_SUCCESS": "state_updated",
									"SYNC_CONFLICT": "resolving_conflicts",
									"SYNC_FAILED": "store_ready"
								}
							},
							"resolving_conflicts": {
								"entry": [
									"identify_conflicts",
									"apply_conflict_resolution_strategy"
								],
								"on": {
									"CONFLICT_RESOLVED": "state_updated",
									"MANUAL_RESOLUTION_REQUIRED": "awaiting_user_input"
								}
							},
							"awaiting_user_input": {
								"entry": [
									"present_conflict_resolution_ui"
								],
								"on": {
									"USER_RESOLUTION": "state_updated",
									"CANCEL_RESOLUTION": "store_ready"
								}
							},
							"offline_handling": {
								"entry": [
									"enable_offline_mode",
									"queue_offline_actions"
								],
								"on": {
									"ONLINE_RESTORED": "syncing_offline_changes",
									"OFFLINE_ACTION": "offline_handling"
								}
							},
							"syncing_offline_changes": {
								"entry": [
									"sync_queued_actions",
									"resolve_offline_conflicts"
								],
								"on": {
									"OFFLINE_SYNC_COMPLETE": "store_ready",
									"OFFLINE_SYNC_FAILED": "offline_handling"
								}
							},
							"persisted": {
								"entry": [
									"confirm_persistence",
									"cleanup_old_state"
								],
								"on": {
									"NEW_ACTION": "store_ready"
								}
							},
							"error": {
								"entry": [
									"log_state_error",
									"attempt_recovery"
								],
								"on": {
									"RECOVERY_SUCCESS": "store_ready",
									"RECOVERY_FAILED": "store_initializing"
								}
							}
						}
					},
					"business_logic": {
						"store_architecture": [
							"auth_store",
							"flow_store",
							"messages_store",
							"voice_store",
							"mcp_store"
						],
						"state_synchronization": [
							"optimistic_updates",
							"server_state_sync",
							"conflict_resolution",
							"offline_handling"
						],
						"persistence": [
							"local_storage",
							"session_storage",
							"cookie_storage"
						]
					}
				},
				{
					"id": "mcp_integration_system",
					"type": "logic",
					"name": "Model Context Protocol Integration System",
					"description": "MCP server management, tool discovery, and execution coordination with per-project isolation",
					"path": "src/backend/base/langflow/services/mcp/",
					"workflow_states": [
						"server_disconnected",
						"connecting",
						"connected",
						"tool_discovery",
						"tool_execution"
					],
					"statechart": {
						"id": "mcpIntegrationStatechart",
						"initial": "server_disconnected",
						"states": {
							"server_disconnected": {
								"entry": [
									"cleanup_previous_connections"
								],
								"on": {
									"CONFIGURE_SERVER": "configuring_server",
									"CONNECT_TO_SERVER": "connecting"
								}
							},
							"configuring_server": {
								"entry": [
									"validate_server_configuration",
									"apply_isolation_settings"
								],
								"on": {
									"CONFIGURATION_VALID": "connecting",
									"CONFIGURATION_INVALID": "server_disconnected"
								}
							},
							"connecting": {
								"entry": [
									"establish_mcp_connection",
									"apply_resource_limits"
								],
								"on": {
									"CONNECTION_SUCCESS": "connected",
									"CONNECTION_FAILED": "connection_retry",
									"AUTHENTICATION_FAILED": "server_disconnected"
								}
							},
							"connection_retry": {
								"entry": [
									"increment_retry_count",
									"apply_backoff_delay"
								],
								"on": {
									"RETRY_CONNECTION": "connecting",
									"MAX_RETRIES_EXCEEDED": "server_disconnected"
								}
							},
							"connected": {
								"entry": [
									"start_health_monitoring",
									"initialize_tool_discovery"
								],
								"states": {
									"idle": {
										"on": {
											"START_TOOL_DISCOVERY": "tool_discovery",
											"EXECUTE_TOOL": "tool_execution"
										}
									},
									"health_monitoring": {
										"entry": [
											"setup_health_checks"
										],
										"on": {
											"HEALTH_CHECK_FAILED": "#connecting",
											"SERVER_OVERLOADED": "throttling"
										}
									}
								},
								"type": "parallel",
								"on": {
									"CONNECTION_LOST": "connecting",
									"SERVER_SHUTDOWN": "server_disconnected"
								}
							},
							"tool_discovery": {
								"entry": [
									"request_available_tools",
									"validate_tool_schemas"
								],
								"on": {
									"DISCOVERY_SUCCESS": "tool_registry_updated",
									"DISCOVERY_FAILED": "connected",
									"SCHEMA_VALIDATION_FAILED": "connected"
								}
							},
							"tool_registry_updated": {
								"entry": [
									"update_tool_registry",
									"cache_tool_metadata"
								],
								"on": {
									"REGISTRY_UPDATED": "connected"
								}
							},
							"tool_execution": {
								"entry": [
									"validate_tool_command",
									"setup_execution_environment"
								],
								"states": {
									"command_validation": {
										"entry": [
											"sanitize_command_input",
											"check_security_constraints"
										],
										"on": {
											"VALIDATION_SUCCESS": "executing",
											"VALIDATION_FAILED": "#execution_failed"
										}
									},
									"executing": {
										"entry": [
											"isolate_execution_environment",
											"monitor_resource_usage"
										],
										"on": {
											"EXECUTION_SUCCESS": "processing_results",
											"EXECUTION_FAILED": "#execution_failed",
											"RESOURCE_LIMIT_EXCEEDED": "#execution_failed",
											"TIMEOUT": "#execution_failed"
										}
									},
									"processing_results": {
										"entry": [
											"process_tool_results",
											"validate_output"
										],
										"on": {
											"RESULTS_PROCESSED": "#execution_success",
											"PROCESSING_FAILED": "#execution_failed"
										}
									}
								},
								"initial": "command_validation",
								"on": {
									"EXECUTION_SUCCESS": "connected",
									"EXECUTION_FAILED": "connected"
								}
							},
							"throttling": {
								"entry": [
									"apply_rate_limiting",
									"queue_pending_requests"
								],
								"on": {
									"THROTTLING_LIFTED": "connected",
									"SERVER_RECOVERED": "connected"
								}
							}
						}
					},
					"business_logic": {
						"server_management": [
							"server_configuration",
							"connection_establishment",
							"health_monitoring",
							"server_isolation"
						],
						"tool_integration": [
							"tool_discovery",
							"schema_validation",
							"execution_coordination",
							"result_processing"
						],
						"security": [
							"command_validation",
							"environment_isolation",
							"resource_limits"
						]
					}
				},
				{
					"id": "voice_mode_system",
					"type": "logic",
					"name": "Voice Mode Processing System",
					"description": "Real-time voice processing with VAD, audio resampling, and multi-provider support",
					"path": "src/backend/base/langflow/services/voice/",
					"workflow_states": [
						"voice_inactive",
						"listening",
						"processing",
						"synthesizing",
						"speaking"
					],
					"statechart": {
						"id": "voiceModeStatechart",
						"initial": "voice_inactive",
						"states": {
							"voice_inactive": {
								"entry": [
									"disable_microphone",
									"cleanup_audio_resources"
								],
								"on": {
									"ENABLE_VOICE": "initializing_voice",
									"VOICE_BUTTON_PRESSED": "initializing_voice"
								}
							},
							"initializing_voice": {
								"entry": [
									"request_microphone_permission",
									"setup_audio_context"
								],
								"on": {
									"PERMISSION_GRANTED": "listening",
									"PERMISSION_DENIED": "voice_inactive",
									"SETUP_FAILED": "voice_inactive"
								}
							},
							"listening": {
								"entry": [
									"start_voice_activity_detection",
									"begin_audio_capture"
								],
								"states": {
									"audio_processing": {
										"states": {
											"vad_detection": {
												"entry": [
													"monitor_voice_activity"
												],
												"on": {
													"VOICE_DETECTED": "recording",
													"SILENCE_DETECTED": "waiting"
												}
											},
											"waiting": {
												"entry": [
													"maintain_listening_state"
												]
											},
											"recording": {
												"entry": [
													"start_audio_recording",
													"apply_noise_reduction"
												],
												"on": {
													"VOICE_END_DETECTED": "#processing",
													"RECORDING_TIMEOUT": "#processing",
													"MANUAL_STOP": "#processing"
												}
											}
										},
										"initial": "vad_detection"
									},
									"websocket_streaming": {
										"entry": [
											"establish_realtime_connection",
											"setup_low_latency_processing"
										],
										"on": {
											"CONNECTION_ESTABLISHED": "streaming_audio",
											"CONNECTION_FAILED": "provider_fallback"
										}
									},
									"streaming_audio": {
										"entry": [
											"stream_audio_chunks",
											"manage_audio_buffer"
										],
										"on": {
											"STREAM_INTERRUPTED": "reconnecting",
											"BUFFER_OVERFLOW": "buffer_management"
										}
									},
									"buffer_management": {
										"entry": [
											"optimize_buffer_size",
											"manage_memory_usage"
										],
										"on": {
											"BUFFER_OPTIMIZED": "streaming_audio"
										}
									}
								},
								"type": "parallel",
								"on": {
									"PROCESSING_TRIGGERED": "processing",
									"DISABLE_VOICE": "voice_inactive",
									"ERROR_OCCURRED": "error_recovery"
								}
							},
							"processing": {
								"entry": [
									"resample_audio",
									"convert_audio_format"
								],
								"states": {
									"provider_selection": {
										"states": {
											"openai_processing": {
												"entry": [
													"send_to_openai_realtime_api"
												],
												"on": {
													"PROCESSING_SUCCESS": "#synthesizing",
													"PROCESSING_FAILED": "#provider_fallback"
												}
											},
											"elevenlabs_processing": {
												"entry": [
													"send_to_elevenlabs"
												],
												"on": {
													"PROCESSING_SUCCESS": "#synthesizing",
													"PROCESSING_FAILED": "#provider_fallback"
												}
											},
											"provider_fallback": {
												"entry": [
													"switch_to_backup_provider"
												],
												"on": {
													"FALLBACK_READY": "openai_processing"
												}
											}
										},
										"initial": "openai_processing"
									},
									"quality_optimization": {
										"entry": [
											"optimize_audio_quality",
											"enhance_speech_clarity"
										]
									}
								},
								"type": "parallel",
								"on": {
									"PROCESSING_COMPLETE": "synthesizing",
									"PROCESSING_FAILED": "error_recovery"
								}
							},
							"synthesizing": {
								"entry": [
									"generate_speech_response",
									"prepare_audio_output"
								],
								"on": {
									"SYNTHESIS_COMPLETE": "speaking",
									"SYNTHESIS_FAILED": "error_recovery"
								}
							},
							"speaking": {
								"entry": [
									"play_audio_response",
									"monitor_playback"
								],
								"on": {
									"PLAYBACK_COMPLETE": "listening",
									"PLAYBACK_INTERRUPTED": "listening",
									"NEW_VOICE_INPUT": "processing"
								}
							},
							"error_recovery": {
								"entry": [
									"log_voice_error",
									"attempt_recovery"
								],
								"on": {
									"RECOVERY_SUCCESS": "listening",
									"RECOVERY_FAILED": "voice_inactive"
								}
							},
							"reconnecting": {
								"entry": [
									"attempt_reconnection",
									"maintain_audio_state"
								],
								"on": {
									"RECONNECTION_SUCCESS": "streaming_audio",
									"RECONNECTION_FAILED": "provider_fallback"
								}
							}
						}
					},
					"business_logic": {
						"audio_processing": [
							"voice_activity_detection",
							"audio_resampling",
							"noise_reduction",
							"format_conversion"
						],
						"provider_integration": [
							"openai_realtime_api",
							"elevenlabs_integration",
							"provider_switching",
							"quality_optimization"
						],
						"real_time_communication": [
							"websocket_streaming",
							"low_latency_processing",
							"buffer_management"
						]
					}
				},
				{
					"id": "file_management_system",
					"type": "logic",
					"name": "File Management System V2",
					"description": "Advanced file handling with storage providers, metadata management, and security controls",
					"path": "src/backend/base/langflow/services/file/",
					"workflow_states": [
						"file_upload",
						"processing",
						"stored",
						"accessed",
						"deleted"
					],
					"statechart": {
						"id": "fileManagementStatechart",
						"initial": "file_upload",
						"states": {
							"file_upload": {
								"entry": [
									"validate_upload_request",
									"check_user_permissions"
								],
								"on": {
									"UPLOAD_VALID": "validating_file",
									"UPLOAD_INVALID": "rejected",
									"PERMISSION_DENIED": "rejected"
								}
							},
							"validating_file": {
								"entry": [
									"validate_file_type",
									"check_file_size",
									"scan_for_malware"
								],
								"states": {
									"type_validation": {
										"entry": [
											"check_allowed_extensions",
											"verify_mime_type"
										],
										"on": {
											"TYPE_VALID": "#size_validation",
											"TYPE_INVALID": "#rejected"
										}
									},
									"size_validation": {
										"entry": [
											"check_file_size_limits",
											"validate_quota"
										],
										"on": {
											"SIZE_VALID": "#security_scan",
											"SIZE_EXCEEDED": "#rejected"
										}
									},
									"security_scan": {
										"entry": [
											"scan_file_content",
											"check_security_policies"
										],
										"on": {
											"SCAN_CLEAN": "#processing",
											"SECURITY_THREAT": "#rejected"
										}
									}
								},
								"initial": "type_validation",
								"on": {
									"VALIDATION_SUCCESS": "processing",
									"VALIDATION_FAILED": "rejected"
								}
							},
							"processing": {
								"entry": [
									"extract_metadata",
									"generate_file_hash"
								],
								"states": {
									"metadata_extraction": {
										"entry": [
											"extract_file_metadata",
											"generate_thumbnails"
										],
										"on": {
											"METADATA_EXTRACTED": "#deduplication"
										}
									},
									"deduplication": {
										"entry": [
											"check_duplicate_files",
											"compare_file_hashes"
										],
										"on": {
											"DUPLICATE_FOUND": "linking_duplicate",
											"UNIQUE_FILE": "#compression"
										}
									},
									"linking_duplicate": {
										"entry": [
											"link_to_existing_file",
											"update_reference_count"
										],
										"on": {
											"LINKING_SUCCESS": "#stored"
										}
									},
									"compression": {
										"entry": [
											"apply_file_compression",
											"optimize_storage"
										],
										"on": {
											"COMPRESSION_COMPLETE": "#storage_selection"
										}
									},
									"storage_selection": {
										"entry": [
											"select_storage_provider",
											"apply_storage_policies"
										],
										"states": {
											"local_storage": {
												"entry": [
													"store_locally",
													"update_local_index"
												]
											},
											"cloud_storage": {
												"entry": [
													"upload_to_cloud",
													"manage_cloud_metadata"
												]
											},
											"cdn_integration": {
												"entry": [
													"configure_cdn_distribution",
													"optimize_delivery"
												]
											}
										},
										"on": {
											"STORAGE_SUCCESS": "#stored",
											"STORAGE_FAILED": "#error"
										}
									}
								},
								"initial": "metadata_extraction",
								"on": {
									"PROCESSING_COMPLETE": "stored",
									"PROCESSING_FAILED": "error"
								}
							},
							"stored": {
								"entry": [
									"update_file_registry",
									"apply_user_isolation",
									"set_access_permissions"
								],
								"on": {
									"FILE_ACCESSED": "accessed",
									"FILE_UPDATED": "processing",
									"FILE_DELETED": "deleting",
									"CACHE_FILE": "caching"
								}
							},
							"caching": {
								"entry": [
									"cache_frequently_accessed_files",
									"optimize_cache_strategy"
								],
								"on": {
									"CACHE_SUCCESS": "stored",
									"CACHE_EVICTION": "stored"
								}
							},
							"accessed": {
								"entry": [
									"log_access",
									"update_access_statistics",
									"check_access_permissions"
								],
								"on": {
									"ACCESS_AUTHORIZED": "serving_file",
									"ACCESS_DENIED": "stored"
								}
							},
							"serving_file": {
								"entry": [
									"prepare_file_response",
									"apply_content_delivery_optimization"
								],
								"on": {
									"FILE_SERVED": "stored",
									"SERVING_ERROR": "error"
								}
							},
							"deleting": {
								"entry": [
									"validate_delete_permissions",
									"check_file_references"
								],
								"on": {
									"DELETE_AUTHORIZED": "cleanup",
									"DELETE_DENIED": "stored",
									"REFERENCES_EXIST": "stored"
								}
							},
							"cleanup": {
								"entry": [
									"remove_file_data",
									"cleanup_metadata",
									"update_storage_quotas"
								],
								"on": {
									"CLEANUP_COMPLETE": "deleted"
								}
							},
							"deleted": {
								"entry": [
									"log_deletion",
									"notify_cleanup_complete"
								],
								"type": "final"
							},
							"rejected": {
								"entry": [
									"log_rejection_reason",
									"notify_user"
								],
								"type": "final"
							},
							"error": {
								"entry": [
									"log_error_details",
									"attempt_recovery"
								],
								"on": {
									"RETRY_PROCESSING": "processing",
									"ABORT_OPERATION": "rejected"
								}
							}
						}
					},
					"business_logic": {
						"storage_management": [
							"provider_abstraction",
							"local_file_system",
							"cloud_storage_integration",
							"metadata_tracking"
						],
						"security_controls": [
							"file_type_validation",
							"size_limits",
							"user_isolation",
							"access_permissions"
						],
						"optimization": [
							"file_compression",
							"deduplication",
							"caching",
							"cdn_integration"
						]
					}
				},
				{
					"id": "store_integration_system",
					"type": "logic",
					"name": "Component Store Integration System",
					"description": "Marketplace functionality with component sharing, discovery, ratings, and installation",
					"path": "src/backend/base/langflow/services/store/",
					"workflow_states": [
						"component_created",
						"uploaded",
						"published",
						"discovered",
						"installed"
					],
					"statechart": {
						"id": "storeIntegrationStatechart",
						"initial": "component_created",
						"states": {
							"component_created": {
								"entry": [
									"validate_component_structure",
									"extract_component_metadata"
								],
								"on": {
									"VALIDATION_SUCCESS": "preparing_upload",
									"VALIDATION_FAILED": "creation_failed"
								}
							},
							"preparing_upload": {
								"entry": [
									"prepare_component_package",
									"generate_component_id"
								],
								"on": {
									"PACKAGE_READY": "uploaded",
									"PACKAGING_FAILED": "creation_failed"
								}
							},
							"uploaded": {
								"entry": [
									"store_component_data",
									"create_version_entry"
								],
								"states": {
									"version_management": {
										"entry": [
											"manage_component_versions",
											"handle_version_conflicts"
										],
										"on": {
											"VERSION_CREATED": "#quality_validation",
											"VERSION_CONFLICT": "version_resolution"
										}
									},
									"version_resolution": {
										"entry": [
											"resolve_version_conflicts",
											"update_version_matrix"
										],
										"on": {
											"CONFLICT_RESOLVED": "version_management"
										}
									},
									"quality_validation": {
										"entry": [
											"run_quality_checks",
											"validate_security",
											"check_compatibility"
										],
										"on": {
											"QUALITY_PASSED": "#indexing",
											"QUALITY_FAILED": "quality_improvement"
										}
									},
									"quality_improvement": {
										"entry": [
											"suggest_improvements",
											"flag_quality_issues"
										],
										"on": {
											"IMPROVEMENTS_APPLIED": "quality_validation",
											"SKIP_QUALITY_CHECK": "#indexing"
										}
									},
									"indexing": {
										"entry": [
											"index_for_search",
											"classify_by_category",
											"extract_keywords"
										],
										"on": {
											"INDEXING_COMPLETE": "#published"
										}
									}
								},
								"initial": "version_management",
								"on": {
									"UPLOAD_COMPLETE": "published",
									"UPLOAD_FAILED": "creation_failed"
								}
							},
							"published": {
								"entry": [
									"make_component_discoverable",
									"notify_community"
								],
								"states": {
									"discovery_active": {
										"states": {
											"search_indexing": {
												"entry": [
													"maintain_search_index",
													"update_search_rankings"
												]
											},
											"category_classification": {
												"entry": [
													"maintain_category_associations",
													"update_taxonomies"
												]
											},
											"recommendation_engine": {
												"entry": [
													"generate_recommendations",
													"update_similarity_scores"
												]
											}
										},
										"type": "parallel"
									},
									"community_engagement": {
										"states": {
											"rating_system": {
												"entry": [
													"collect_user_ratings",
													"aggregate_scores"
												],
												"on": {
													"NEW_RATING": "rating_system",
													"RATING_UPDATED": "rating_aggregation"
												}
											},
											"rating_aggregation": {
												"entry": [
													"recalculate_ratings",
													"update_component_score"
												],
												"on": {
													"AGGREGATION_COMPLETE": "rating_system"
												}
											},
											"reviews_management": {
												"entry": [
													"moderate_reviews",
													"highlight_helpful_reviews"
												],
												"on": {
													"NEW_REVIEW": "review_processing",
													"REVIEW_FLAGGED": "review_moderation"
												}
											},
											"review_processing": {
												"entry": [
													"process_new_review",
													"update_review_metrics"
												],
												"on": {
													"REVIEW_APPROVED": "reviews_management",
													"REVIEW_REJECTED": "reviews_management"
												}
											},
											"review_moderation": {
												"entry": [
													"review_moderation_queue",
													"apply_community_guidelines"
												],
												"on": {
													"MODERATION_COMPLETE": "reviews_management"
												}
											},
											"analytics_tracking": {
												"entry": [
													"track_downloads",
													"monitor_usage_patterns",
													"analyze_engagement"
												]
											}
										},
										"type": "parallel"
									}
								},
								"type": "parallel",
								"on": {
									"COMPONENT_REQUESTED": "discovered",
									"UPDATE_COMPONENT": "uploaded",
									"UNPUBLISH_COMPONENT": "unpublished"
								}
							},
							"discovered": {
								"entry": [
									"log_discovery_event",
									"update_discovery_metrics"
								],
								"on": {
									"INSTALL_COMPONENT": "installed",
									"VIEW_DETAILS": "published"
								}
							},
							"installed": {
								"entry": [
									"track_installation",
									"increment_download_counter",
									"log_usage_analytics"
								],
								"on": {
									"INSTALLATION_SUCCESS": "active_usage",
									"INSTALLATION_FAILED": "published"
								}
							},
							"active_usage": {
								"entry": [
									"monitor_component_usage",
									"collect_performance_metrics"
								],
								"on": {
									"USAGE_FEEDBACK": "published",
									"COMPONENT_UPDATED": "published"
								}
							},
							"unpublished": {
								"entry": [
									"remove_from_discovery",
									"notify_users"
								],
								"on": {
									"REPUBLISH": "published"
								},
								"type": "final"
							},
							"creation_failed": {
								"entry": [
									"log_creation_failure",
									"provide_error_feedback"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"marketplace_operations": [
							"component_upload",
							"metadata_extraction",
							"version_management",
							"quality_validation"
						],
						"discovery_mechanisms": [
							"search_indexing",
							"category_classification",
							"rating_aggregation",
							"recommendation_engine"
						],
						"community_features": [
							"user_ratings",
							"reviews",
							"download_tracking",
							"usage_analytics"
						]
					}
				},
				{
					"id": "telemetry_analytics_system",
					"type": "logic",
					"name": "Telemetry and Analytics System",
					"description": "Usage tracking, performance monitoring, and analytics collection with privacy controls",
					"path": "src/backend/base/langflow/services/telemetry/",
					"workflow_states": [
						"event_generated",
						"collected",
						"processed",
						"analyzed",
						"reported"
					],
					"statechart": {
						"id": "telemetryAnalyticsStatechart",
						"initial": "event_generated",
						"states": {
							"event_generated": {
								"entry": [
									"capture_event_data",
									"timestamp_event"
								],
								"on": {
									"START_COLLECTION": "collected",
									"PRIVACY_CHECK_REQUIRED": "privacy_validation"
								}
							},
							"privacy_validation": {
								"entry": [
									"check_user_consent",
									"apply_privacy_controls"
								],
								"states": {
									"opt_in_check": {
										"entry": [
											"verify_opt_in_status"
										],
										"on": {
											"USER_OPTED_IN": "#data_anonymization",
											"USER_OPTED_OUT": "#discarded"
										}
									},
									"data_anonymization": {
										"entry": [
											"anonymize_personal_data",
											"remove_identifiers"
										],
										"on": {
											"ANONYMIZATION_COMPLETE": "#gdpr_compliance"
										}
									},
									"gdpr_compliance": {
										"entry": [
											"apply_gdpr_rules",
											"set_retention_period"
										],
										"on": {
											"COMPLIANCE_VERIFIED": "#collected"
										}
									}
								},
								"initial": "opt_in_check",
								"on": {
									"PRIVACY_APPROVED": "collected",
									"PRIVACY_REJECTED": "discarded"
								}
							},
							"collected": {
								"entry": [
									"store_telemetry_data",
									"categorize_metrics"
								],
								"states": {
									"usage_metrics": {
										"entry": [
											"collect_usage_data",
											"track_feature_adoption"
										]
									},
									"performance_metrics": {
										"entry": [
											"monitor_system_performance",
											"track_response_times"
										]
									},
									"error_tracking": {
										"entry": [
											"log_error_occurrences",
											"categorize_errors"
										]
									},
									"user_behavior": {
										"entry": [
											"analyze_user_interactions",
											"track_workflow_patterns"
										]
									}
								},
								"type": "parallel",
								"on": {
									"PROCESSING_READY": "processed",
									"RETENTION_EXPIRED": "discarded"
								}
							},
							"processed": {
								"entry": [
									"aggregate_metrics",
									"apply_statistical_analysis"
								],
								"on": {
									"PROCESSING_COMPLETE": "analyzed",
									"PROCESSING_FAILED": "collected"
								}
							},
							"analyzed": {
								"entry": [
									"generate_insights",
									"create_reports"
								],
								"states": {
									"trend_analysis": {
										"entry": [
											"identify_trends",
											"calculate_growth_metrics"
										]
									},
									"performance_insights": {
										"entry": [
											"analyze_performance_bottlenecks",
											"suggest_optimizations"
										]
									},
									"usage_patterns": {
										"entry": [
											"identify_usage_patterns",
											"segment_user_behavior"
										]
									},
									"predictive_analytics": {
										"entry": [
											"build_prediction_models",
											"forecast_trends"
										]
									}
								},
								"type": "parallel",
								"on": {
									"ANALYSIS_COMPLETE": "reported"
								}
							},
							"reported": {
								"entry": [
									"generate_reports",
									"create_dashboards",
									"notify_stakeholders"
								],
								"on": {
									"NEW_DATA_AVAILABLE": "collected"
								},
								"type": "final"
							},
							"discarded": {
								"entry": [
									"safely_discard_data",
									"log_discard_reason"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"data_collection": [
							"usage_metrics",
							"performance_metrics",
							"error_tracking",
							"user_behavior"
						],
						"privacy_controls": [
							"opt_in_opt_out",
							"data_anonymization",
							"retention_policies",
							"gdpr_compliance"
						],
						"analytics": [
							"trend_analysis",
							"performance_insights",
							"usage_patterns",
							"predictive_analytics"
						]
					}
				},
				{
					"id": "session_management_system",
					"type": "logic",
					"name": "Session Management System",
					"description": "Multi-session support with state persistence, cleanup, and real-time synchronization",
					"path": "src/backend/base/langflow/services/session/",
					"workflow_states": [
						"session_created",
						"active",
						"inactive",
						"expired",
						"cleaned_up"
					],
					"statechart": {
						"id": "sessionManagementStatechart",
						"initial": "session_created",
						"states": {
							"session_created": {
								"entry": [
									"generate_session_id",
									"initialize_session_state",
									"set_creation_timestamp"
								],
								"on": {
									"SESSION_READY": "active",
									"CREATION_FAILED": "creation_error"
								}
							},
							"active": {
								"entry": [
									"start_activity_tracking",
									"setup_state_management"
								],
								"states": {
									"state_management": {
										"states": {
											"serializing": {
												"entry": [
													"serialize_session_state"
												],
												"on": {
													"SERIALIZATION_COMPLETE": "storing"
												}
											},
											"storing": {
												"entry": [
													"store_in_database",
													"update_memory_cache"
												],
												"on": {
													"STORAGE_SUCCESS": "synchronized",
													"STORAGE_FAILED": "serializing"
												}
											},
											"synchronized": {
												"entry": [
													"confirm_synchronization"
												]
											}
										},
										"initial": "synchronized"
									},
									"multi_session_handling": {
										"states": {
											"isolation_active": {
												"entry": [
													"enforce_session_isolation",
													"prevent_cross_contamination"
												]
											},
											"cross_session_coordination": {
												"entry": [
													"manage_shared_data",
													"coordinate_updates"
												],
												"on": {
													"SWITCH_SESSION": "session_switching",
													"CONFLICT_DETECTED": "conflict_resolution"
												}
											},
											"session_switching": {
												"entry": [
													"pause_current_session",
													"activate_target_session"
												],
												"on": {
													"SWITCH_COMPLETE": "cross_session_coordination"
												}
											},
											"conflict_resolution": {
												"entry": [
													"identify_conflicts",
													"apply_resolution_strategy"
												],
												"on": {
													"CONFLICTS_RESOLVED": "cross_session_coordination"
												}
											}
										},
										"initial": "isolation_active",
										"type": "parallel"
									}
								},
								"type": "parallel",
								"on": {
									"INACTIVITY_TIMEOUT": "inactive",
									"EXPLICIT_PAUSE": "inactive",
									"SESSION_ERROR": "error_recovery"
								}
							},
							"inactive": {
								"entry": [
									"pause_activity_tracking",
									"mark_as_inactive"
								],
								"on": {
									"ACTIVITY_RESUMED": "active",
									"SESSION_TIMEOUT": "expired",
									"MANUAL_CLEANUP": "cleaned_up"
								}
							},
							"expired": {
								"entry": [
									"mark_session_expired",
									"schedule_cleanup"
								],
								"on": {
									"START_CLEANUP": "cleaned_up",
									"EXTEND_SESSION": "active"
								}
							},
							"error_recovery": {
								"entry": [
									"log_session_error",
									"attempt_recovery"
								],
								"on": {
									"RECOVERY_SUCCESS": "active",
									"RECOVERY_FAILED": "cleaned_up"
								}
							},
							"cleaned_up": {
								"entry": [
									"cleanup_session_data",
									"free_memory",
									"remove_from_database"
								],
								"on": {
									"CLEANUP_COMPLETE": "terminated"
								}
							},
							"terminated": {
								"entry": [
									"log_session_termination"
								],
								"type": "final"
							},
							"creation_error": {
								"entry": [
									"log_creation_error"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"session_lifecycle": [
							"session_creation",
							"state_management",
							"activity_tracking",
							"automatic_cleanup"
						],
						"multi_session_support": [
							"session_isolation",
							"cross_session_data",
							"session_switching",
							"conflict_resolution"
						],
						"persistence": [
							"state_serialization",
							"database_storage",
							"memory_management"
						]
					}
				},
				{
					"id": "api_versioning_system",
					"type": "logic",
					"name": "API Versioning and Compatibility System",
					"description": "API version management with backward compatibility, deprecation handling, and migration support",
					"path": "src/backend/base/langflow/api/",
					"workflow_states": [
						"version_detected",
						"compatibility_checked",
						"request_routed",
						"response_formatted"
					],
					"statechart": {
						"id": "apiVersioningStatechart",
						"initial": "version_detected",
						"states": {
							"version_detected": {
								"entry": [
									"detect_api_version",
									"parse_version_headers"
								],
								"on": {
									"VERSION_IDENTIFIED": "compatibility_checked",
									"VERSION_UNKNOWN": "default_version"
								}
							},
							"default_version": {
								"entry": [
									"apply_default_version",
									"log_version_default"
								],
								"on": {
									"DEFAULT_APPLIED": "compatibility_checked"
								}
							},
							"compatibility_checked": {
								"entry": [
									"check_compatibility_matrix",
									"validate_feature_availability"
								],
								"states": {
									"feature_flagging": {
										"entry": [
											"check_feature_flags",
											"apply_version_specific_features"
										],
										"on": {
											"FEATURES_ENABLED": "#request_processing",
											"FEATURES_DISABLED": "feature_unavailable"
										}
									},
									"deprecation_check": {
										"entry": [
											"check_deprecated_endpoints",
											"generate_deprecation_warnings"
										],
										"on": {
											"DEPRECATED_ENDPOINT": "deprecation_warning",
											"ENDPOINT_CURRENT": "#request_processing"
										}
									},
									"legacy_support": {
										"entry": [
											"check_legacy_compatibility",
											"apply_legacy_transformations"
										],
										"on": {
											"LEGACY_SUPPORTED": "#request_processing",
											"LEGACY_UNSUPPORTED": "migration_required"
										}
									}
								},
								"type": "parallel",
								"on": {
									"COMPATIBILITY_CONFIRMED": "request_routed",
									"INCOMPATIBLE_VERSION": "version_mismatch"
								}
							},
							"feature_unavailable": {
								"entry": [
									"provide_feature_unavailable_response"
								],
								"on": {
									"SUGGEST_UPGRADE": "migration_guidance"
								}
							},
							"deprecation_warning": {
								"entry": [
									"add_deprecation_headers",
									"log_deprecated_usage"
								],
								"on": {
									"WARNING_ADDED": "request_routed"
								}
							},
							"migration_required": {
								"entry": [
									"provide_migration_guidance",
									"suggest_migration_path"
								],
								"on": {
									"AUTO_MIGRATE": "automated_migration",
									"MANUAL_MIGRATION": "migration_guidance"
								}
							},
							"automated_migration": {
								"entry": [
									"perform_data_transformation",
									"apply_schema_evolution"
								],
								"on": {
									"MIGRATION_SUCCESS": "request_routed",
									"MIGRATION_FAILED": "migration_guidance"
								}
							},
							"migration_guidance": {
								"entry": [
									"provide_client_guidance",
									"document_migration_steps"
								],
								"on": {
									"GUIDANCE_PROVIDED": "graceful_degradation"
								}
							},
							"request_routed": {
								"entry": [
									"route_to_version_handler",
									"apply_version_specific_logic"
								],
								"on": {
									"ROUTING_SUCCESS": "response_formatted",
									"ROUTING_FAILED": "fallback_mechanism"
								}
							},
							"fallback_mechanism": {
								"entry": [
									"apply_fallback_logic",
									"use_compatible_version"
								],
								"on": {
									"FALLBACK_SUCCESS": "response_formatted",
									"FALLBACK_FAILED": "graceful_degradation"
								}
							},
							"graceful_degradation": {
								"entry": [
									"provide_degraded_functionality",
									"inform_limited_features"
								],
								"on": {
									"DEGRADED_RESPONSE_READY": "response_formatted"
								}
							},
							"response_formatted": {
								"entry": [
									"format_version_specific_response",
									"add_version_headers"
								],
								"type": "final"
							},
							"version_mismatch": {
								"entry": [
									"provide_version_mismatch_error",
									"suggest_supported_versions"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"version_management": [
							"version_detection",
							"compatibility_matrix",
							"feature_flagging",
							"deprecation_warnings"
						],
						"migration_support": [
							"data_transformation",
							"schema_evolution",
							"client_guidance",
							"automated_migration"
						],
						"backward_compatibility": [
							"legacy_support",
							"fallback_mechanisms",
							"graceful_degradation"
						]
					}
				},
				{
					"id": "dependency_injection_system",
					"type": "logic",
					"name": "Service Dependency Injection System",
					"description": "Service factory pattern with dependency resolution, lifecycle management, and health monitoring",
					"path": "src/backend/base/langflow/services/manager.py",
					"workflow_states": [
						"service_registered",
						"dependencies_resolved",
						"service_initialized",
						"service_running",
						"service_stopped"
					],
					"statechart": {
						"id": "dependencyInjectionStatechart",
						"initial": "service_registered",
						"states": {
							"service_registered": {
								"entry": [
									"register_service_definition",
									"validate_service_contract"
								],
								"on": {
									"REGISTRATION_SUCCESS": "dependencies_resolved",
									"REGISTRATION_FAILED": "registration_error"
								}
							},
							"dependencies_resolved": {
								"entry": [
									"analyze_dependencies",
									"build_dependency_graph"
								],
								"states": {
									"circular_dependency_check": {
										"entry": [
											"detect_circular_dependencies"
										],
										"on": {
											"NO_CYCLES": "#initialization_order",
											"CYCLES_DETECTED": "circular_dependency_resolution"
										}
									},
									"circular_dependency_resolution": {
										"entry": [
											"resolve_circular_dependencies",
											"apply_lazy_initialization"
										],
										"on": {
											"CYCLES_RESOLVED": "initialization_order",
											"CYCLES_UNRESOLVABLE": "#dependency_error"
										}
									},
									"initialization_order": {
										"entry": [
											"determine_initialization_order",
											"create_initialization_plan"
										],
										"on": {
											"ORDER_DETERMINED": "#service_initialized"
										}
									}
								},
								"initial": "circular_dependency_check",
								"on": {
									"RESOLUTION_SUCCESS": "service_initialized",
									"RESOLUTION_FAILED": "dependency_error"
								}
							},
							"service_initialized": {
								"entry": [
									"initialize_services",
									"setup_service_isolation"
								],
								"states": {
									"lazy_initialization": {
										"entry": [
											"setup_lazy_loading",
											"create_service_proxies"
										],
										"on": {
											"SERVICE_REQUESTED": "service_instantiation",
											"PRELOAD_REQUIRED": "service_instantiation"
										}
									},
									"service_instantiation": {
										"entry": [
											"instantiate_service",
											"inject_dependencies"
										],
										"on": {
											"INSTANTIATION_SUCCESS": "service_running",
											"INSTANTIATION_FAILED": "initialization_error"
										}
									}
								},
								"initial": "lazy_initialization",
								"on": {
									"INITIALIZATION_SUCCESS": "service_running",
									"INITIALIZATION_FAILED": "initialization_error"
								}
							},
							"service_running": {
								"entry": [
									"start_health_monitoring",
									"begin_performance_tracking"
								],
								"states": {
									"health_monitoring": {
										"entry": [
											"setup_health_checks",
											"monitor_service_health"
										],
										"on": {
											"HEALTH_CHECK_PASSED": "healthy",
											"HEALTH_CHECK_FAILED": "unhealthy"
										}
									},
									"performance_monitoring": {
										"entry": [
											"track_performance_metrics",
											"monitor_resource_usage"
										],
										"on": {
											"PERFORMANCE_DEGRADED": "performance_alert",
											"RESOURCE_EXHAUSTED": "resource_alert"
										}
									},
									"error_tracking": {
										"entry": [
											"monitor_service_errors",
											"track_error_patterns"
										],
										"on": {
											"ERROR_THRESHOLD_EXCEEDED": "error_alert",
											"CRITICAL_ERROR": "service_failure"
										}
									},
									"healthy": {
										"entry": [
											"confirm_service_health"
										]
									},
									"unhealthy": {
										"entry": [
											"mark_service_unhealthy",
											"attempt_recovery"
										],
										"on": {
											"RECOVERY_SUCCESS": "healthy",
											"RECOVERY_FAILED": "service_failure"
										}
									},
									"performance_alert": {
										"entry": [
											"alert_performance_issues",
											"suggest_optimizations"
										]
									},
									"resource_alert": {
										"entry": [
											"alert_resource_constraints",
											"initiate_resource_cleanup"
										]
									},
									"error_alert": {
										"entry": [
											"escalate_error_alerts",
											"provide_error_diagnostics"
										]
									},
									"service_failure": {
										"entry": [
											"mark_service_failed",
											"initiate_failure_recovery"
										],
										"on": {
											"RESTART_SERVICE": "service_initialized",
											"STOP_SERVICE": "service_stopped"
										}
									}
								},
								"type": "parallel",
								"on": {
									"STOP_REQUEST": "stopping",
									"SERVICE_ERROR": "error_handling"
								}
							},
							"stopping": {
								"entry": [
									"begin_graceful_shutdown",
									"cleanup_resources"
								],
								"on": {
									"SHUTDOWN_COMPLETE": "service_stopped",
									"FORCED_SHUTDOWN": "service_stopped"
								}
							},
							"service_stopped": {
								"entry": [
									"complete_resource_cleanup",
									"unregister_service"
								],
								"type": "final"
							},
							"error_handling": {
								"entry": [
									"handle_service_error",
									"attempt_error_recovery"
								],
								"on": {
									"ERROR_RECOVERED": "service_running",
									"ERROR_UNRECOVERABLE": "service_stopped"
								}
							},
							"registration_error": {
								"entry": [
									"log_registration_error"
								],
								"type": "final"
							},
							"dependency_error": {
								"entry": [
									"log_dependency_error",
									"provide_dependency_guidance"
								],
								"type": "final"
							},
							"initialization_error": {
								"entry": [
									"log_initialization_error",
									"cleanup_partial_initialization"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"service_lifecycle": [
							"service_registration",
							"dependency_resolution",
							"initialization_order",
							"health_monitoring"
						],
						"dependency_management": [
							"circular_dependency_detection",
							"lazy_initialization",
							"service_isolation",
							"resource_cleanup"
						],
						"monitoring": [
							"health_checks",
							"performance_monitoring",
							"error_tracking",
							"service_metrics"
						]
					}
				},
				{
					"id": "configuration_management",
					"type": "logic",
					"name": "Configuration Management System",
					"description": "Environment-based configuration with hot-reloading, validation, and security controls",
					"path": "src/backend/base/langflow/services/settings/",
					"workflow_states": [
						"config_loaded",
						"validated",
						"applied",
						"monitoring",
						"hot_reloaded"
					],
					"statechart": {
						"id": "configurationManagementStatechart",
						"initial": "config_loaded",
						"states": {
							"config_loaded": {
								"entry": [
									"load_configuration_sources",
									"merge_config_layers"
								],
								"states": {
									"source_loading": {
										"states": {
											"environment_variables": {
												"entry": [
													"read_env_vars",
													"validate_env_format"
												]
											},
											"configuration_files": {
												"entry": [
													"read_config_files",
													"parse_config_formats"
												]
											},
											"database_settings": {
												"entry": [
													"fetch_db_settings",
													"decrypt_secrets"
												]
											},
											"runtime_overrides": {
												"entry": [
													"apply_runtime_overrides",
													"validate_permissions"
												]
											}
										},
										"type": "parallel"
									},
									"file_watching": {
										"entry": [
											"setup_file_watchers",
											"monitor_config_changes"
										],
										"on": {
											"CONFIG_FILE_CHANGED": "change_detected",
											"WATCHER_ERROR": "watcher_recovery"
										}
									},
									"watcher_recovery": {
										"entry": [
											"restart_file_watchers"
										],
										"on": {
											"RECOVERY_SUCCESS": "file_watching"
										}
									}
								},
								"type": "parallel",
								"on": {
									"LOADING_COMPLETE": "validated",
									"LOADING_FAILED": "config_error"
								}
							},
							"change_detected": {
								"entry": [
									"detect_configuration_changes",
									"identify_changed_sections"
								],
								"on": {
									"CHANGES_IDENTIFIED": "validated",
									"NO_CHANGES": "monitoring"
								}
							},
							"validated": {
								"entry": [
									"validate_configuration_schema",
									"check_security_constraints"
								],
								"states": {
									"schema_validation": {
										"entry": [
											"apply_config_schema",
											"validate_data_types"
										],
										"on": {
											"SCHEMA_VALID": "#security_validation",
											"SCHEMA_INVALID": "#validation_error"
										}
									},
									"security_validation": {
										"entry": [
											"validate_secret_access",
											"check_access_controls"
										],
										"states": {
											"secret_management": {
												"entry": [
													"decrypt_secrets",
													"validate_secret_access"
												]
											},
											"access_control_check": {
												"entry": [
													"verify_config_permissions",
													"audit_access_attempts"
												]
											}
										},
										"type": "parallel",
										"on": {
											"SECURITY_VALIDATED": "#applied",
											"SECURITY_FAILED": "#validation_error"
										}
									}
								},
								"initial": "schema_validation",
								"on": {
									"VALIDATION_SUCCESS": "applied",
									"VALIDATION_FAILED": "validation_error"
								}
							},
							"applied": {
								"entry": [
									"apply_configuration",
									"log_config_changes"
								],
								"states": {
									"gradual_rollout": {
										"entry": [
											"implement_gradual_rollout",
											"monitor_rollout_health"
										],
										"on": {
											"ROLLOUT_SUCCESS": "#monitoring",
											"ROLLOUT_ISSUES": "rollback_preparation"
										}
									},
									"rollback_preparation": {
										"entry": [
											"prepare_rollback_plan",
											"backup_current_config"
										],
										"on": {
											"INITIATE_ROLLBACK": "rollback_execution",
											"CONTINUE_ROLLOUT": "gradual_rollout"
										}
									},
									"rollback_execution": {
										"entry": [
											"execute_rollback",
											"restore_previous_config"
										],
										"on": {
											"ROLLBACK_SUCCESS": "#monitoring",
											"ROLLBACK_FAILED": "error_state"
										}
									}
								},
								"initial": "gradual_rollout",
								"on": {
									"APPLICATION_SUCCESS": "monitoring",
									"APPLICATION_FAILED": "config_error"
								}
							},
							"monitoring": {
								"entry": [
									"monitor_config_health",
									"track_config_usage"
								],
								"on": {
									"CONFIG_CHANGE_DETECTED": "change_detected",
									"HOT_RELOAD_REQUEST": "hot_reloaded",
									"MONITORING_ALERT": "alert_handling"
								}
							},
							"hot_reloaded": {
								"entry": [
									"perform_hot_reload",
									"maintain_system_state"
								],
								"on": {
									"HOT_RELOAD_SUCCESS": "monitoring",
									"HOT_RELOAD_FAILED": "rollback_preparation"
								}
							},
							"alert_handling": {
								"entry": [
									"handle_config_alerts",
									"escalate_if_needed"
								],
								"on": {
									"ALERT_RESOLVED": "monitoring",
									"CRITICAL_ALERT": "emergency_rollback"
								}
							},
							"emergency_rollback": {
								"entry": [
									"execute_emergency_rollback",
									"notify_administrators"
								],
								"on": {
									"EMERGENCY_RESOLVED": "monitoring"
								}
							},
							"validation_error": {
								"entry": [
									"log_validation_errors",
									"provide_error_feedback"
								],
								"on": {
									"RETRY_VALIDATION": "validated",
									"REVERT_CHANGES": "monitoring"
								}
							},
							"config_error": {
								"entry": [
									"log_config_error",
									"attempt_recovery"
								],
								"on": {
									"RECOVERY_ATTEMPT": "config_loaded",
									"USE_DEFAULTS": "monitoring"
								}
							},
							"error_state": {
								"entry": [
									"enter_safe_mode",
									"alert_administrators"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"config_sources": [
							"environment_variables",
							"configuration_files",
							"database_settings",
							"runtime_overrides"
						],
						"validation_security": [
							"schema_validation",
							"secret_management",
							"access_controls",
							"audit_logging"
						],
						"hot_reloading": [
							"file_watching",
							"change_detection",
							"gradual_rollout",
							"rollback_capability"
						]
					}
				},
				{
					"id": "logging_monitoring_system",
					"type": "logic",
					"name": "Comprehensive Logging and Monitoring System",
					"description": "Structured logging with distributed tracing, metrics collection, and alerting capabilities",
					"path": "src/backend/base/langflow/logging/",
					"workflow_states": [
						"event_logged",
						"processed",
						"aggregated",
						"alerted",
						"archived"
					],
					"statechart": {
						"id": "loggingMonitoringStatechart",
						"initial": "event_logged",
						"states": {
							"event_logged": {
								"entry": [
									"capture_log_event",
									"add_correlation_id",
									"structure_log_data"
								],
								"on": {
									"LOG_STRUCTURED": "processed",
									"STRUCTURING_FAILED": "raw_log_fallback"
								}
							},
							"raw_log_fallback": {
								"entry": [
									"log_as_raw_text",
									"flag_structuring_failure"
								],
								"on": {
									"RAW_LOG_COMPLETE": "processed"
								}
							},
							"processed": {
								"entry": [
									"enrich_log_context",
									"apply_log_filters"
								],
								"states": {
									"distributed_tracing": {
										"entry": [
											"add_trace_context",
											"link_to_distributed_trace"
										],
										"on": {
											"TRACE_LINKED": "#aggregation"
										}
									},
									"log_enrichment": {
										"entry": [
											"add_metadata",
											"enrich_with_context"
										],
										"on": {
											"ENRICHMENT_COMPLETE": "#aggregation"
										}
									}
								},
								"type": "parallel",
								"on": {
									"PROCESSING_COMPLETE": "aggregated",
									"PROCESSING_FAILED": "processing_error"
								}
							},
							"aggregated": {
								"entry": [
									"aggregate_similar_logs",
									"group_by_correlation_id"
								],
								"states": {
									"metrics_collection": {
										"states": {
											"application_metrics": {
												"entry": [
													"collect_app_metrics",
													"track_performance_indicators"
												]
											},
											"infrastructure_metrics": {
												"entry": [
													"collect_infra_metrics",
													"monitor_system_resources"
												]
											},
											"business_metrics": {
												"entry": [
													"collect_business_metrics",
													"track_kpis"
												]
											},
											"custom_metrics": {
												"entry": [
													"collect_custom_metrics",
													"process_user_defined_metrics"
												]
											}
										},
										"type": "parallel"
									},
									"threshold_monitoring": {
										"entry": [
											"check_threshold_violations",
											"evaluate_alert_conditions"
										],
										"on": {
											"THRESHOLD_EXCEEDED": "alert_triggered",
											"THRESHOLD_NORMAL": "monitoring_active"
										}
									},
									"anomaly_detection": {
										"entry": [
											"analyze_patterns",
											"detect_anomalies"
										],
										"on": {
											"ANOMALY_DETECTED": "alert_triggered",
											"PATTERNS_NORMAL": "monitoring_active"
										}
									},
									"monitoring_active": {
										"entry": [
											"continue_monitoring",
											"update_baselines"
										]
									}
								},
								"type": "parallel",
								"on": {
									"AGGREGATION_COMPLETE": "alerted",
									"ALERT_CONDITIONS_MET": "alert_triggered"
								}
							},
							"alert_triggered": {
								"entry": [
									"generate_alert",
									"determine_severity"
								],
								"states": {
									"escalation_management": {
										"entry": [
											"apply_escalation_policies",
											"route_to_appropriate_teams"
										],
										"states": {
											"level_1_support": {
												"entry": [
													"notify_level_1"
												],
												"on": {
													"ESCALATION_TIMEOUT": "level_2_support",
													"ACKNOWLEDGED": "incident_management"
												}
											},
											"level_2_support": {
												"entry": [
													"notify_level_2"
												],
												"on": {
													"ESCALATION_TIMEOUT": "level_3_support",
													"ACKNOWLEDGED": "incident_management"
												}
											},
											"level_3_support": {
												"entry": [
													"notify_level_3",
													"create_critical_incident"
												],
												"on": {
													"ACKNOWLEDGED": "incident_management"
												}
											}
										},
										"initial": "level_1_support"
									},
									"incident_management": {
										"entry": [
											"create_incident_ticket",
											"assign_incident_team"
										],
										"states": {
											"investigation": {
												"entry": [
													"gather_diagnostic_data",
													"analyze_root_cause"
												]
											},
											"resolution": {
												"entry": [
													"implement_resolution",
													"monitor_resolution_effectiveness"
												]
											},
											"post_mortem": {
												"entry": [
													"conduct_post_mortem",
													"document_lessons_learned"
												]
											}
										},
										"initial": "investigation",
										"on": {
											"INCIDENT_RESOLVED": "alert_resolved"
										}
									}
								},
								"type": "parallel",
								"on": {
									"ALERT_ACKNOWLEDGED": "incident_management",
									"FALSE_POSITIVE": "alert_resolved"
								}
							},
							"alert_resolved": {
								"entry": [
									"mark_alert_resolved",
									"update_resolution_metrics"
								],
								"on": {
									"RESOLUTION_CONFIRMED": "archived"
								}
							},
							"alerted": {
								"entry": [
									"complete_alerting_cycle",
									"update_monitoring_status"
								],
								"on": {
									"ARCHIVAL_READY": "archived"
								}
							},
							"archived": {
								"entry": [
									"archive_logs_and_metrics",
									"compress_historical_data"
								],
								"type": "final"
							},
							"processing_error": {
								"entry": [
									"log_processing_error",
									"attempt_recovery"
								],
								"on": {
									"RECOVERY_SUCCESS": "processed",
									"RECOVERY_FAILED": "archived"
								}
							}
						}
					},
					"business_logic": {
						"logging_architecture": [
							"structured_logging",
							"log_aggregation",
							"distributed_tracing",
							"correlation_ids"
						],
						"monitoring_metrics": [
							"application_metrics",
							"infrastructure_metrics",
							"business_metrics",
							"custom_metrics"
						],
						"alerting": [
							"threshold_monitoring",
							"anomaly_detection",
							"escalation_policies",
							"incident_management"
						]
					}
				},
				{
					"id": "testing_quality_assurance",
					"type": "logic",
					"name": "Testing and Quality Assurance System",
					"description": "Comprehensive testing framework with unit, integration, E2E, and performance testing capabilities",
					"path": "tests/",
					"workflow_states": [
						"test_planned",
						"test_executed",
						"results_analyzed",
						"quality_validated",
						"reported"
					],
					"statechart": {
						"id": "testingQualityAssuranceStatechart",
						"initial": "test_planned",
						"states": {
							"test_planned": {
								"entry": [
									"create_test_plan",
									"identify_test_requirements"
								],
								"on": {
									"PLANNING_COMPLETE": "test_executed",
									"PLANNING_FAILED": "planning_error"
								}
							},
							"test_executed": {
								"entry": [
									"setup_test_environment",
									"initialize_test_data"
								],
								"states": {
									"unit_testing": {
										"entry": [
											"run_unit_tests",
											"measure_code_coverage"
										],
										"on": {
											"UNIT_TESTS_PASSED": "unit_test_success",
											"UNIT_TESTS_FAILED": "unit_test_failure"
										}
									},
									"integration_testing": {
										"entry": [
											"run_integration_tests",
											"test_component_interactions"
										],
										"on": {
											"INTEGRATION_TESTS_PASSED": "integration_test_success",
											"INTEGRATION_TESTS_FAILED": "integration_test_failure"
										}
									},
									"end_to_end_testing": {
										"entry": [
											"run_e2e_tests",
											"test_complete_workflows"
										],
										"on": {
											"E2E_TESTS_PASSED": "e2e_test_success",
											"E2E_TESTS_FAILED": "e2e_test_failure"
										}
									},
									"performance_testing": {
										"entry": [
											"run_performance_tests",
											"measure_benchmarks"
										],
										"on": {
											"PERFORMANCE_TESTS_PASSED": "performance_test_success",
											"PERFORMANCE_TESTS_FAILED": "performance_test_failure"
										}
									},
									"security_testing": {
										"entry": [
											"run_security_tests",
											"scan_vulnerabilities"
										],
										"on": {
											"SECURITY_TESTS_PASSED": "security_test_success",
											"SECURITY_TESTS_FAILED": "security_test_failure"
										}
									},
									"unit_test_success": {
										"entry": [
											"log_unit_test_success",
											"update_coverage_metrics"
										]
									},
									"unit_test_failure": {
										"entry": [
											"log_unit_test_failures",
											"generate_failure_reports"
										]
									},
									"integration_test_success": {
										"entry": [
											"log_integration_success"
										]
									},
									"integration_test_failure": {
										"entry": [
											"log_integration_failures",
											"diagnose_integration_issues"
										]
									},
									"e2e_test_success": {
										"entry": [
											"log_e2e_success"
										]
									},
									"e2e_test_failure": {
										"entry": [
											"log_e2e_failures",
											"capture_failure_screenshots"
										]
									},
									"performance_test_success": {
										"entry": [
											"log_performance_success",
											"update_benchmarks"
										]
									},
									"performance_test_failure": {
										"entry": [
											"log_performance_failures",
											"identify_bottlenecks"
										]
									},
									"security_test_success": {
										"entry": [
											"log_security_success"
										]
									},
									"security_test_failure": {
										"entry": [
											"log_security_failures",
											"escalate_vulnerabilities"
										]
									}
								},
								"type": "parallel",
								"on": {
									"ALL_TESTS_COMPLETE": "results_analyzed",
									"CRITICAL_FAILURE": "test_failure_handling"
								}
							},
							"results_analyzed": {
								"entry": [
									"analyze_test_results",
									"calculate_quality_metrics"
								],
								"states": {
									"coverage_analysis": {
										"entry": [
											"analyze_code_coverage",
											"identify_uncovered_areas"
										],
										"on": {
											"COVERAGE_ADEQUATE": "#reliability_assessment",
											"COVERAGE_INSUFFICIENT": "coverage_improvement_needed"
										}
									},
									"reliability_assessment": {
										"entry": [
											"assess_test_reliability",
											"check_flaky_tests"
										],
										"on": {
											"TESTS_RELIABLE": "#benchmark_validation",
											"TESTS_FLAKY": "reliability_improvement_needed"
										}
									},
									"benchmark_validation": {
										"entry": [
											"validate_performance_benchmarks",
											"compare_against_baselines"
										],
										"on": {
											"BENCHMARKS_MET": "#quality_validated",
											"BENCHMARKS_FAILED": "performance_improvement_needed"
										}
									},
									"coverage_improvement_needed": {
										"entry": [
											"suggest_coverage_improvements",
											"identify_critical_gaps"
										]
									},
									"reliability_improvement_needed": {
										"entry": [
											"improve_test_reliability",
											"fix_flaky_tests"
										]
									},
									"performance_improvement_needed": {
										"entry": [
											"suggest_performance_improvements",
											"identify_optimization_opportunities"
										]
									}
								},
								"initial": "coverage_analysis",
								"on": {
									"ANALYSIS_COMPLETE": "quality_validated",
									"QUALITY_ISSUES_FOUND": "quality_improvement"
								}
							},
							"quality_improvement": {
								"entry": [
									"create_improvement_plan",
									"prioritize_quality_issues"
								],
								"on": {
									"IMPROVEMENTS_APPLIED": "results_analyzed",
									"SKIP_IMPROVEMENTS": "quality_validated"
								}
							},
							"quality_validated": {
								"entry": [
									"validate_quality_gates",
									"check_ci_cd_readiness"
								],
								"states": {
									"quality_gates": {
										"entry": [
											"apply_quality_gates",
											"enforce_quality_standards"
										],
										"on": {
											"QUALITY_GATES_PASSED": "#ci_cd_integration",
											"QUALITY_GATES_FAILED": "quality_gate_failure"
										}
									},
									"ci_cd_integration": {
										"entry": [
											"integrate_with_ci_cd",
											"trigger_automated_pipeline"
										],
										"on": {
											"CI_CD_SUCCESS": "#deployment_validation",
											"CI_CD_FAILED": "ci_cd_failure"
										}
									},
									"deployment_validation": {
										"entry": [
											"validate_deployment_readiness",
											"check_deployment_criteria"
										],
										"on": {
											"DEPLOYMENT_READY": "#reported",
											"DEPLOYMENT_NOT_READY": "deployment_validation_failure"
										}
									},
									"quality_gate_failure": {
										"entry": [
											"handle_quality_gate_failure",
											"block_deployment"
										]
									},
									"ci_cd_failure": {
										"entry": [
											"handle_ci_cd_failure",
											"investigate_pipeline_issues"
										]
									},
									"deployment_validation_failure": {
										"entry": [
											"handle_deployment_validation_failure",
											"address_deployment_blockers"
										]
									}
								},
								"initial": "quality_gates",
								"on": {
									"VALIDATION_SUCCESS": "reported",
									"VALIDATION_FAILED": "validation_failure_handling"
								}
							},
							"reported": {
								"entry": [
									"generate_quality_reports",
									"publish_test_results",
									"notify_stakeholders"
								],
								"type": "final"
							},
							"test_failure_handling": {
								"entry": [
									"handle_test_failures",
									"create_failure_reports"
								],
								"on": {
									"RETRY_TESTS": "test_executed",
									"ACCEPT_FAILURES": "reported"
								}
							},
							"validation_failure_handling": {
								"entry": [
									"handle_validation_failures",
									"escalate_quality_issues"
								],
								"on": {
									"RETRY_VALIDATION": "quality_validated",
									"OVERRIDE_VALIDATION": "reported"
								}
							},
							"planning_error": {
								"entry": [
									"log_planning_error"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"testing_levels": [
							"unit_testing",
							"integration_testing",
							"end_to_end_testing",
							"performance_testing"
						],
						"quality_metrics": [
							"code_coverage",
							"test_reliability",
							"performance_benchmarks",
							"security_testing"
						],
						"automation": [
							"ci_cd_integration",
							"automated_testing",
							"quality_gates",
							"deployment_validation"
						]
					}
				},
				{
					"id": "deployment_orchestration",
					"type": "logic",
					"name": "Deployment Orchestration System",
					"description": "Multi-environment deployment with Docker containerization, health checks, and rollback capabilities",
					"path": "docker/",
					"workflow_states": [
						"build_initiated",
						"image_built",
						"deployed",
						"health_checked",
						"production_ready"
					],
					"statechart": {
						"id": "deploymentOrchestrationStatechart",
						"initial": "build_initiated",
						"states": {
							"build_initiated": {
								"entry": [
									"prepare_build_environment",
									"checkout_source_code"
								],
								"on": {
									"BUILD_READY": "image_built",
									"BUILD_FAILED": "build_failure"
								}
							},
							"image_built": {
								"entry": [
									"start_container_build",
									"apply_multi_stage_optimization"
								],
								"states": {
									"multi_stage_build": {
										"entry": [
											"execute_multi_stage_dockerfile",
											"optimize_layer_caching"
										],
										"on": {
											"STAGES_COMPLETE": "#image_optimization",
											"STAGE_FAILED": "#build_failure"
										}
									},
									"image_optimization": {
										"entry": [
											"optimize_image_size",
											"remove_unnecessary_layers"
										],
										"on": {
											"OPTIMIZATION_COMPLETE": "#security_scanning",
											"OPTIMIZATION_FAILED": "#security_scanning"
										}
									},
									"security_scanning": {
										"entry": [
											"scan_for_vulnerabilities",
											"check_base_image_security"
										],
										"on": {
											"SCAN_CLEAN": "#registry_management",
											"VULNERABILITIES_FOUND": "vulnerability_handling",
											"SCAN_FAILED": "#registry_management"
										}
									},
									"vulnerability_handling": {
										"entry": [
											"assess_vulnerability_severity",
											"apply_security_patches"
										],
										"on": {
											"VULNERABILITIES_RESOLVED": "security_scanning",
											"CRITICAL_VULNERABILITIES": "build_blocked",
											"ACCEPT_VULNERABILITIES": "registry_management"
										}
									},
									"registry_management": {
										"entry": [
											"tag_image",
											"push_to_registry"
										],
										"on": {
											"REGISTRY_PUSH_SUCCESS": "#deployed",
											"REGISTRY_PUSH_FAILED": "#registry_failure"
										}
									}
								},
								"initial": "multi_stage_build",
								"on": {
									"IMAGE_BUILD_SUCCESS": "deployed",
									"IMAGE_BUILD_FAILED": "build_failure"
								}
							},
							"deployed": {
								"entry": [
									"prepare_deployment",
									"select_deployment_strategy"
								],
								"states": {
									"deployment_strategy": {
										"states": {
											"blue_green_deployment": {
												"entry": [
													"setup_blue_green_environment",
													"deploy_to_green_environment"
												],
												"states": {
													"green_deployment": {
														"entry": [
															"deploy_new_version_to_green"
														],
														"on": {
															"GREEN_DEPLOYMENT_SUCCESS": "health_check",
															"GREEN_DEPLOYMENT_FAILED": "deployment_failure"
														}
													},
													"health_check": {
														"entry": [
															"run_health_checks_on_green"
														],
														"on": {
															"HEALTH_CHECK_PASSED": "traffic_switch",
															"HEALTH_CHECK_FAILED": "deployment_failure"
														}
													},
													"traffic_switch": {
														"entry": [
															"switch_traffic_to_green",
															"monitor_traffic_switch"
														],
														"on": {
															"TRAFFIC_SWITCH_SUCCESS": "blue_cleanup",
															"TRAFFIC_SWITCH_FAILED": "rollback_to_blue"
														}
													},
													"blue_cleanup": {
														"entry": [
															"cleanup_blue_environment"
														],
														"on": {
															"CLEANUP_COMPLETE": "#deployment_success"
														}
													},
													"rollback_to_blue": {
														"entry": [
															"rollback_traffic_to_blue",
															"cleanup_failed_green"
														],
														"on": {
															"ROLLBACK_SUCCESS": "#deployment_failure"
														}
													}
												},
												"initial": "green_deployment"
											},
											"rolling_updates": {
												"entry": [
													"initiate_rolling_update",
													"update_pods_incrementally"
												],
												"on": {
													"ROLLING_UPDATE_SUCCESS": "#deployment_success",
													"ROLLING_UPDATE_FAILED": "rolling_rollback"
												}
											},
											"rolling_rollback": {
												"entry": [
													"rollback_rolling_update"
												],
												"on": {
													"ROLLBACK_SUCCESS": "#deployment_failure"
												}
											},
											"canary_releases": {
												"entry": [
													"deploy_canary_version",
													"route_small_traffic_percentage"
												],
												"states": {
													"canary_monitoring": {
														"entry": [
															"monitor_canary_metrics",
															"compare_with_baseline"
														],
														"on": {
															"CANARY_METRICS_GOOD": "canary_promotion",
															"CANARY_METRICS_BAD": "canary_rollback",
															"CANARY_TIMEOUT": "canary_promotion"
														}
													},
													"canary_promotion": {
														"entry": [
															"promote_canary_to_full_deployment"
														],
														"on": {
															"PROMOTION_SUCCESS": "#deployment_success",
															"PROMOTION_FAILED": "canary_rollback"
														}
													},
													"canary_rollback": {
														"entry": [
															"rollback_canary_deployment"
														],
														"on": {
															"ROLLBACK_SUCCESS": "#deployment_failure"
														}
													}
												},
												"initial": "canary_monitoring"
											}
										}
									},
									"infrastructure_management": {
										"states": {
											"kubernetes_deployment": {
												"entry": [
													"deploy_to_kubernetes",
													"apply_k8s_manifests"
												]
											},
											"cloud_native_setup": {
												"entry": [
													"configure_cloud_services",
													"setup_cloud_resources"
												]
											},
											"auto_scaling_config": {
												"entry": [
													"configure_horizontal_pod_autoscaling",
													"set_scaling_policies"
												]
											},
											"load_balancer_config": {
												"entry": [
													"configure_load_balancers",
													"setup_ingress_controllers"
												]
											}
										},
										"type": "parallel"
									}
								},
								"type": "parallel",
								"on": {
									"DEPLOYMENT_SUCCESS": "health_checked",
									"DEPLOYMENT_FAILED": "deployment_failure"
								}
							},
							"health_checked": {
								"entry": [
									"run_post_deployment_health_checks",
									"validate_application_functionality"
								],
								"on": {
									"HEALTH_CHECKS_PASSED": "production_ready",
									"HEALTH_CHECKS_FAILED": "health_check_failure"
								}
							},
							"production_ready": {
								"entry": [
									"mark_deployment_successful",
									"notify_completion",
									"update_deployment_status"
								],
								"type": "final"
							},
							"build_failure": {
								"entry": [
									"log_build_failure",
									"notify_build_failure"
								],
								"on": {
									"RETRY_BUILD": "build_initiated"
								},
								"type": "final"
							},
							"build_blocked": {
								"entry": [
									"block_build_due_to_security",
									"escalate_security_issues"
								],
								"on": {
									"SECURITY_RESOLVED": "image_built",
									"OVERRIDE_SECURITY": "deployed"
								}
							},
							"registry_failure": {
								"entry": [
									"handle_registry_failure",
									"attempt_registry_recovery"
								],
								"on": {
									"REGISTRY_RECOVERED": "image_built",
									"USE_FALLBACK_REGISTRY": "image_built"
								}
							},
							"deployment_failure": {
								"entry": [
									"log_deployment_failure",
									"initiate_rollback_procedures"
								],
								"on": {
									"RETRY_DEPLOYMENT": "deployed",
									"ROLLBACK_COMPLETE": "rollback_success"
								}
							},
							"health_check_failure": {
								"entry": [
									"handle_health_check_failure",
									"diagnose_application_issues"
								],
								"on": {
									"ISSUES_RESOLVED": "health_checked",
									"ROLLBACK_REQUIRED": "deployment_failure"
								}
							},
							"rollback_success": {
								"entry": [
									"confirm_rollback_success",
									"restore_previous_version"
								],
								"type": "final"
							}
						}
					},
					"business_logic": {
						"containerization": [
							"multi_stage_builds",
							"image_optimization",
							"security_scanning",
							"registry_management"
						],
						"deployment_strategies": [
							"blue_green_deployment",
							"rolling_updates",
							"canary_releases",
							"rollback_mechanisms"
						],
						"infrastructure": [
							"kubernetes_support",
							"cloud_native",
							"auto_scaling",
							"load_balancing"
						]
					}
				}
			],
			"test_nodes": [
				{
					"id": "flow_management_tests",
					"type": "test",
					"name": "Flow Management Test Suite",
					"description": "Comprehensive testing of flow CRUD operations, validation, and user isolation",
					"test_path": "tests/unit/api/v1/",
					"test_scenarios": [
						"flow_creation_with_auto_increment_naming",
						"flow_update_with_data_integrity",
						"flow_deletion_with_cascade_cleanup",
						"user_data_isolation_validation",
						"endpoint_name_uniqueness_enforcement"
					],
					"gherkin": {
						"feature": "Flow Management",
						"description": "As a user, I want to manage my flows with CRUD operations, so that I can organize and control my AI workflows effectively",
						"scenarios": [
							{
								"name": "Create flow with automatic name conflict resolution",
								"given": [
									"I am logged in as an active user",
									"I navigate to the flow creation page"
								],
								"when": [
									"I create a flow with name 'MyFlow'",
									"And a flow with that name already exists"
								],
								"then": [
									"the flow should be created successfully",
									"the flow name should be 'MyFlow (1)'",
									"I should receive a 201 status code",
									"the flow should be associated with my user account"
								]
							},
							{
								"name": "Retrieve flows with user isolation",
								"given": [
									"I am logged in as user 'alice'",
									"User 'bob' has created flows",
									"I have created 3 flows"
								],
								"when": [
									"I request to view my flows"
								],
								"then": [
									"I should only see my 3 flows",
									"I should not see bob's flows",
									"the response should include pagination metadata",
									"I should receive a 200 status code"
								]
							},
							{
								"name": "Update flow with field-level validation",
								"given": [
									"I am logged in as an active user",
									"I have a flow named 'TestFlow'"
								],
								"when": [
									"I update the flow description to 'Updated description'",
									"And I update the flow icon to 'new-icon'"
								],
								"then": [
									"the flow description should be updated",
									"the flow icon should be updated",
									"the updated_at timestamp should be refreshed",
									"other fields should remain unchanged"
								]
							},
							{
								"name": "Delete flow with cascade cleanup",
								"given": [
									"I am logged in as an active user",
									"I have a flow with associated messages and transactions"
								],
								"when": [
									"I delete the flow"
								],
								"then": [
									"the flow should be removed from the database",
									"all associated messages should be deleted",
									"all associated transactions should be deleted",
									"referential integrity should be maintained"
								]
							},
							{
								"name": "Create flow with endpoint name uniqueness",
								"given": [
									"I am logged in as an active user"
								],
								"when": [
									"I create a flow with endpoint name 'my-endpoint'",
									"And I try to create another flow with the same endpoint name"
								],
								"then": [
									"the first flow should be created successfully",
									"the second flow creation should fail with a 409 status code",
									"I should receive an error message about endpoint name conflict"
								]
							}
						]
					},
					"acceptance_criteria": {
						"flow_creation": "201 status, unique naming, proper user association",
						"flow_retrieval": "user-scoped data only, pagination support",
						"flow_update": "field-level updates, timestamp management",
						"flow_deletion": "cascade cleanup, referential integrity"
					}
				},
				{
					"id": "authentication_authorization_tests",
					"type": "test",
					"name": "Authentication and Authorization Test Suite",
					"description": "JWT authentication, API key validation, session management, and security boundary testing",
					"test_path": "tests/unit/services/auth/",
					"test_scenarios": [
						"jwt_token_generation_validation",
						"api_key_authentication_flow",
						"user_session_management",
						"cross_user_access_prevention",
						"token_refresh_mechanism"
					],
					"gherkin": {
						"feature": "Authentication and Authorization",
						"description": "As a system, I need to securely authenticate users and manage sessions, so that user data remains isolated and protected",
						"background": [
							"Given the system has authentication enabled",
							"And the JWT secret is properly configured"
						],
						"scenarios": [
							{
								"name": "Successful user login with JWT token generation",
								"given": [
									"I have a registered user with username 'testuser' and password 'securepass'"
								],
								"when": [
									"I submit valid login credentials"
								],
								"then": [
									"I should receive a valid JWT token",
									"the token should contain user identity claims",
									"a user session should be created",
									"I should receive a 200 status code"
								]
							},
							{
								"name": "Failed login with invalid credentials",
								"given": [
									"I have invalid login credentials"
								],
								"when": [
									"I submit the invalid credentials"
								],
								"then": [
									"I should not receive a JWT token",
									"no user session should be created",
									"I should receive a 401 status code",
									"I should get an error message about invalid credentials"
								]
							},
							{
								"name": "API key authentication with usage tracking",
								"given": [
									"I have a valid API key 'sk-test123' associated with user 'alice'"
								],
								"when": [
									"I make an API request using the API key"
								],
								"then": [
									"the request should be authenticated successfully",
									"the API key usage count should be incremented",
									"the last_used_at timestamp should be updated",
									"the request should be processed normally"
								]
							},
							{
								"name": "User data isolation enforcement",
								"given": [
									"User 'alice' has flows and data",
									"User 'bob' is authenticated"
								],
								"when": [
									"User 'bob' tries to access alice's data"
								],
								"then": [
									"the request should be denied",
									"bob should only see his own data",
									"I should receive a 403 status code",
									"strict data scoping should be maintained"
								]
							},
							{
								"name": "JWT token refresh mechanism",
								"given": [
									"I have an expired JWT token",
									"I have a valid refresh token"
								],
								"when": [
									"I request a token refresh using the refresh token"
								],
								"then": [
									"I should receive a new valid JWT token",
									"the old token should be invalidated",
									"the refresh token should be rotated",
									"I should receive a 200 status code"
								]
							}
						]
					},
					"acceptance_criteria": {
						"login_success": "valid tokens generated, user session created",
						"login_failure": "401 status, no token issued",
						"api_key_auth": "valid key accepted, usage tracked",
						"user_isolation": "strict data scoping, no cross-user access"
					}
				},
				{
					"id": "graph_execution_tests",
					"type": "test",
					"name": "Graph Execution Engine Test Suite",
					"description": "Graph building, vertex execution, dependency resolution, and cycle detection testing",
					"test_path": "tests/unit/graph/",
					"test_scenarios": [
						"graph_preparation_validation",
						"vertex_dependency_resolution",
						"cyclic_graph_handling",
						"parallel_execution_coordination",
						"execution_state_management"
					],
					"gherkin": {
						"feature": "Graph Execution Engine",
						"description": "As a system, I need to execute flow graphs reliably with proper dependency resolution, so that complex AI workflows run correctly",
						"background": [
							"Given the graph execution engine is initialized",
							"And vertex dependencies are properly configured"
						],
						"scenarios": [
							{
								"name": "Execute graph with proper dependency resolution",
								"given": [
									"I have a flow with 5 vertices",
									"Vertex A depends on vertices B and C",
									"Vertices B and C have no dependencies"
								],
								"when": [
									"I execute the flow graph"
								],
								"then": [
									"vertices B and C should execute first",
									"vertex A should execute after B and C complete",
									"the dependency order should be respected",
									"all vertices should be properly prepared"
								]
							},
							{
								"name": "Handle cyclic graph with max iterations",
								"given": [
									"I have a flow graph with a circular dependency",
									"Vertex A depends on vertex B",
									"Vertex B depends on vertex A",
									"Max iterations is set to 10"
								],
								"when": [
									"I attempt to execute the flow graph"
								],
								"then": [
									"the cycle should be detected",
									"execution should not exceed 10 iterations",
									"the system should handle the cycle gracefully",
									"appropriate error messages should be generated"
								]
							},
							{
								"name": "Successful parallel execution of independent vertices",
								"given": [
									"I have a flow with 3 independent vertices",
									"All vertices have no dependencies"
								],
								"when": [
									"I execute the flow graph"
								],
								"then": [
									"all vertices should execute in parallel",
									"execution should complete successfully",
									"outputs should be collected from all vertices",
									"execution time should be optimized"
								]
							},
							{
								"name": "Handle vertex execution failure gracefully",
								"given": [
									"I have a flow with 3 vertices",
									"Vertex B is configured to fail during execution"
								],
								"when": [
									"I execute the flow graph"
								],
								"then": [
									"the failure should be detected",
									"the system should maintain state consistency",
									"dependent vertices should handle the failure",
									"graceful degradation should occur"
								]
							},
							{
								"name": "Execute complex graph with nested dependencies",
								"given": [
									"I have a flow with 8 vertices",
									"Complex nested dependency relationships exist"
								],
								"when": [
									"I execute the flow graph"
								],
								"then": [
									"the execution order should be correctly determined",
									"all dependencies should be satisfied before execution",
									"parallel execution should occur where possible",
									"the complete graph should execute successfully"
								]
							}
						]
					},
					"acceptance_criteria": {
						"graph_build": "dependency order resolved, vertices prepared",
						"execution_success": "all vertices executed, outputs collected",
						"cycle_detection": "cycles identified, max iterations enforced",
						"error_handling": "graceful failure, state consistency"
					}
				},
				{
					"id": "component_integration_tests",
					"type": "test",
					"name": "Component Integration Test Suite",
					"description": "Dynamic component loading, template validation, execution, and lifecycle management",
					"test_path": "tests/unit/components/",
					"test_scenarios": [
						"dynamic_component_import",
						"component_template_validation",
						"component_execution_lifecycle",
						"component_caching_behavior",
						"component_error_handling"
					],
					"gherkin": {
						"feature": "Component Integration",
						"description": "As a system, I need to dynamically load and manage components, so that flows can use various AI and processing components",
						"background": [
							"Given the component management system is active",
							"And component templates are available"
						],
						"scenarios": [
							{
								"name": "Lazy load component with successful caching",
								"given": [
									"A component 'TextProcessor' is not loaded",
									"The component template is available in the registry"
								],
								"when": [
									"The component is requested for the first time"
								],
								"then": [
									"the component should be dynamically imported",
									"the component should be cached for future use",
									"lazy loading should complete successfully",
									"subsequent requests should use the cached version"
								]
							},
							{
								"name": "Validate component template schema",
								"given": [
									"I have a component template with required fields",
									"The template has input/output specifications"
								],
								"when": [
									"The component template is validated"
								],
								"then": [
									"schema compliance should be verified",
									"all required fields should be present",
									"field validation should pass",
									"the template should be marked as valid"
								]
							},
							{
								"name": "Execute component with successful output generation",
								"given": [
									"I have a loaded and validated component",
									"The component has proper input data"
								],
								"when": [
									"I execute the component"
								],
								"then": [
									"the component should run successfully",
									"outputs should be generated according to the template",
									"execution should complete without errors",
									"the output should match expected format"
								]
							},
							{
								"name": "Handle component error with graceful recovery",
								"given": [
									"I have a component that encounters an execution error",
									"The error recovery mechanism is enabled"
								],
								"when": [
									"The component fails during execution"
								],
								"then": [
									"the error should be handled gracefully",
									"system stability should be maintained",
									"error details should be logged appropriately",
									"the component should not crash the entire system"
								]
							},
							{
								"name": "Hot reload component on template change",
								"given": [
									"A component is loaded and cached",
									"The component template is modified"
								],
								"when": [
									"The template change is detected"
								],
								"then": [
									"the cached component should be invalidated",
									"the component should be reloaded with new template",
									"hot reloading should complete successfully",
									"existing executions should not be disrupted"
								]
							}
						]
					},
					"acceptance_criteria": {
						"component_loading": "lazy loading successful, caching active",
						"template_validation": "schema compliance, field validation",
						"execution": "component runs successfully, outputs generated",
						"error_recovery": "graceful error handling, system stability"
					}
				},
				{
					"id": "real_time_communication_tests",
					"type": "test",
					"name": "Real-time Communication Test Suite",
					"description": "WebSocket/SSE functionality, event streaming, and connection management testing",
					"test_path": "tests/unit/events/",
					"test_scenarios": [
						"websocket_connection_establishment",
						"server_sent_events_delivery",
						"event_queue_management",
						"connection_reconnection_logic",
						"message_delivery_guarantees"
					],
					"gherkin": {
						"feature": "Real-time Communication",
						"description": "As a system, I need to provide reliable real-time communication, so that users receive immediate feedback and updates",
						"background": [
							"Given the real-time communication system is active",
							"And WebSocket and SSE capabilities are enabled"
						],
						"scenarios": [
							{
								"name": "Establish WebSocket connection with automatic reconnection",
								"given": [
									"A client wants to connect via WebSocket",
									"The WebSocket server is running"
								],
								"when": [
									"The client initiates a WebSocket connection"
								],
								"then": [
									"the connection should be established successfully",
									"connection stability should be maintained",
									"automatic reconnection should be configured",
									"the client should receive a connection confirmation"
								]
							},
							{
								"name": "Deliver events with ordered delivery guarantee",
								"given": [
									"A client is connected via WebSocket",
									"Multiple events are queued for delivery"
								],
								"when": [
									"The events are sent to the client"
								],
								"then": [
									"all events should be delivered in order",
									"no message loss should occur",
									"event delivery should be confirmed",
									"the client should receive all events correctly"
								]
							},
							{
								"name": "Handle connection loss with graceful recovery",
								"given": [
									"A client is connected and receiving events",
									"The network connection is interrupted"
								],
								"when": [
									"The connection is lost and then restored"
								],
								"then": [
									"the system should detect the connection loss",
									"automatic reconnection should be attempted",
									"graceful degradation should occur during downtime",
									"error recovery should restore full functionality"
								]
							},
							{
								"name": "Achieve low latency high throughput performance",
								"given": [
									"Multiple clients are connected",
									"High volume of events need to be delivered"
								],
								"when": [
									"Events are broadcasted to all clients"
								],
								"then": [
									"event delivery latency should be minimal",
									"high throughput should be maintained",
									"system performance should remain stable",
									"no client should experience significant delays"
								]
							},
							{
								"name": "Fallback to Server-Sent Events when WebSocket fails",
								"given": [
									"A client attempts WebSocket connection",
									"WebSocket connection fails"
								],
								"when": [
									"The system detects WebSocket failure"
								],
								"then": [
									"the system should fallback to Server-Sent Events",
									"event streaming should continue seamlessly",
									"the client should be notified of the fallback",
									"real-time communication should be maintained"
								]
							}
						]
					},
					"acceptance_criteria": {
						"connection_stability": "reliable connections, automatic reconnection",
						"event_delivery": "ordered delivery, no message loss",
						"performance": "low latency, high throughput",
						"reliability": "graceful degradation, error recovery"
					}
				},
				{
					"id": "job_queue_tests",
					"type": "test",
					"name": "Asynchronous Job Queue Test Suite",
					"description": "Background job processing, event streaming, cancellation, and resource cleanup testing",
					"test_path": "tests/unit/services/job_queue/",
					"test_scenarios": [
						"job_creation_and_queuing",
						"job_execution_monitoring",
						"job_cancellation_handling",
						"resource_cleanup_verification",
						"event_streaming_integration"
					],
					"gherkin": {
						"feature": "Asynchronous Job Queue",
						"description": "As a system, I need to process background jobs reliably, so that long-running tasks don't block user interactions",
						"background": [
							"Given the job queue system is running",
							"And event streaming is configured"
						],
						"scenarios": [
							{
								"name": "Execute job successfully with event streaming",
								"given": [
									"A job is queued for background processing",
									"The job has valid parameters and configuration"
								],
								"when": [
									"The job starts processing"
								],
								"then": [
									"the job should execute successfully",
									"progress events should be streamed in real-time",
									"completion events should be sent when finished",
									"job results should be available for retrieval"
								]
							},
							{
								"name": "Cancel job gracefully with resource cleanup",
								"given": [
									"A job is currently running",
									"The user requests job cancellation"
								],
								"when": [
									"The cancellation request is processed"
								],
								"then": [
									"the job should be cancelled gracefully",
									"all allocated resources should be cleaned up",
									"cancellation events should be streamed",
									"partial results should be preserved if applicable"
								]
							},
							{
								"name": "Monitor job with real-time status updates",
								"given": [
									"A long-running job is in progress",
									"Real-time monitoring is enabled"
								],
								"when": [
									"The job progresses through different stages"
								],
								"then": [
									"status updates should be provided in real-time",
									"progress tracking should show completion percentage",
									"monitoring events should include detailed information",
									"users should see current job state"
								]
							},
							{
								"name": "Handle job failure with retry mechanism",
								"given": [
									"A job fails during execution",
									"Retry mechanism is configured with 3 attempts"
								],
								"when": [
									"The job failure is detected"
								],
								"then": [
									"the failure should be handled appropriately",
									"retry mechanism should attempt job re-execution",
									"failure events should be logged and streamed",
									"the system should remain stable after failures"
								]
							},
							{
								"name": "Process multiple jobs concurrently with resource management",
								"given": [
									"Multiple jobs are queued simultaneously",
									"System resource limits are configured"
								],
								"when": [
									"Jobs are processed concurrently"
								],
								"then": [
									"jobs should be processed within resource constraints",
									"resource cleanup should occur after each job",
									"job queue should maintain proper ordering",
									"system performance should remain optimal"
								]
							}
						]
					},
					"acceptance_criteria": {
						"job_processing": "jobs execute successfully, events streamed",
						"cancellation": "graceful cancellation, resource cleanup",
						"monitoring": "real-time status updates, progress tracking",
						"reliability": "failure handling, retry mechanisms"
					}
				},
				{
					"id": "validation_engine_tests",
					"type": "test",
					"name": "Multi-layer Validation Engine Test Suite",
					"description": "Schema validation, business rule enforcement, and data integrity checking",
					"test_path": "tests/unit/validation/",
					"test_scenarios": [
						"pydantic_schema_validation",
						"business_rule_enforcement",
						"data_integrity_checks",
						"validation_error_handling",
						"performance_optimization"
					],
					"gherkin": {
						"feature": "Multi-layer Validation Engine",
						"description": "As a system, I need to validate data through multiple layers, so that data integrity and business rules are enforced",
						"background": [
							"Given the validation engine is configured",
							"And validation schemas are loaded"
						],
						"scenarios": [
							{
								"name": "Perform schema validation with type checking",
								"given": [
									"I have input data with mixed types",
									"A Pydantic schema is defined for validation"
								],
								"when": [
									"I validate the input data against the schema"
								],
								"then": [
									"type checking should be performed",
									"format validation should occur",
									"schema compliance should be verified",
									"validation results should be returned"
								]
							},
							{
								"name": "Enforce business rules with constraint validation",
								"given": [
									"I have data that passes schema validation",
									"Business rules are configured"
								],
								"when": [
									"I apply business rule validation"
								],
								"then": [
									"constraint enforcement should occur",
									"business logic validation should be applied",
									"rule violations should be detected",
									"validation should proceed through all layers"
								]
							},
							{
								"name": "Provide descriptive error messages with field-level feedback",
								"given": [
									"I have invalid input data",
									"Multiple validation errors exist"
								],
								"when": [
									"Validation is performed and fails"
								],
								"then": [
									"descriptive error messages should be generated",
									"field-level feedback should be provided",
									"error reporting should be comprehensive",
									"users should understand what to fix"
								]
							},
							{
								"name": "Optimize validation performance with caching",
								"given": [
									"I have frequently validated data patterns",
									"Validation caching is enabled"
								],
								"when": [
									"I validate similar data multiple times"
								],
								"then": [
									"efficient validation should occur",
									"caching should be utilized for repeated patterns",
									"performance should be optimized",
									"validation speed should improve over time"
								]
							},
							{
								"name": "Handle complex nested data validation",
								"given": [
									"I have deeply nested data structures",
									"Validation rules exist for all levels"
								],
								"when": [
									"I validate the nested data structure"
								],
								"then": [
									"all nesting levels should be validated",
									"nested business rules should be applied",
									"validation should handle complex relationships",
									"complete validation results should be provided"
								]
							}
						]
					},
					"acceptance_criteria": {
						"schema_validation": "type checking, format validation",
						"business_rules": "constraint enforcement, logic validation",
						"error_reporting": "descriptive errors, field-level feedback",
						"performance": "efficient validation, caching utilization"
					}
				},
				{
					"id": "caching_system_tests",
					"type": "test",
					"name": "Multi-level Caching System Test Suite",
					"description": "Cache hit/miss behavior, TTL management, invalidation strategies, and performance optimization",
					"test_path": "tests/unit/services/cache/",
					"test_scenarios": [
						"cache_hit_miss_behavior",
						"ttl_expiration_handling",
						"cache_invalidation_strategies",
						"memory_usage_optimization",
						"cache_consistency_validation"
					],
					"gherkin": {
						"feature": "Multi-level Caching System",
						"description": "As a system, I need efficient caching across multiple levels, so that frequently accessed data is served quickly",
						"background": [
							"Given the caching system is initialized",
							"And cache levels are configured"
						],
						"scenarios": [
							{
								"name": "Achieve high cache hit rates with low latency",
								"given": [
									"Frequently accessed data is cached",
									"Cache warming has occurred"
								],
								"when": [
									"Multiple requests are made for cached data"
								],
								"then": [
									"high hit rates should be achieved",
									"low latency access should be maintained",
									"cache performance should be optimal",
									"response times should be consistently fast"
								]
							},
							{
								"name": "Manage memory efficiently with garbage collection",
								"given": [
									"The cache is at capacity",
									"New data needs to be cached"
								],
								"when": [
									"Memory management is triggered"
								],
								"then": [
									"efficient memory usage should be maintained",
									"garbage collection should free unused entries",
									"memory should not exceed configured limits",
									"cache performance should remain stable"
								]
							},
							{
								"name": "Invalidate cache with timely updates",
								"given": [
									"Cached data has been updated in the source",
									"Cache invalidation is triggered"
								],
								"when": [
									"The invalidation process runs"
								],
								"then": [
									"timely updates should occur",
									"consistency should be maintained across cache levels",
									"stale data should be removed",
									"fresh data should be available for caching"
								]
							},
							{
								"name": "Scale cache performance under high load",
								"given": [
									"High concurrent load is applied to the cache",
									"Cache partitioning is configured"
								],
								"when": [
									"Multiple requests access different cache partitions"
								],
								"then": [
									"performance should be maintained under load",
									"cache partitioning should distribute load effectively",
									"no single cache partition should become a bottleneck",
									"overall system scalability should be preserved"
								]
							},
							{
								"name": "Handle cache misses with efficient loading",
								"given": [
									"A request is made for uncached data",
									"The data source is available"
								],
								"when": [
									"A cache miss occurs"
								],
								"then": [
									"data should be loaded efficiently from source",
									"the loaded data should be cached for future requests",
									"cache loading should not block other operations",
									"subsequent requests should result in cache hits"
								]
							}
						]
					},
					"acceptance_criteria": {
						"cache_performance": "high hit rates, low latency access",
						"memory_management": "efficient memory usage, garbage collection",
						"invalidation": "timely updates, consistency maintenance",
						"scalability": "performance under load, cache partitioning"
					}
				},
				{
					"id": "error_handling_tests",
					"type": "test",
					"name": "Comprehensive Error Handling Test Suite",
					"description": "Error classification, recovery strategies, user feedback, and system stability testing",
					"test_path": "tests/unit/exceptions/",
					"test_scenarios": [
						"error_classification_accuracy",
						"graceful_degradation_behavior",
						"retry_mechanism_effectiveness",
						"user_friendly_error_messages",
						"system_stability_under_errors"
					],
					"gherkin": {
						"feature": "Comprehensive Error Handling",
						"description": "As a system, I need to handle errors gracefully across all components, so that system stability is maintained and users receive helpful feedback",
						"background": [
							"Given the error handling system is active",
							"And error recovery mechanisms are configured"
						],
						"scenarios": [
							{
								"name": "Apply graceful degradation with fallback mechanisms",
								"given": [
									"A critical component encounters an error",
									"Fallback mechanisms are configured"
								],
								"when": [
									"The error occurs during system operation"
								],
								"then": [
									"graceful degradation should be applied",
									"fallback mechanisms should activate",
									"system functionality should be preserved at reduced capacity",
									"error recovery should minimize user impact"
								]
							},
							{
								"name": "Provide helpful error messages with recovery guidance",
								"given": [
									"A user encounters an application error",
									"Error message templates are configured"
								],
								"when": [
									"The error is presented to the user"
								],
								"then": [
									"helpful error messages should be displayed",
									"recovery guidance should be provided",
									"users should understand what went wrong",
									"actionable steps should be suggested"
								]
							},
							{
								"name": "Maintain system stability when errors are contained",
								"given": [
									"Multiple components are experiencing errors",
									"Error containment is active"
								],
								"when": [
									"Errors propagate through the system"
								],
								"then": [
									"errors should be contained to their respective components",
									"system stability should be maintained",
									"the system should remain operational",
									"error isolation should prevent cascading failures"
								]
							},
							{
								"name": "Track errors with comprehensive monitoring and alerting",
								"given": [
									"Various errors occur across the system",
									"Error monitoring is configured"
								],
								"when": [
									"Errors are detected and logged"
								],
								"then": [
									"error tracking should capture all relevant details",
									"alerting should notify appropriate teams",
									"diagnostic information should be collected",
									"error patterns should be identified for analysis"
								]
							},
							{
								"name": "Recover from transient errors with retry mechanisms",
								"given": [
									"A transient error occurs during an operation",
									"Retry mechanisms are configured with backoff"
								],
								"when": [
									"The retry mechanism is triggered"
								],
								"then": [
									"the operation should be retried with exponential backoff",
									"transient errors should be resolved through retries",
									"maximum retry attempts should be respected",
									"successful recovery should restore normal operation"
								]
							}
						]
					},
					"acceptance_criteria": {
						"error_recovery": "graceful degradation, fallback mechanisms",
						"user_experience": "helpful error messages, recovery guidance",
						"system_stability": "errors contained, system remains operational",
						"monitoring": "error tracking, alerting, diagnostics"
					}
				},
				{
					"id": "security_access_control_tests",
					"type": "test",
					"name": "Security and Access Control Test Suite",
					"description": "RBAC enforcement, data isolation, input sanitization, and security boundary testing",
					"test_path": "tests/unit/security/",
					"test_scenarios": [
						"role_based_access_control",
						"data_isolation_enforcement",
						"input_sanitization_validation",
						"api_rate_limiting_behavior",
						"security_boundary_testing"
					],
					"gherkin": {
						"feature": "Security and Access Control",
						"description": "As a system, I need comprehensive security controls, so that user data is protected and unauthorized access is prevented",
						"background": [
							"Given the security system is enabled",
							"And access control policies are configured"
						],
						"scenarios": [
							{
								"name": "Enforce proper permissions and deny unauthorized access",
								"given": [
									"A user has limited permissions",
									"Protected resources require higher permissions"
								],
								"when": [
									"The user attempts to access protected resources"
								],
								"then": [
									"proper permissions should be enforced",
									"unauthorized access should be denied",
									"access attempts should be logged",
									"appropriate error messages should be returned"
								]
							},
							{
								"name": "Protect user data with isolation and sensitive data masking",
								"given": [
									"Multiple users have data in the system",
									"Sensitive data protection is enabled"
								],
								"when": [
									"Users access their data"
								],
								"then": [
									"user data should be properly isolated",
									"sensitive data should be protected and masked",
									"cross-user data access should be prevented",
									"data privacy should be maintained"
								]
							},
							{
								"name": "Reject malicious input and prevent XSS attacks",
								"given": [
									"Input validation and XSS protection are active",
									"Malicious input is submitted"
								],
								"when": [
									"The input is processed by the system"
								],
								"then": [
									"malicious input should be rejected",
									"XSS prevention should be applied",
									"input sanitization should occur",
									"security threats should be neutralized"
								]
							},
							{
								"name": "Prevent abuse with rate limiting and fair usage enforcement",
								"given": [
									"Rate limiting is configured for API endpoints",
									"A user exceeds the rate limit"
								],
								"when": [
									"Excessive requests are made"
								],
								"then": [
									"abuse prevention should be activated",
									"fair usage should be enforced",
									"rate limiting should throttle excessive requests",
									"system resources should be protected"
								]
							},
							{
								"name": "Audit security events with comprehensive logging",
								"given": [
									"Security events occur across the system",
									"Audit logging is configured"
								],
								"when": [
									"Security-related activities happen"
								],
								"then": [
									"all security events should be logged",
									"audit trails should be maintained",
									"security monitoring should detect anomalies",
									"compliance requirements should be met"
								]
							}
						]
					},
					"acceptance_criteria": {
						"access_control": "proper permissions enforced, unauthorized access denied",
						"data_protection": "user data isolated, sensitive data protected",
						"input_security": "malicious input rejected, XSS prevention",
						"rate_limiting": "abuse prevention, fair usage enforcement"
					}
				},
				{
					"id": "mcp_integration_tests",
					"type": "test",
					"name": "MCP Integration Test Suite",
					"description": "MCP server management, tool discovery, execution coordination, and security validation",
					"test_path": "tests/unit/services/mcp/",
					"test_scenarios": [
						"mcp_server_connection_management",
						"tool_discovery_validation",
						"tool_execution_coordination",
						"security_isolation_enforcement",
						"memory_leak_prevention"
					],
					"gherkin": {
						"feature": "MCP Integration",
						"description": "As a system, I need to integrate with MCP servers effectively, so that external tools and capabilities can be utilized safely",
						"background": [
							"Given the MCP integration system is running",
							"And MCP server configurations are loaded"
						],
						"scenarios": [
							{
								"name": "Establish reliable MCP server connection with health monitoring",
								"given": [
									"An MCP server is configured and available",
									"Health monitoring is enabled"
								],
								"when": [
									"I attempt to connect to the MCP server"
								],
								"then": [
									"a reliable connection should be established",
									"health monitoring should be active",
									"connection status should be tracked",
									"automatic reconnection should be configured"
								]
							},
							{
								"name": "Discover and execute MCP tools successfully",
								"given": [
									"An MCP server is connected",
									"The server provides available tools"
								],
								"when": [
									"I discover and execute an MCP tool"
								],
								"then": [
									"tool discovery should be successful",
									"tool execution should work correctly",
									"tool results should be returned properly",
									"tool integration should be seamless"
								]
							},
							{
								"name": "Validate commands and isolate execution environment",
								"given": [
									"An MCP tool command is submitted",
									"Security validation is enabled"
								],
								"when": [
									"The command is processed"
								],
								"then": [
									"command validation should occur",
									"execution environment should be isolated",
									"security constraints should be enforced",
									"malicious commands should be rejected"
								]
							},
							{
								"name": "Manage resources efficiently during tool execution",
								"given": [
									"Multiple MCP tools are executing",
									"Resource management is configured"
								],
								"when": [
									"Tools consume system resources"
								],
								"then": [
									"efficient execution should be maintained",
									"resource management should prevent overuse",
									"resource limits should be enforced",
									"system performance should remain stable"
								]
							},
							{
								"name": "Handle MCP server disconnection with graceful recovery",
								"given": [
									"An MCP server is connected and active",
									"The server connection is lost"
								],
								"when": [
									"Connection loss is detected"
								],
								"then": [
									"graceful degradation should occur",
									"reconnection attempts should be made",
									"in-progress operations should be handled appropriately",
									"service recovery should restore functionality"
								]
							}
						]
					},
					"acceptance_criteria": {
						"server_management": "reliable connections, health monitoring",
						"tool_integration": "successful tool discovery, execution",
						"security": "command validation, environment isolation",
						"performance": "efficient execution, resource management"
					}
				},
				{
					"id": "voice_mode_tests",
					"type": "test",
					"name": "Voice Mode Processing Test Suite",
					"description": "Audio processing, VAD detection, provider integration, and real-time communication testing",
					"test_path": "tests/unit/services/voice/",
					"test_scenarios": [
						"voice_activity_detection",
						"audio_resampling_quality",
						"provider_integration_reliability",
						"real_time_processing_performance",
						"websocket_audio_streaming"
					],
					"gherkin": {
						"feature": "Voice Mode Processing",
						"description": "As a user, I want to interact with the system using voice, so that I can have natural conversations with AI assistants",
						"background": [
							"Given voice mode is enabled",
							"And audio processing capabilities are configured"
						],
						"scenarios": [
							{
								"name": "Process clear audio with noise reduction",
								"given": [
									"Voice mode is active",
									"Audio input contains background noise"
								],
								"when": [
									"I speak into the microphone"
								],
								"then": [
									"clear audio processing should occur",
									"noise reduction should be applied",
									"speech should be accurately captured",
									"audio quality should be optimized"
								]
							},
							{
								"name": "Achieve low latency responsive voice interaction",
								"given": [
									"Voice mode is configured for real-time processing",
									"Audio streaming is active"
								],
								"when": [
									"I have a voice conversation"
								],
								"then": [
									"low latency processing should be maintained",
									"responsive interaction should occur",
									"real-time performance should be optimal",
									"conversation flow should be natural"
								]
							},
							{
								"name": "Maintain stable provider connections with fallback support",
								"given": [
									"Multiple voice processing providers are configured",
									"Primary provider connection fails"
								],
								"when": [
									"Voice processing is requested"
								],
								"then": [
									"stable connections should be maintained where possible",
									"fallback support should activate when needed",
									"provider reliability should be ensured",
									"service continuity should be preserved"
								]
							},
							{
								"name": "Provide intuitive voice interaction with error handling",
								"given": [
									"Voice mode is active for user interaction",
									"Various audio conditions occur"
								],
								"when": [
									"I interact using voice commands"
								],
								"then": [
									"intuitive voice interaction should be provided",
									"error handling should manage audio issues gracefully",
									"user experience should remain smooth",
									"voice feedback should be clear and helpful"
								]
							},
							{
								"name": "Handle voice activity detection accurately",
								"given": [
									"Voice Activity Detection is enabled",
									"Mixed audio input with speech and silence"
								],
								"when": [
									"Audio is processed for voice activity"
								],
								"then": [
									"voice activity should be detected accurately",
									"silence periods should be identified correctly",
									"false positives should be minimized",
									"voice processing should start and stop appropriately"
								]
							}
						]
					},
					"acceptance_criteria": {
						"audio_quality": "clear audio processing, noise reduction",
						"real_time_performance": "low latency, responsive interaction",
						"provider_reliability": "stable connections, fallback support",
						"user_experience": "intuitive voice interaction, error handling"
					}
				},
				{
					"id": "file_management_tests",
					"type": "test",
					"name": "File Management System Test Suite",
					"description": "File upload, storage provider integration, metadata management, and security validation",
					"test_path": "tests/unit/services/file/",
					"test_scenarios": [
						"file_upload_processing",
						"storage_provider_integration",
						"metadata_extraction_validation",
						"file_security_scanning",
						"user_isolation_enforcement"
					],
					"gherkin": {
						"feature": "File Management System",
						"description": "As a user, I need to manage files effectively, so that I can upload, store, and retrieve files securely with good performance",
						"background": [
							"Given the file management system is configured",
							"And storage providers are available"
						],
						"scenarios": [
							{
								"name": "Upload files reliably with progress tracking",
								"given": [
									"I have files to upload",
									"The file upload system is active"
								],
								"when": [
									"I initiate file uploads"
								],
								"then": [
									"uploads should be reliable and successful",
									"progress tracking should show upload status",
									"upload completion should be confirmed",
									"uploaded files should be accessible"
								]
							},
							{
								"name": "Support multiple storage providers with seamless switching",
								"given": [
									"Multiple storage providers are configured",
									"Files are stored across different providers"
								],
								"when": [
									"I access files from different storage locations"
								],
								"then": [
									"multiple storage providers should be supported",
									"seamless switching between providers should occur",
									"storage flexibility should be maintained",
									"users should not notice provider differences"
								]
							},
							{
								"name": "Validate files and enforce security with user isolation",
								"given": [
									"Files are uploaded by different users",
									"Security validation is enabled"
								],
								"when": [
									"File access and validation occurs"
								],
								"then": [
									"file validation should be performed",
									"user isolation should be enforced",
									"access control should prevent unauthorized access",
									"security policies should be maintained"
								]
							},
							{
								"name": "Store files efficiently and retrieve them quickly",
								"given": [
									"Files of various sizes are stored",
									"File retrieval is requested"
								],
								"when": [
									"Files are stored and retrieved"
								],
								"then": [
									"efficient storage should be maintained",
									"fast retrieval should occur",
									"performance should be optimized",
									"storage space should be used effectively"
								]
							},
							{
								"name": "Handle file conflicts and manage versions",
								"given": [
									"Files with similar names exist",
									"File versioning is enabled"
								],
								"when": [
									"File conflicts occur during upload"
								],
								"then": [
									"file conflicts should be handled appropriately",
									"version management should maintain file history",
									"users should be able to access different versions",
									"file integrity should be preserved"
								]
							}
						]
					},
					"acceptance_criteria": {
						"upload_reliability": "successful uploads, progress tracking",
						"storage_flexibility": "multiple providers supported, seamless switching",
						"security": "file validation, user isolation, access control",
						"performance": "efficient storage, fast retrieval"
					}
				},
				{
					"id": "frontend_ui_tests",
					"type": "test",
					"name": "Frontend UI Component Test Suite",
					"description": "React component behavior, state management, user interactions, and responsive design testing",
					"test_path": "src/frontend/tests/",
					"test_scenarios": [
						"component_rendering_validation",
						"user_interaction_handling",
						"state_management_consistency",
						"responsive_design_behavior",
						"accessibility_compliance"
					],
					"gherkin": {
						"feature": "Frontend UI Components",
						"description": "As a user, I need responsive and accessible UI components, so that I can interact with the application effectively across different devices",
						"background": [
							"Given the frontend application is loaded",
							"And UI components are initialized"
						],
						"scenarios": [
							{
								"name": "Render components consistently with proper lifecycle",
								"given": [
									"UI components are defined with proper lifecycle methods",
									"Components are mounted in the application"
								],
								"when": [
									"Components are rendered and updated"
								],
								"then": [
									"consistent rendering should occur across updates",
									"proper lifecycle management should be maintained",
									"component reliability should be ensured",
									"rendering should be predictable and stable"
								]
							},
							{
								"name": "Provide responsive UI with smooth animations",
								"given": [
									"UI interactions trigger animations",
									"Responsive design is implemented"
								],
								"when": [
									"Users interact with UI elements"
								],
								"then": [
									"responsive UI behavior should be maintained",
									"smooth animations should enhance user experience",
									"interaction quality should be high",
									"UI should adapt to different screen sizes"
								]
							},
							{
								"name": "Maintain predictable state changes with data integrity",
								"given": [
									"UI components have state management",
									"State changes are triggered by user actions"
								],
								"when": [
									"State updates occur in the application"
								],
								"then": [
									"predictable state changes should happen",
									"data integrity should be maintained",
									"state consistency should be preserved",
									"state synchronization should work correctly"
								]
							},
							{
								"name": "Ensure WCAG compliance with keyboard navigation",
								"given": [
									"Accessibility features are implemented",
									"Keyboard navigation is supported"
								],
								"when": [
									"Users navigate using keyboard only"
								],
								"then": [
									"WCAG compliance should be maintained",
									"keyboard navigation should work properly",
									"accessibility features should be functional",
									"assistive technologies should be supported"
								]
							},
							{
								"name": "Handle component errors gracefully",
								"given": [
									"Components may encounter errors",
									"Error boundaries are implemented"
								],
								"when": [
									"Component errors occur"
								],
								"then": [
									"errors should be handled gracefully",
									"error boundaries should catch and display appropriate messages",
									"application stability should be maintained",
									"user experience should not be severely impacted"
								]
							}
						]
					},
					"acceptance_criteria": {
						"component_reliability": "consistent rendering, proper lifecycle",
						"interaction_quality": "responsive UI, smooth animations",
						"state_consistency": "predictable state changes, data integrity",
						"accessibility": "WCAG compliance, keyboard navigation"
					}
				},
				{
					"id": "e2e_workflow_tests",
					"type": "test",
					"name": "End-to-End Workflow Test Suite",
					"description": "Complete user journey testing from login to flow execution with real-world scenarios",
					"test_path": "tests/e2e/",
					"test_scenarios": [
						"complete_flow_building_workflow",
						"api_code_generation_testing",
						"multi_user_collaboration_scenarios",
						"performance_under_load_testing",
						"cross_browser_compatibility"
					],
					"gherkin": {
						"feature": "End-to-End Workflow",
						"description": "As a user, I want to complete entire workflows from start to finish, so that I can accomplish complex tasks using the integrated system",
						"background": [
							"Given the complete application stack is running",
							"And all system components are properly integrated"
						],
						"scenarios": [
							{
								"name": "Complete full flow building workflow successfully",
								"given": [
									"I am a new user accessing the application",
									"All system components are functioning"
								],
								"when": [
									"I go through the complete flow building process"
								],
								"then": [
									"users should be able to complete tasks successfully",
									"the entire workflow should function end-to-end",
									"all integration points should work correctly",
									"the user should achieve their intended outcome"
								]
							},
							{
								"name": "Maintain acceptable performance with no timeouts",
								"given": [
									"Complex workflows are executed",
									"Performance monitoring is active"
								],
								"when": [
									"Multiple operations are performed in sequence"
								],
								"then": [
									"acceptable response times should be maintained",
									"no timeouts should occur during normal operation",
									"performance should meet user expectations",
									"system responsiveness should be consistent"
								]
							},
							{
								"name": "Demonstrate consistent behavior with error recovery",
								"given": [
									"Workflows encounter various conditions",
									"Error recovery mechanisms are in place"
								],
								"when": [
									"Different scenarios and edge cases are tested"
								],
								"then": [
									"consistent behavior should be maintained",
									"error recovery should work when issues occur",
									"reliability should be demonstrated across scenarios",
									"system should handle unexpected conditions gracefully"
								]
							},
							{
								"name": "Ensure cross-browser and device compatibility",
								"given": [
									"The application is accessed from different environments",
									"Various browsers and devices are used"
								],
								"when": [
									"Workflows are executed across different platforms"
								],
								"then": [
									"functionality should work across different browsers",
									"device compatibility should be maintained",
									"user experience should be consistent across platforms",
									"no platform-specific issues should prevent workflow completion"
								]
							},
							{
								"name": "Handle concurrent users with shared resources",
								"given": [
									"Multiple users are using the system simultaneously",
									"Shared resources are accessed"
								],
								"when": [
									"Concurrent workflows are executed"
								],
								"then": [
									"concurrent user access should be handled properly",
									"shared resources should remain consistent",
									"user isolation should be maintained",
									"system performance should scale with multiple users"
								]
							}
						]
					},
					"acceptance_criteria": {
						"workflow_completion": "users can complete tasks successfully",
						"performance": "acceptable response times, no timeouts",
						"reliability": "consistent behavior, error recovery",
						"compatibility": "works across browsers, devices"
					}
				},
				{
					"id": "performance_benchmark_tests",
					"type": "test",
					"name": "Performance and Load Testing Suite",
					"description": "System performance under load, resource utilization, and scalability validation",
					"test_path": "tests/performance/",
					"test_scenarios": [
						"concurrent_user_load_testing",
						"resource_utilization_monitoring",
						"database_performance_validation",
						"memory_leak_detection",
						"scalability_threshold_identification"
					],
					"gherkin": {
						"feature": "Performance and Load Testing",
						"description": "As a system, I need to maintain performance under varying loads, so that user experience remains consistent regardless of system demand",
						"background": [
							"Given performance monitoring tools are configured",
							"And load testing infrastructure is set up"
						],
						"scenarios": [
							{
								"name": "Maintain system stability under expected load",
								"given": [
									"The system is configured for expected load levels",
									"Load testing tools are prepared"
								],
								"when": [
									"Expected load is applied to the system"
								],
								"then": [
									"the system should remain stable under expected load",
									"response times should stay within acceptable ranges",
									"no critical errors should occur",
									"load handling should meet performance requirements"
								]
							},
							{
								"name": "Optimize CPU and memory utilization efficiently",
								"given": [
									"Resource monitoring is active",
									"System is under various load conditions"
								],
								"when": [
									"Resource utilization is measured during operations"
								],
								"then": [
									"optimal CPU utilization should be maintained",
									"memory usage should be efficient",
									"resource efficiency should be demonstrated",
									"system resources should be used effectively without waste"
								]
							},
							{
								"name": "Scale linearly without performance bottlenecks",
								"given": [
									"Load is gradually increased",
									"System scaling mechanisms are active"
								],
								"when": [
									"Load is scaled from minimum to maximum capacity"
								],
								"then": [
									"linear scaling should be achieved",
									"no performance bottlenecks should be identified",
									"scaling should be proportional to load increases",
									"system architecture should support horizontal scaling"
								]
							},
							{
								"name": "Ensure no memory leaks with stable performance",
								"given": [
									"Long-running performance tests are executed",
									"Memory monitoring is continuous"
								],
								"when": [
									"The system runs for extended periods under load"
								],
								"then": [
									"no memory leaks should be detected",
									"performance should remain stable over time",
									"memory usage should not grow unbounded",
									"system reliability should be maintained during extended operation"
								]
							},
							{
								"name": "Handle peak load gracefully with degradation",
								"given": [
									"System capacity limits are defined",
									"Peak load scenarios are configured"
								],
								"when": [
									"Load exceeds normal capacity"
								],
								"then": [
									"peak load should be handled gracefully",
									"graceful degradation should occur when necessary",
									"system should not crash under extreme load",
									"recovery should happen when load returns to normal"
								]
							}
						]
					},
					"acceptance_criteria": {
						"load_handling": "system stable under expected load",
						"resource_efficiency": "optimal CPU, memory utilization",
						"scalability": "linear scaling, no bottlenecks",
						"reliability": "no memory leaks, stable performance"
					}
				},
				{
					"id": "api_integration_tests",
					"type": "test",
					"name": "API Integration Test Suite",
					"description": "REST API functionality, request/response validation, error handling, and versioning support",
					"test_path": "tests/integration/api/",
					"test_scenarios": [
						"api_endpoint_functionality",
						"request_response_validation",
						"error_status_code_accuracy",
						"api_versioning_compatibility",
						"rate_limiting_enforcement"
					],
					"gherkin": {
						"feature": "API Integration",
						"description": "As a client, I need reliable API endpoints, so that I can integrate with the system programmatically with consistent behavior",
						"background": [
							"Given the API server is running",
							"And API endpoints are properly configured"
						],
						"scenarios": [
							{
								"name": "Receive consistent API responses with proper status codes",
								"given": [
									"API endpoints are available",
									"Valid requests are prepared"
								],
								"when": [
									"API requests are made to various endpoints"
								],
								"then": [
									"consistent responses should be returned",
									"proper HTTP status codes should be used",
									"API reliability should be demonstrated",
									"response format should be consistent across endpoints"
								]
							},
							{
								"name": "Maintain data integrity with accurate validation",
								"given": [
									"Data is exchanged through API calls",
									"Validation rules are configured"
								],
								"when": [
									"Data is sent and received via API"
								],
								"then": [
									"data integrity should be maintained throughout exchanges",
									"accurate data validation should occur",
									"data should be preserved correctly",
									"validation errors should be caught and reported"
								]
							},
							{
								"name": "Handle errors with meaningful responses and proper codes",
								"given": [
									"Various error conditions can occur",
									"Error handling is implemented"
								],
								"when": [
									"API errors are encountered"
								],
								"then": [
									"meaningful error responses should be provided",
									"proper HTTP status codes should indicate error types",
									"error handling should be comprehensive",
									"error messages should help developers understand issues"
								]
							},
							{
								"name": "Support API versioning with backward compatibility",
								"given": [
									"Multiple API versions are supported",
									"Legacy clients exist"
								],
								"when": [
									"Different API versions are accessed"
								],
								"then": [
									"API versioning should work correctly",
									"backward compatibility should be maintained",
									"migration support should be available",
									"version differences should be handled appropriately"
								]
							},
							{
								"name": "Enforce rate limiting and authentication",
								"given": [
									"Rate limiting and authentication are configured",
									"Various client access patterns exist"
								],
								"when": [
									"Clients make API requests with different credentials and frequencies"
								],
								"then": [
									"rate limiting should be enforced appropriately",
									"authentication should be validated correctly",
									"unauthorized access should be prevented",
									"API usage should be monitored and controlled"
								]
							}
						]
					},
					"acceptance_criteria": {
						"api_reliability": "consistent responses, proper status codes",
						"data_integrity": "accurate data exchange, validation",
						"error_handling": "meaningful error responses, proper codes",
						"versioning": "backward compatibility, migration support"
					}
				},
				{
					"id": "database_integration_tests",
					"type": "test",
					"name": "Database Integration Test Suite",
					"description": "Database operations, transaction management, data integrity, and migration testing",
					"test_path": "tests/integration/database/",
					"test_scenarios": [
						"crud_operations_validation",
						"transaction_integrity_testing",
						"data_migration_verification",
						"constraint_enforcement_validation",
						"performance_optimization_testing"
					],
					"gherkin": {
						"feature": "Database Integration",
						"description": "As a system, I need reliable database operations, so that data persistence and retrieval work correctly with full ACID compliance",
						"background": [
							"Given the database is properly configured",
							"And database connections are established"
						],
						"scenarios": [
							{
								"name": "Maintain ACID compliance with referential integrity",
								"given": [
									"Database transactions involve multiple related tables",
									"Referential constraints are defined"
								],
								"when": [
									"Complex database operations are performed"
								],
								"then": [
									"ACID compliance should be maintained",
									"referential integrity should be preserved",
									"data consistency should be guaranteed",
									"transaction atomicity should be ensured"
								]
							},
							{
								"name": "Execute efficient queries with optimal indexing",
								"given": [
									"Database queries are executed",
									"Indexing strategies are implemented"
								],
								"when": [
									"Various types of queries are performed"
								],
								"then": [
									"queries should be executed efficiently",
									"optimal indexing should improve performance",
									"query execution plans should be optimized",
									"database performance should meet requirements"
								]
							},
							{
								"name": "Ensure transaction consistency with error recovery",
								"given": [
									"Database transactions may encounter errors",
									"Error recovery mechanisms are in place"
								],
								"when": [
									"Transaction errors occur"
								],
								"then": [
									"transaction consistency should be maintained",
									"error recovery should restore database to consistent state",
									"partial transactions should be rolled back appropriately",
									"database reliability should be demonstrated"
								]
							},
							{
								"name": "Perform seamless database migrations with data preservation",
								"given": [
									"Database schema changes are required",
									"Existing data must be preserved"
								],
								"when": [
									"Database migrations are executed"
								],
								"then": [
									"migrations should be seamless and safe",
									"data should be preserved during schema changes",
									"migration safety should be ensured",
									"seamless upgrades should not cause data loss"
								]
							},
							{
								"name": "Handle concurrent database access safely",
								"given": [
									"Multiple clients access the database simultaneously",
									"Concurrency control is implemented"
								],
								"when": [
									"Concurrent database operations occur"
								],
								"then": [
									"concurrent access should be handled safely",
									"data corruption should be prevented",
									"locking mechanisms should work correctly",
									"database consistency should be maintained under concurrent load"
								]
							}
						]
					},
					"acceptance_criteria": {
						"data_integrity": "ACID compliance, referential integrity",
						"performance": "efficient queries, optimal indexing",
						"reliability": "transaction consistency, error recovery",
						"migration_safety": "seamless upgrades, data preservation"
					}
				},
				{
					"id": "deployment_validation_tests",
					"type": "test",
					"name": "Deployment and Infrastructure Test Suite",
					"description": "Container deployment, service discovery, health checks, and production readiness validation",
					"test_path": "tests/deployment/",
					"test_scenarios": [
						"container_deployment_validation",
						"service_health_check_verification",
						"load_balancer_configuration_testing",
						"database_migration_execution",
						"production_environment_validation"
					],
					"gherkin": {
						"feature": "Deployment and Infrastructure",
						"description": "As a DevOps engineer, I need reliable deployment processes, so that applications can be deployed safely to production with zero downtime",
						"background": [
							"Given deployment infrastructure is configured",
							"And monitoring and health check systems are active"
						],
						"scenarios": [
							{
								"name": "Deploy consistently with zero downtime",
								"given": [
									"A new application version is ready for deployment",
									"Zero-downtime deployment strategy is configured"
								],
								"when": [
									"Deployment is initiated"
								],
								"then": [
									"deployment should be consistent and reliable",
									"zero downtime should be achieved during deployment",
									"users should not experience service interruption",
									"deployment process should complete successfully"
								]
							},
							{
								"name": "Monitor health accurately with effective alerting",
								"given": [
									"Health monitoring systems are configured",
									"Alerting mechanisms are in place"
								],
								"when": [
									"Application health status changes"
								],
								"then": [
									"health checks should accurately reflect system status",
									"alerting should notify appropriate teams when issues occur",
									"monitoring should provide comprehensive visibility",
									"health status should be reported in real-time"
								]
							},
							{
								"name": "Scale horizontally with effective load distribution",
								"given": [
									"Horizontal scaling is configured",
									"Load balancing is implemented"
								],
								"when": [
									"System load increases and scaling is triggered"
								],
								"then": [
									"horizontal scaling should add capacity automatically",
									"load distribution should balance traffic effectively",
									"scaling should handle increased demand smoothly",
									"system performance should be maintained during scaling"
								]
							},
							{
								"name": "Ensure production readiness with comprehensive monitoring",
								"given": [
									"Production environment is prepared",
									"Monitoring, logging, and security are configured"
								],
								"when": [
									"Application is running in production"
								],
								"then": [
									"production readiness should be demonstrated",
									"comprehensive monitoring should be active",
									"logging should capture necessary information",
									"security measures should be properly implemented"
								]
							},
							{
								"name": "Handle deployment failures with automatic rollback",
								"given": [
									"Deployment may encounter failures",
									"Automatic rollback mechanisms are configured"
								],
								"when": [
									"Deployment failure is detected"
								],
								"then": [
									"deployment failures should be detected quickly",
									"automatic rollback should restore previous version",
									"system should return to stable state",
									"failure recovery should minimize impact"
								]
							}
						]
					},
					"acceptance_criteria": {
						"deployment_reliability": "consistent deployments, zero downtime",
						"health_monitoring": "accurate health checks, alerting",
						"scalability": "horizontal scaling, load distribution",
						"production_readiness": "monitoring, logging, security"
					}
				},
				{
					"id": "regression_test_suite",
					"type": "test",
					"name": "Regression Test Suite",
					"description": "Automated regression testing to prevent feature breakage and ensure backward compatibility",
					"test_path": "tests/regression/",
					"test_scenarios": [
						"feature_regression_detection",
						"backward_compatibility_validation",
						"performance_regression_monitoring",
						"api_contract_compliance_testing",
						"user_workflow_preservation"
					],
					"gherkin": {
						"feature": "Regression Testing",
						"description": "As a quality engineer, I need comprehensive regression testing, so that new changes don't break existing functionality and user experience is preserved",
						"background": [
							"Given a comprehensive regression test suite is available",
							"And baseline functionality and performance metrics are established"
						],
						"scenarios": [
							{
								"name": "Detect feature regressions with stable behavior validation",
								"given": [
									"New code changes are deployed",
									"Existing features have established behavior patterns"
								],
								"when": [
									"Regression tests are executed against the updated system"
								],
								"then": [
									"no feature regressions should be detected",
									"stable behavior should be maintained for all existing features",
									"functionality should work as expected",
									"system stability should be preserved"
								]
							},
							{
								"name": "Ensure existing integrations continue working",
								"given": [
									"External integrations and APIs are established",
									"Integration points have defined contracts"
								],
								"when": [
									"System changes are made that could affect integrations"
								],
								"then": [
									"existing integrations should continue working without issues",
									"API contracts should remain compatible",
									"integration functionality should be preserved",
									"external systems should continue to work seamlessly"
								]
							},
							{
								"name": "Validate no performance degradation occurs",
								"given": [
									"Performance baselines are established",
									"Performance monitoring is active"
								],
								"when": [
									"System performance is measured after changes"
								],
								"then": [
									"no performance degradation should be detected",
									"response times should remain within acceptable ranges",
									"system throughput should be maintained or improved",
									"performance metrics should meet established baselines"
								]
							},
							{
								"name": "Preserve consistent UI/UX and workflow experience",
								"given": [
									"User interface and workflows are established",
									"User experience patterns are documented"
								],
								"when": [
									"UI/UX regression testing is performed"
								],
								"then": [
									"consistent UI/UX should be maintained",
									"user workflows should be preserved",
									"interface behavior should remain predictable",
									"user experience quality should not degrade"
								]
							},
							{
								"name": "Maintain backward compatibility across system versions",
								"given": [
									"Multiple system versions may coexist",
									"Backward compatibility requirements are defined"
								],
								"when": [
									"Backward compatibility testing is executed"
								],
								"then": [
									"backward compatibility should be maintained",
									"older clients should continue to work",
									"data formats should remain compatible",
									"migration paths should be preserved"
								]
							}
						]
					},
					"acceptance_criteria": {
						"stability": "no feature regressions, stable behavior",
						"compatibility": "existing integrations continue working",
						"performance": "no performance degradation",
						"user_experience": "consistent UI/UX, workflow preservation"
					}
				}
			]
		},
		"edges": [
			{
				"id": "edge_1",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "api_key_entity",
				"relationship": "one_to_many",
				"description": "User owns multiple API keys",
				"label": "owns",
				"details": "A user can have multiple API keys for different integrations and purposes"
			},
			{
				"id": "edge_2",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "flow_entity",
				"relationship": "one_to_many",
				"description": "User creates and owns flows",
				"label": "creates",
				"details": "Users create and manage their own AI workflow flows"
			},
			{
				"id": "edge_3",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "folder_entity",
				"relationship": "one_to_many",
				"description": "User organizes content in folders",
				"label": "organizes",
				"details": "Users organize their flows and content in hierarchical folder structures"
			},
			{
				"id": "edge_4",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "variable_entity",
				"relationship": "one_to_many",
				"description": "User manages encrypted variables",
				"label": "manages",
				"details": "Users store sensitive configuration data in encrypted variables"
			},
			{
				"id": "edge_5",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "file_entity",
				"relationship": "one_to_many",
				"description": "User uploads and manages files",
				"label": "uploads",
				"details": "Users upload and manage files through the File Management V2 system"
			},
			{
				"id": "edge_6",
				"type": "schema_relationship",
				"source": "folder_entity",
				"target": "flow_entity",
				"relationship": "one_to_many",
				"description": "Folder contains multiple flows",
				"label": "contains",
				"details": "Folders can contain multiple flows for organizational purposes"
			},
			{
				"id": "edge_7",
				"type": "schema_relationship",
				"source": "flow_entity",
				"target": "transaction_entity",
				"relationship": "one_to_many",
				"description": "Flow generates execution transactions",
				"label": "generates",
				"details": "Each flow execution creates transaction records for monitoring and debugging"
			},
			{
				"id": "edge_8",
				"type": "schema_relationship",
				"source": "flow_entity",
				"target": "vertex_build_entity",
				"relationship": "one_to_many",
				"description": "Flow has vertex build artifacts",
				"label": "builds",
				"details": "Flows contain vertex components that get built into execution artifacts"
			},
			{
				"id": "edge_9",
				"type": "schema_relationship",
				"source": "flow_entity",
				"target": "message_entity",
				"relationship": "one_to_many",
				"description": "Flow processes chat messages",
				"label": "processes",
				"details": "Flows can process and respond to chat messages in playground mode"
			},
			{
				"id": "edge_10",
				"type": "schema_relationship",
				"source": "vertex_entity",
				"target": "edge_entity",
				"relationship": "many_to_many",
				"description": "Vertices connected by edges",
				"label": "connects",
				"details": "Graph vertices are connected through directional edges defining data flow"
			},
			{
				"id": "edge_11",
				"type": "interface_navigation",
				"source": "login_page",
				"target": "flow_dashboard",
				"relationship": "navigates_to",
				"description": "Login success navigates to dashboard",
				"label": "redirects",
				"details": "Successful authentication redirects users to the main dashboard"
			},
			{
				"id": "edge_12",
				"type": "interface_navigation",
				"source": "flow_dashboard",
				"target": "flow_editor",
				"relationship": "navigates_to",
				"description": "Dashboard opens flow editor",
				"label": "opens",
				"details": "Users can navigate from dashboard to edit specific flows"
			},
			{
				"id": "edge_13",
				"type": "interface_navigation",
				"source": "flow_dashboard",
				"target": "playground_interface",
				"relationship": "navigates_to",
				"description": "Dashboard opens playground",
				"label": "launches",
				"details": "Users can launch playground mode from the dashboard"
			},
			{
				"id": "edge_14",
				"type": "interface_navigation",
				"source": "flow_dashboard",
				"target": "settings_page",
				"relationship": "navigates_to",
				"description": "Dashboard navigates to settings",
				"label": "settings",
				"details": "Users can access settings from the main dashboard"
			},
			{
				"id": "edge_15",
				"type": "interface_navigation",
				"source": "flow_editor",
				"target": "playground_interface",
				"relationship": "navigates_to",
				"description": "Editor launches playground",
				"label": "tests",
				"details": "Users can test flows directly from the editor in playground mode"
			},
			{
				"id": "edge_16",
				"type": "interface_navigation",
				"source": "settings_page",
				"target": "file_management_page",
				"relationship": "navigates_to",
				"description": "Settings navigates to file management",
				"label": "manages",
				"details": "Users can navigate to file management from settings"
			},
			{
				"id": "edge_17",
				"type": "interface_navigation",
				"source": "flow_dashboard",
				"target": "store_page",
				"relationship": "navigates_to",
				"description": "Dashboard navigates to store",
				"label": "browses",
				"details": "Users can browse the component store from the dashboard"
			},
			{
				"id": "edge_18",
				"type": "interface_navigation",
				"source": "flow_editor",
				"target": "store_page",
				"relationship": "navigates_to",
				"description": "Editor navigates to store",
				"label": "imports",
				"details": "Users can import components from store while editing flows"
			},
			{
				"id": "edge_19",
				"type": "data_operation",
				"source": "flow_dashboard",
				"target": "flow_entity",
				"relationship": "reads",
				"description": "Dashboard reads flow data",
				"label": "displays",
				"details": "Flow dashboard performs read operations on flow entities to display user flows"
			},
			{
				"id": "edge_20",
				"type": "data_operation",
				"source": "flow_editor",
				"target": "flow_entity",
				"relationship": "writes",
				"description": "Editor writes flow data",
				"label": "saves",
				"details": "Flow editor performs write operations to save flow modifications to database"
			},
			{
				"id": "edge_21",
				"type": "data_operation",
				"source": "flow_editor",
				"target": "component_entity",
				"relationship": "reads",
				"description": "Editor reads component data",
				"label": "loads",
				"details": "Flow editor reads component definitions to populate component library"
			},
			{
				"id": "edge_22",
				"type": "data_operation",
				"source": "playground_interface",
				"target": "message_entity",
				"relationship": "writes",
				"description": "Playground writes message data",
				"label": "creates",
				"details": "Playground interface creates and stores chat messages during interactions"
			},
			{
				"id": "edge_23",
				"type": "data_operation",
				"source": "component_sidebar",
				"target": "component_entity",
				"relationship": "reads",
				"description": "Sidebar reads component data",
				"label": "lists",
				"details": "Component sidebar reads component data to display available components"
			},
			{
				"id": "edge_24",
				"type": "data_operation",
				"source": "reactflow_canvas",
				"target": "vertex_entity",
				"relationship": "reads",
				"description": "Canvas reads vertex data",
				"label": "renders",
				"details": "React Flow canvas reads vertex data to render flow nodes visually"
			},
			{
				"id": "edge_25",
				"type": "logic_dependency",
				"source": "application_lifecycle",
				"target": "authentication_system",
				"relationship": "depends_on",
				"description": "App lifecycle depends on auth system",
				"label": "requires",
				"details": "Application lifecycle management requires authentication system for user session management"
			},
			{
				"id": "edge_26",
				"type": "logic_dependency",
				"source": "flow_execution_engine",
				"target": "component_management",
				"relationship": "depends_on",
				"description": "Execution engine depends on component management",
				"label": "loads",
				"details": "Flow execution engine depends on component management for loading and instantiating components"
			},
			{
				"id": "edge_27",
				"type": "logic_dependency",
				"source": "flow_execution_engine",
				"target": "graph_state_management",
				"relationship": "depends_on",
				"description": "Execution engine depends on state management",
				"label": "tracks",
				"details": "Flow execution engine depends on state management for tracking execution progress"
			},
			{
				"id": "edge_28",
				"type": "logic_dependency",
				"source": "job_queue_system",
				"target": "flow_execution_engine",
				"relationship": "depends_on",
				"description": "Job queue depends on execution engine",
				"label": "executes",
				"details": "Job queue system depends on execution engine for processing queued flow executions"
			},
			{
				"id": "edge_29",
				"type": "logic_dependency",
				"source": "authentication_system",
				"target": "security_access_control",
				"relationship": "depends_on",
				"description": "Auth system depends on access control",
				"label": "enforces",
				"details": "Authentication system depends on access control for permission enforcement"
			},
			{
				"id": "edge_30",
				"type": "data_operation",
				"source": "authentication_system",
				"target": "user_entity",
				"relationship": "reads",
				"description": "Auth system reads user data",
				"label": "validates",
				"details": "Authentication system reads user data for credential validation"
			},
			{
				"id": "edge_31",
				"type": "logic_dependency",
				"source": "real_time_event_system",
				"target": "websocket_sse_communication",
				"relationship": "depends_on",
				"description": "Event system depends on communication",
				"label": "transmits",
				"details": "Real-time event system depends on WebSocket/SSE for message transmission"
			},
			{
				"id": "edge_32",
				"type": "logic_dependency",
				"source": "component_management",
				"target": "caching_system",
				"relationship": "depends_on",
				"description": "Component management depends on caching",
				"label": "caches",
				"details": "Component management depends on caching system for performance optimization"
			},
			{
				"id": "edge_33",
				"type": "data_operation",
				"source": "graph_state_management",
				"target": "vertex_build_entity",
				"relationship": "writes",
				"description": "State management writes build data",
				"label": "tracks",
				"details": "Graph state management writes vertex build data for execution tracking"
			},
			{
				"id": "edge_34",
				"type": "logic_dependency",
				"source": "validation_engine",
				"target": "error_handling_system",
				"relationship": "depends_on",
				"description": "Validation depends on error handling",
				"label": "reports",
				"details": "Validation engine depends on error handling system for reporting validation failures"
			},
			{
				"id": "edge_35",
				"type": "logic_dependency",
				"source": "caching_system",
				"target": "configuration_management",
				"relationship": "depends_on",
				"description": "Caching depends on configuration",
				"label": "configures",
				"details": "Caching system depends on configuration management for cache settings"
			},
			{
				"id": "edge_36",
				"type": "data_operation",
				"source": "error_handling_system",
				"target": "transaction_entity",
				"relationship": "writes",
				"description": "Error system writes error logs",
				"label": "logs",
				"details": "Error handling system writes error information to transaction logs"
			},
			{
				"id": "edge_37",
				"type": "data_operation",
				"source": "security_access_control",
				"target": "user_entity",
				"relationship": "reads",
				"description": "Security reads user permissions",
				"label": "authorizes",
				"details": "Security system reads user data to determine access permissions"
			},
			{
				"id": "edge_38",
				"type": "data_operation",
				"source": "websocket_sse_communication",
				"target": "message_entity",
				"relationship": "reads",
				"description": "Communication reads message data",
				"label": "transmits",
				"details": "WebSocket communication reads message data for real-time transmission"
			},
			{
				"id": "edge_39",
				"type": "data_operation",
				"source": "frontend_state_management",
				"target": "flow_entity",
				"relationship": "reads",
				"description": "Frontend reads flow state",
				"label": "syncs",
				"details": "Frontend state management reads flow data to maintain synchronized state"
			},
			{
				"id": "edge_40",
				"type": "logic_dependency",
				"source": "mcp_integration_system",
				"target": "component_management",
				"relationship": "depends_on",
				"description": "MCP integration depends on components",
				"label": "extends",
				"details": "MCP integration system depends on component management to extend component capabilities"
			},
			{
				"id": "edge_41",
				"type": "logic_dependency",
				"source": "voice_mode_system",
				"target": "real_time_event_system",
				"relationship": "depends_on",
				"description": "Voice mode depends on real-time events",
				"label": "streams",
				"details": "Voice mode system depends on real-time events for audio streaming"
			},
			{
				"id": "edge_42",
				"type": "logic_dependency",
				"source": "file_management_system",
				"target": "security_access_control",
				"relationship": "depends_on",
				"description": "File management depends on access control",
				"label": "secures",
				"details": "File management system depends on access control for secure file operations"
			},
			{
				"id": "edge_43",
				"type": "logic_dependency",
				"source": "store_integration_system",
				"target": "authentication_system",
				"relationship": "depends_on",
				"description": "Store integration depends on authentication",
				"label": "authenticates",
				"details": "Store integration system depends on authentication for user verification"
			},
			{
				"id": "edge_44",
				"type": "logic_dependency",
				"source": "session_management_system",
				"target": "caching_system",
				"relationship": "depends_on",
				"description": "Session management depends on caching",
				"label": "stores",
				"details": "Session management system depends on caching for session storage and retrieval"
			},
			{
				"id": "edge_45",
				"type": "test_validation",
				"source": "flow_management_tests",
				"target": "flow_entity",
				"relationship": "validates",
				"description": "Tests validate flow management",
				"label": "tests",
				"details": "Flow management tests validate CRUD operations on flow entities"
			},
			{
				"id": "edge_46",
				"type": "test_validation",
				"source": "authentication_authorization_tests",
				"target": "user_entity",
				"relationship": "validates",
				"description": "Tests validate user authentication",
				"label": "tests",
				"details": "Authentication tests validate user login and authorization workflows"
			},
			{
				"id": "edge_47",
				"type": "test_validation",
				"source": "graph_execution_tests",
				"target": "vertex_entity",
				"relationship": "validates",
				"description": "Tests validate graph execution",
				"label": "tests",
				"details": "Graph execution tests validate vertex processing and execution logic"
			},
			{
				"id": "edge_48",
				"type": "test_validation",
				"source": "component_integration_tests",
				"target": "component_entity",
				"relationship": "validates",
				"description": "Tests validate component integration",
				"label": "tests",
				"details": "Component integration tests validate component loading and execution"
			},
			{
				"id": "edge_49",
				"type": "test_validation",
				"source": "real_time_communication_tests",
				"target": "message_entity",
				"relationship": "validates",
				"description": "Tests validate message communication",
				"label": "tests",
				"details": "Real-time communication tests validate message transmission and delivery"
			},
			{
				"id": "edge_50",
				"type": "test_validation",
				"source": "job_queue_tests",
				"target": "transaction_entity",
				"relationship": "validates",
				"description": "Tests validate job processing",
				"label": "tests",
				"details": "Job queue tests validate transaction processing and queue management"
			},
			{
				"id": "edge_51",
				"type": "test_validation",
				"source": "validation_engine_tests",
				"target": "flow_entity",
				"relationship": "validates",
				"description": "Tests validate input validation",
				"label": "tests",
				"details": "Validation engine tests validate flow data integrity and validation rules"
			},
			{
				"id": "edge_52",
				"type": "test_validation",
				"source": "caching_system_tests",
				"target": "component_entity",
				"relationship": "validates",
				"description": "Tests validate caching behavior",
				"label": "tests",
				"details": "Caching system tests validate component caching and performance optimization"
			},
			{
				"id": "edge_53",
				"type": "test_validation",
				"source": "error_handling_tests",
				"target": "transaction_entity",
				"relationship": "validates",
				"description": "Tests validate error handling",
				"label": "tests",
				"details": "Error handling tests validate error processing and recovery mechanisms"
			},
			{
				"id": "edge_54",
				"type": "test_validation",
				"source": "security_access_control_tests",
				"target": "user_entity",
				"relationship": "validates",
				"description": "Tests validate security controls",
				"label": "tests",
				"details": "Security tests validate access control and permission enforcement"
			},
			{
				"id": "edge_55",
				"type": "test_validation",
				"source": "mcp_integration_tests",
				"target": "flow_entity",
				"relationship": "validates",
				"description": "Tests validate MCP integration",
				"label": "tests",
				"details": "MCP integration tests validate server protocol integration"
			},
			{
				"id": "edge_56",
				"type": "test_validation",
				"source": "voice_mode_tests",
				"target": "message_entity",
				"relationship": "validates",
				"description": "Tests validate voice processing",
				"label": "tests",
				"details": "Voice mode tests validate audio processing and transcription"
			},
			{
				"id": "edge_57",
				"type": "test_validation",
				"source": "file_management_tests",
				"target": "file_entity",
				"relationship": "validates",
				"description": "Tests validate file management",
				"label": "tests",
				"details": "File management tests validate file upload and storage operations"
			},
			{
				"id": "edge_58",
				"type": "test_validation",
				"source": "frontend_ui_tests",
				"target": "login_page",
				"relationship": "validates",
				"description": "Tests validate UI components",
				"label": "tests",
				"details": "UI tests validate frontend component behavior and rendering"
			},
			{
				"id": "edge_59",
				"type": "test_validation",
				"source": "e2e_workflow_tests",
				"target": "flow_dashboard",
				"relationship": "validates",
				"description": "Tests validate complete workflows",
				"label": "tests",
				"details": "End-to-end tests validate complete user workflows"
			},
			{
				"id": "edge_60",
				"type": "test_validation",
				"source": "performance_benchmark_tests",
				"target": "flow_execution_engine",
				"relationship": "validates",
				"description": "Tests validate system performance",
				"label": "tests",
				"details": "Performance tests validate system scalability and response times"
			},
			{
				"id": "edge_61",
				"type": "test_validation",
				"source": "api_integration_tests",
				"target": "flow_entity",
				"relationship": "validates",
				"description": "Tests validate API functionality",
				"label": "tests",
				"details": "API integration tests validate REST API endpoints and responses"
			},
			{
				"id": "edge_62",
				"type": "test_validation",
				"source": "database_integration_tests",
				"target": "user_entity",
				"relationship": "validates",
				"description": "Tests validate database operations",
				"label": "tests",
				"details": "Database tests validate data persistence and CRUD operations"
			},
			{
				"id": "edge_63",
				"type": "test_validation",
				"source": "deployment_validation_tests",
				"target": "application_lifecycle",
				"relationship": "validates",
				"description": "Tests validate deployment process",
				"label": "tests",
				"details": "Deployment tests validate application startup and configuration"
			},
			{
				"id": "edge_64",
				"type": "test_validation",
				"source": "regression_test_suite",
				"target": "flow_entity",
				"relationship": "validates",
				"description": "Tests prevent feature regression",
				"label": "tests",
				"details": "Regression tests ensure existing functionality remains intact"
			},
			{
				"id": "edge_65",
				"type": "schema_relationship",
				"source": "folder_entity",
				"target": "folder_entity",
				"relationship": "self_reference",
				"description": "Folder has parent-child hierarchy",
				"label": "parent_of",
				"details": "Folders can contain other folders creating hierarchical organization"
			},
			{
				"id": "edge_66",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "credential_entity",
				"relationship": "one_to_many",
				"description": "User manages credentials",
				"label": "credentials",
				"details": "Users store and manage authentication credentials for external services"
			},
			{
				"id": "edge_67",
				"type": "schema_relationship",
				"source": "user_entity",
				"target": "store_entity",
				"relationship": "one_to_many",
				"description": "User contributes to store",
				"label": "contributes",
				"details": "Users can contribute components and flows to the marketplace store"
			},
			{
				"id": "edge_68",
				"type": "schema_relationship",
				"source": "credential_entity",
				"target": "variable_entity",
				"relationship": "related_to",
				"description": "Credentials relate to variables",
				"label": "relates",
				"details": "Credentials can be stored as encrypted variables for security"
			},
			{
				"id": "edge_69",
				"type": "schema_relationship",
				"source": "store_entity",
				"target": "component_entity",
				"relationship": "contains",
				"description": "Store contains components",
				"label": "contains",
				"details": "The marketplace store contains community-contributed components"
			},
			{
				"id": "edge_70",
				"type": "schema_relationship",
				"source": "global_variable_entity",
				"target": "user_entity",
				"relationship": "many_to_one",
				"description": "Global variables can be user-scoped",
				"label": "scoped_to",
				"details": "Global variables can be scoped to specific users for personalization"
			},
			{
				"id": "edge_71",
				"type": "interface_composition",
				"source": "playground_interface",
				"target": "io_modal",
				"relationship": "contains",
				"description": "Playground contains IO modal",
				"label": "embeds",
				"details": "IO modal is embedded within the playground interface for input/output display"
			},
			{
				"id": "edge_72",
				"type": "interface_composition",
				"source": "voice_assistant",
				"target": "chat_input",
				"relationship": "integrates_with",
				"description": "Voice assistant integrates with chat input",
				"label": "enhances",
				"details": "Voice assistant enhances chat input with speech recognition capabilities"
			},
			{
				"id": "edge_73",
				"type": "interface_composition",
				"source": "folder_sidebar",
				"target": "flow_grid",
				"relationship": "controls",
				"description": "Folder sidebar controls flow grid",
				"label": "filters",
				"details": "Folder sidebar filters and controls the display of flows in the grid"
			},
			{
				"id": "edge_74",
				"type": "interface_composition",
				"source": "component_sidebar",
				"target": "component_grid",
				"relationship": "populates",
				"description": "Component sidebar populated by grid",
				"label": "displays",
				"details": "Component grid data populates the sidebar component browser"
			},
			{
				"id": "edge_75",
				"type": "interface_composition",
				"source": "mcp_server_tab",
				"target": "add_mcp_server_modal",
				"relationship": "triggers",
				"description": "MCP tab triggers add modal",
				"label": "opens",
				"details": "MCP server tab contains functionality to open the add server modal"
			},
			{
				"id": "edge_76",
				"type": "interface_composition",
				"source": "settings_page",
				"target": "api_keys_settings",
				"relationship": "contains",
				"description": "Settings page contains API keys tab",
				"label": "includes",
				"details": "API keys settings is a tab within the main settings page"
			},
			{
				"id": "edge_77",
				"type": "interface_composition",
				"source": "settings_page",
				"target": "global_variables_settings",
				"relationship": "contains",
				"description": "Settings page contains variables tab",
				"label": "includes",
				"details": "Global variables settings is a tab within the main settings page"
			},
			{
				"id": "edge_78",
				"type": "interface_composition",
				"source": "header_component",
				"target": "notification_system",
				"relationship": "contains",
				"description": "Header contains notification system",
				"label": "displays",
				"details": "Header component contains and displays the notification system"
			},
			{
				"id": "edge_79",
				"type": "interface_composition",
				"source": "error_boundary",
				"target": "loading_states",
				"relationship": "manages",
				"description": "Error boundary manages loading states",
				"label": "controls",
				"details": "Error boundary component manages and controls loading state displays"
			},
			{
				"id": "edge_80",
				"type": "interface_composition",
				"source": "theme_provider",
				"target": "header_component",
				"relationship": "provides_theme",
				"description": "Theme provider styles header",
				"label": "themes",
				"details": "Theme provider supplies styling context to header component"
			},
			{
				"id": "edge_81",
				"type": "interface_navigation",
				"source": "auth_guard",
				"target": "login_page",
				"relationship": "redirects_to",
				"description": "Auth guard redirects to login",
				"label": "protects",
				"details": "Authentication guard redirects unauthorized users to login"
			},
			{
				"id": "edge_82",
				"type": "logic_dependency",
				"source": "websocket_manager",
				"target": "real_time_event_system",
				"relationship": "implements",
				"description": "WebSocket manager implements event system",
				"label": "provides",
				"details": "WebSocket manager provides the underlying implementation for real-time event system"
			},
			{
				"id": "edge_83",
				"type": "interface_composition",
				"source": "file_management_page",
				"target": "data_table",
				"relationship": "contains",
				"description": "File page contains data table",
				"label": "displays",
				"details": "File management page uses data table component to display file listings"
			},
			{
				"id": "edge_84",
				"type": "interface_composition",
				"source": "add_mcp_server_modal",
				"target": "form_builder",
				"relationship": "contains",
				"description": "MCP modal contains form builder",
				"label": "uses",
				"details": "Add MCP server modal uses form builder for server configuration"
			},
			{
				"id": "edge_85",
				"type": "interface_composition",
				"source": "flow_dashboard",
				"target": "search_interface",
				"relationship": "contains",
				"description": "Dashboard contains search interface",
				"label": "includes",
				"details": "Flow dashboard includes integrated search interface for finding flows"
			},
			{
				"id": "edge_86",
				"type": "schema_relationship",
				"source": "flow_entity",
				"target": "component_entity",
				"relationship": "contains",
				"description": "Flow contains component instances",
				"label": "contains",
				"details": "Flows are composed of multiple interconnected component instances"
			},
			{
				"id": "edge_87",
				"type": "schema_relationship",
				"source": "transaction_entity",
				"target": "vertex_entity",
				"relationship": "many_to_one",
				"description": "Transaction tracks vertex execution",
				"label": "tracks",
				"details": "Each transaction record tracks the execution of specific vertices"
			},
			{
				"id": "edge_88",
				"type": "schema_relationship",
				"source": "message_entity",
				"target": "user_entity",
				"relationship": "many_to_one",
				"description": "Message belongs to user session",
				"label": "belongs_to",
				"details": "Chat messages are associated with user sessions for context"
			},
			{
				"id": "edge_89",
				"type": "schema_relationship",
				"source": "vertex_build_entity",
				"target": "component_entity",
				"relationship": "many_to_one",
				"description": "Vertex build references component",
				"label": "references",
				"details": "Each vertex build references a specific component definition"
			},
			{
				"id": "edge_90",
				"type": "schema_relationship",
				"source": "file_entity",
				"target": "flow_entity",
				"relationship": "many_to_many",
				"description": "Files can be used by multiple flows",
				"label": "used_by",
				"details": "Uploaded files can be referenced and used by multiple flows"
			},
			{
				"id": "edge_91",
				"type": "schema_relationship",
				"source": "api_key_entity",
				"target": "transaction_entity",
				"relationship": "one_to_many",
				"description": "API key authorizes transactions",
				"label": "authorizes",
				"details": "API keys are used to authorize and track external API transactions"
			},
			{
				"id": "edge_92",
				"type": "schema_relationship",
				"source": "variable_entity",
				"target": "flow_entity",
				"relationship": "many_to_many",
				"description": "Variables used in flows",
				"label": "used_in",
				"details": "Encrypted variables are referenced and used within flow configurations"
			},
			{
				"id": "edge_93",
				"type": "schema_relationship",
				"source": "credential_entity",
				"target": "api_key_entity",
				"relationship": "one_to_many",
				"description": "Credential manages API keys",
				"label": "manages",
				"details": "Credentials can contain multiple API keys for different services"
			},
			{
				"id": "edge_94",
				"type": "schema_relationship",
				"source": "store_entity",
				"target": "flow_entity",
				"relationship": "one_to_many",
				"description": "Store contains shared flows",
				"label": "shares",
				"details": "The store can contain publicly shared flow templates"
			},
			{
				"id": "edge_95",
				"type": "interface_navigation",
				"source": "store_page",
				"target": "flow_editor",
				"relationship": "navigates_to",
				"description": "Store imports to editor",
				"label": "imports",
				"details": "Users can import store components directly into the flow editor"
			},
			{
				"id": "edge_96",
				"type": "interface_navigation",
				"source": "playground_interface",
				"target": "flow_editor",
				"relationship": "navigates_to",
				"description": "Playground returns to editor",
				"label": "edits",
				"details": "Users can return to flow editor from playground for modifications"
			},
			{
				"id": "edge_97",
				"type": "interface_navigation",
				"source": "file_management_page",
				"target": "flow_editor",
				"relationship": "navigates_to",
				"description": "File management to editor",
				"label": "uses",
				"details": "Users can use managed files directly in flow editor"
			},
			{
				"id": "edge_98",
				"type": "interface_navigation",
				"source": "settings_page",
				"target": "admin_page",
				"relationship": "navigates_to",
				"description": "Settings to admin panel",
				"label": "admin",
				"details": "Admin users can access admin panel from settings"
			},
			{
				"id": "edge_99",
				"type": "interface_navigation",
				"source": "flow_dashboard",
				"target": "template_gallery",
				"relationship": "navigates_to",
				"description": "Dashboard to template gallery",
				"label": "templates",
				"details": "Users can browse flow templates from the dashboard"
			},
			{
				"id": "edge_100",
				"type": "interface_navigation",
				"source": "template_gallery",
				"target": "flow_editor",
				"relationship": "navigates_to",
				"description": "Template opens in editor",
				"label": "creates",
				"details": "Selected templates create new flows in the editor"
			},
			{
				"id": "edge_101",
				"type": "interface_composition",
				"source": "flow_editor",
				"target": "reactflow_canvas",
				"relationship": "contains",
				"description": "Editor contains React Flow canvas",
				"label": "displays",
				"details": "Flow editor contains the main React Flow canvas for visual editing"
			},
			{
				"id": "edge_102",
				"type": "interface_composition",
				"source": "flow_editor",
				"target": "component_sidebar",
				"relationship": "contains",
				"description": "Editor contains component sidebar",
				"label": "includes",
				"details": "Flow editor includes component sidebar for drag-and-drop functionality"
			},
			{
				"id": "edge_103",
				"type": "interface_composition",
				"source": "flow_editor",
				"target": "flow_toolbar",
				"relationship": "contains",
				"description": "Editor contains toolbar",
				"label": "includes",
				"details": "Flow editor includes toolbar with editing controls and actions"
			},
			{
				"id": "edge_104",
				"type": "interface_composition",
				"source": "playground_interface",
				"target": "message_list",
				"relationship": "contains",
				"description": "Playground contains message list",
				"label": "displays",
				"details": "Playground interface contains message list for chat interactions"
			},
			{
				"id": "edge_105",
				"type": "interface_composition",
				"source": "flow_dashboard",
				"target": "workspace_switcher",
				"relationship": "contains",
				"description": "Dashboard contains workspace switcher",
				"label": "includes",
				"details": "Dashboard includes workspace switcher for multi-workspace support"
			},
			{
				"id": "edge_106",
				"type": "interface_composition",
				"source": "settings_page",
				"target": "mcp_server_tab",
				"relationship": "contains",
				"description": "Settings contains MCP server tab",
				"label": "includes",
				"details": "Settings page includes MCP server configuration tab"
			},
			{
				"id": "edge_107",
				"type": "interface_composition",
				"source": "store_page",
				"target": "paginator_component",
				"relationship": "contains",
				"description": "Store page contains pagination",
				"label": "includes",
				"details": "Store page includes pagination component for browsing components"
			},
			{
				"id": "edge_108",
				"type": "logic_dependency",
				"source": "telemetry_analytics_system",
				"target": "logging_monitoring_system",
				"relationship": "depends_on",
				"description": "Telemetry depends on logging",
				"label": "aggregates",
				"details": "Telemetry system depends on logging system for data aggregation"
			},
			{
				"id": "edge_109",
				"type": "logic_dependency",
				"source": "dependency_injection_system",
				"target": "configuration_management",
				"relationship": "depends_on",
				"description": "DI depends on configuration",
				"label": "configures",
				"details": "Dependency injection system depends on configuration management for service setup"
			},
			{
				"id": "edge_110",
				"type": "logic_dependency",
				"source": "deployment_orchestration",
				"target": "validation_engine",
				"relationship": "depends_on",
				"description": "Deployment depends on validation",
				"label": "validates",
				"details": "Deployment orchestration depends on validation engine for pre-deployment checks"
			},
			{
				"id": "edge_111",
				"type": "data_operation",
				"source": "settings_page",
				"target": "api_key_entity",
				"relationship": "writes",
				"description": "Settings manages API keys",
				"label": "configures",
				"details": "Settings page performs CRUD operations on user API keys"
			},
			{
				"id": "edge_112",
				"type": "data_operation",
				"source": "settings_page",
				"target": "variable_entity",
				"relationship": "writes",
				"description": "Settings manages variables",
				"label": "configures",
				"details": "Settings page performs CRUD operations on user variables"
			},
			{
				"id": "edge_113",
				"type": "data_operation",
				"source": "file_management_page",
				"target": "file_entity",
				"relationship": "writes",
				"description": "File page manages files",
				"label": "uploads",
				"details": "File management page performs file upload and management operations"
			},
			{
				"id": "edge_114",
				"type": "data_operation",
				"source": "store_page",
				"target": "store_entity",
				"relationship": "reads",
				"description": "Store page reads marketplace data",
				"label": "browses",
				"details": "Store page reads marketplace data to display available components"
			},
			{
				"id": "edge_115",
				"type": "data_operation",
				"source": "login_page",
				"target": "user_entity",
				"relationship": "reads",
				"description": "Login validates user credentials",
				"label": "authenticates",
				"details": "Login page reads user data for authentication validation"
			},
			{
				"id": "edge_116",
				"type": "data_operation",
				"source": "flow_execution_engine",
				"target": "transaction_entity",
				"relationship": "writes",
				"description": "Execution engine logs transactions",
				"label": "records",
				"details": "Flow execution engine writes transaction records for monitoring"
			},
			{
				"id": "edge_117",
				"type": "data_operation",
				"source": "job_queue_system",
				"target": "vertex_build_entity",
				"relationship": "reads",
				"description": "Job queue reads build artifacts",
				"label": "executes",
				"details": "Job queue system reads vertex build artifacts for execution"
			},
			{
				"id": "edge_118",
				"type": "data_operation",
				"source": "voice_assistant",
				"target": "message_entity",
				"relationship": "writes",
				"description": "Voice assistant creates messages",
				"label": "transcribes",
				"details": "Voice assistant writes transcribed voice input as messages"
			},
			{
				"id": "edge_119",
				"type": "data_operation",
				"source": "mcp_integration_system",
				"target": "flow_entity",
				"relationship": "reads",
				"description": "MCP system reads flow configurations",
				"label": "exposes",
				"details": "MCP integration system reads flow data to expose as MCP services"
			},
			{
				"id": "edge_120",
				"type": "data_operation",
				"source": "admin_page",
				"target": "user_entity",
				"relationship": "writes",
				"description": "Admin manages user accounts",
				"label": "administers",
				"details": "Admin page performs user management operations including creation and updates"
			}
		]
	}
}