{
  "uidl_definitions": {
    "metadata": {
      "name": "LangBuilder Complete UIDL Definitions",
      "version": "1.0.0",
      "description": "Comprehensive UIDL definitions for all 36 interface nodes in LangBuilder application",
      "last_updated": "2025-09-02",
      "total_definitions": 36,
      "categories": {
        "pages": 12,
        "modals": 8,
        "components": 16
      }
    },
    "pages": {
      "login_page": {
        "name": "LoginPage",
        "type": "page",
        "content": {
          "elementType": "container",
          "name": "LoginPageContainer",
          "attrs": { 
            "className": "min-h-screen flex items-center justify-center bg-gradient-to-br from-background to-muted/50 px-4 py-8"
          },
          "children": [
            {
              "elementType": "container",
              "name": "LoginCard",
              "attrs": {
                "className": "w-full max-w-md space-y-6 bg-card border border-border rounded-xl p-8 shadow-lg"
              },
              "children": [
                {
                  "elementType": "component",
                  "name": "Logo",
                  "dependency": "ui_logo_component",
                  "attrs": {
                    "className": "mx-auto mb-8",
                    "size": "large"
                  }
                },
                {
                  "elementType": "form",
                  "name": "LoginForm",
                  "attrs": { 
                    "onSubmit": "handleLogin",
                    "className": "space-y-4"
                  },
                  "children": [
                    {
                      "elementType": "div",
                      "name": "FormGroup",
                      "attrs": { "className": "space-y-2" },
                      "children": [
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "username",
                            "className": "text-sm font-medium text-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Username" }]
                        },
                        {
                          "elementType": "input",
                          "name": "UsernameInput",
                          "attrs": {
                            "id": "username",
                            "type": "text",
                            "placeholder": "Enter your username",
                            "required": true,
                            "bindingPath": "credentials.username",
                            "className": "w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring",
                            "autoComplete": "username"
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "FormGroup",
                      "attrs": { "className": "space-y-2" },
                      "children": [
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "password",
                            "className": "text-sm font-medium text-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Password" }]
                        },
                        {
                          "elementType": "input",
                          "name": "PasswordInput",
                          "attrs": {
                            "id": "password",
                            "type": "password",
                            "placeholder": "Enter your password",
                            "required": true,
                            "bindingPath": "credentials.password",
                            "className": "w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring",
                            "autoComplete": "current-password"
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "CheckboxGroup",
                      "attrs": { "className": "flex items-center space-x-2" },
                      "children": [
                        {
                          "elementType": "input",
                          "name": "AutoLoginCheckbox",
                          "attrs": {
                            "id": "autoLogin",
                            "type": "checkbox",
                            "bindingPath": "autoLogin",
                            "className": "w-4 h-4 text-primary border-gray-300 rounded focus:ring-ring focus:ring-2"
                          }
                        },
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "autoLogin",
                            "className": "text-sm text-muted-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Keep me logged in" }]
                        }
                      ]
                    },
                    {
                      "elementType": "button",
                      "name": "SubmitButton",
                      "attrs": {
                        "type": "submit",
                        "className": "w-full bg-primary hover:bg-primary/90 text-primary-foreground font-medium py-2 px-4 rounded-md transition-colors",
                        "disabled": { "bindingPath": "isLoading" }
                      },
                      "children": [
                        {
                          "elementType": "text",
                          "content": "Sign In",
                          "conditional": {
                            "condition": "!isLoading",
                            "ifFalse": { "elementType": "text", "content": "Signing In..." }
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "ErrorMessage",
                      "conditional": {
                        "condition": "error",
                        "ifFalse": null
                      },
                      "attrs": {
                        "className": "bg-destructive/15 text-destructive text-sm p-3 rounded-md border border-destructive/20"
                      },
                      "children": [
                        {
                          "elementType": "text",
                          "bindingPath": "error"
                        }
                      ]
                    }
                  ]
                },
                {
                  "elementType": "div",
                  "name": "SignUpLink",
                  "attrs": { "className": "text-center mt-6 pt-4 border-t border-border" },
                  "children": [
                    {
                      "elementType": "text",
                      "content": "Don't have an account? ",
                      "attrs": { "className": "text-muted-foreground text-sm" }
                    },
                    {
                      "elementType": "link",
                      "attrs": { 
                        "href": "/signup",
                        "className": "text-primary hover:underline font-medium text-sm"
                      },
                      "children": [{ "elementType": "text", "content": "Create Account" }]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "credentials": {
            "type": "object",
            "defaultValue": { "username": "", "password": "" }
          },
          "autoLogin": {
            "type": "boolean",
            "defaultValue": false
          },
          "isLoading": {
            "type": "boolean",
            "defaultValue": false
          },
          "error": {
            "type": "string",
            "defaultValue": null
          }
        },
        "actions": {
          "handleLogin": {
            "type": "async",
            "handler": "authService.login",
            "parameters": ["credentials", "autoLogin"],
            "onStart": "setLoading(true)",
            "onSuccess": "redirectToDashboard",
            "onError": "setError",
            "onComplete": "setLoading(false)"
          }
        }
      },
      "flow_dashboard": {
        "name": "FlowDashboard",
        "type": "page",
        "content": {
          "elementType": "container",
          "name": "DashboardLayout",
          "attrs": { 
            "className": "min-h-screen bg-background flex flex-col"
          },
          "children": [
            {
              "elementType": "component",
              "name": "Header",
              "dependency": "ui_dashboard_header",
              "attrs": {
                "className": "sticky top-0 z-50 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b border-border"
              }
            },
            {
              "elementType": "container",
              "name": "MainContent",
              "attrs": { 
                "className": "flex-1 flex overflow-hidden"
              },
              "children": [
                {
                  "elementType": "component",
                  "name": "FolderSidebar",
                  "dependency": "ui_folder_sidebar",
                  "conditional": {
                    "condition": "!isSmallScreen && showFolders",
                    "ifFalse": null
                  },
                  "attrs": {
                    "className": "w-64 border-r border-border bg-muted/5 overflow-y-auto",
                    "isOpen": { "bindingPath": "sidebarOpen" }
                  }
                },
                {
                  "elementType": "container",
                  "name": "ContentArea",
                  "attrs": { 
                    "className": "flex-1 flex flex-col overflow-hidden"
                  },
                  "children": [
                    {
                      "elementType": "div",
                      "name": "ContentHeader",
                      "attrs": { 
                        "className": "p-6 pb-0"
                      },
                      "children": [
                        {
                          "elementType": "div",
                          "name": "HeaderActions",
                          "attrs": { 
                            "className": "flex items-center justify-between mb-4"
                          },
                          "children": [
                            {
                              "elementType": "h1",
                              "attrs": { 
                                "className": "text-2xl font-bold text-foreground"
                              },
                              "children": [
                                {
                                  "elementType": "text",
                                  "bindingPath": "pageTitle"
                                }
                              ]
                            },
                            {
                              "elementType": "div",
                              "name": "ActionButtons",
                              "attrs": { 
                                "className": "flex items-center gap-2"
                              },
                              "children": [
                                {
                                  "elementType": "component",
                                  "name": "ViewToggle",
                                  "dependency": "ui_view_toggle",
                                  "attrs": {
                                    "value": { "bindingPath": "viewMode" },
                                    "onChange": "setViewMode"
                                  }
                                },
                                {
                                  "elementType": "button",
                                  "name": "CreateFlowButton",
                                  "attrs": {
                                    "onClick": "createNewFlow",
                                    "className": "bg-primary hover:bg-primary/90 text-primary-foreground px-4 py-2 rounded-md font-medium transition-colors"
                                  },
                                  "children": [
                                    { "elementType": "icon", "name": "plus", "className": "w-4 h-4 mr-2" },
                                    { "elementType": "text", "content": "New Flow" }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "elementType": "component",
                          "name": "SearchAndFilters",
                          "dependency": "ui_search_filters",
                          "attrs": {
                            "searchQuery": { "bindingPath": "searchQuery" },
                            "onSearchChange": "setSearchQuery",
                            "filters": { "bindingPath": "activeFilters" },
                            "onFilterChange": "setActiveFilters"
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "tabs",
                      "name": "DashboardTabs",
                      "attrs": {
                        "value": { "bindingPath": "activeTab" },
                        "onValueChange": "setActiveTab",
                        "className": "flex-1 flex flex-col"
                      },
                      "children": [
                        {
                          "elementType": "div",
                          "name": "TabsList",
                          "attrs": {
                            "className": "px-6 border-b border-border bg-muted/30"
                          },
                          "children": [
                            {
                              "elementType": "tabTrigger",
                              "name": "FlowsTab",
                              "attrs": { 
                                "value": "flows",
                                "className": "px-4 py-2 text-sm font-medium transition-colors data-[state=active]:text-primary data-[state=active]:border-b-2 data-[state=active]:border-primary"
                              },
                              "children": [
                                { "elementType": "icon", "name": "workflow", "className": "w-4 h-4 mr-2" },
                                { "elementType": "text", "content": "Flows" },
                                {
                                  "elementType": "span",
                                  "attrs": { "className": "ml-2 bg-muted text-muted-foreground px-2 py-1 rounded-full text-xs" },
                                  "children": [{ "elementType": "text", "bindingPath": "flowCount" }]
                                }
                              ]
                            },
                            {
                              "elementType": "tabTrigger",
                              "name": "ComponentsTab",
                              "attrs": { 
                                "value": "components",
                                "className": "px-4 py-2 text-sm font-medium transition-colors data-[state=active]:text-primary data-[state=active]:border-b-2 data-[state=active]:border-primary"
                              },
                              "children": [
                                { "elementType": "icon", "name": "component", "className": "w-4 h-4 mr-2" },
                                { "elementType": "text", "content": "Components" },
                                {
                                  "elementType": "span",
                                  "attrs": { "className": "ml-2 bg-muted text-muted-foreground px-2 py-1 rounded-full text-xs" },
                                  "children": [{ "elementType": "text", "bindingPath": "componentCount" }]
                                }
                              ]
                            },
                            {
                              "elementType": "tabTrigger",
                              "name": "MCPTab",
                              "attrs": { 
                                "value": "mcp",
                                "className": "px-4 py-2 text-sm font-medium transition-colors data-[state=active]:text-primary data-[state=active]:border-b-2 data-[state=active]:border-primary"
                              },
                              "conditional": {
                                "condition": "FEATURE_FLAGS.ENABLE_MCP",
                                "ifFalse": null
                              },
                              "children": [
                                { "elementType": "icon", "name": "server", "className": "w-4 h-4 mr-2" },
                                { "elementType": "text", "content": "MCP Tools" },
                                {
                                  "elementType": "span",
                                  "attrs": { "className": "ml-2 bg-muted text-muted-foreground px-2 py-1 rounded-full text-xs" },
                                  "children": [{ "elementType": "text", "bindingPath": "mcpServerCount" }]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "elementType": "div",
                          "name": "TabsContent",
                          "attrs": {
                            "className": "flex-1 p-6 overflow-y-auto"
                          },
                          "children": [
                            {
                              "elementType": "tabContent",
                              "name": "FlowsTabContent",
                              "attrs": { "value": "flows" },
                              "children": [
                                {
                                  "elementType": "component",
                                  "name": "FlowGrid",
                                  "dependency": "ui_flow_grid",
                                  "attrs": {
                                    "flows": { "bindingPath": "filteredFlows" },
                                    "viewMode": { "bindingPath": "viewMode" },
                                    "selectedFlows": { "bindingPath": "selectedFlows" },
                                    "onFlowSelect": "selectFlow",
                                    "onFlowOpen": "openFlow",
                                    "onFlowDuplicate": "duplicateFlow",
                                    "onFlowDelete": "deleteFlow"
                                  }
                                }
                              ]
                            },
                            {
                              "elementType": "tabContent",
                              "name": "ComponentsTabContent",
                              "attrs": { "value": "components" },
                              "children": [
                                {
                                  "elementType": "component",
                                  "name": "ComponentGrid",
                                  "dependency": "ui_component_grid",
                                  "attrs": {
                                    "components": { "bindingPath": "filteredComponents" },
                                    "onComponentInstall": "installComponent",
                                    "onComponentPreview": "previewComponent"
                                  }
                                }
                              ]
                            },
                            {
                              "elementType": "tabContent",
                              "name": "MCPTabContent",
                              "attrs": { "value": "mcp" },
                              "children": [
                                {
                                  "elementType": "component",
                                  "name": "MCPServerTab",
                                  "dependency": "ui_mcp_server_tab",
                                  "attrs": {
                                    "servers": { "bindingPath": "mcpServers" },
                                    "onServerAdd": "addMCPServer",
                                    "onServerRemove": "removeMCPServer",
                                    "onServerConfigure": "configureMCPServer"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "elementType": "component",
                      "name": "Paginator",
                      "dependency": "ui_paginator",
                      "conditional": {
                        "condition": "totalItems > pageSize",
                        "ifFalse": null
                      },
                      "attrs": {
                        "className": "p-6 pt-0",
                        "currentPage": { "bindingPath": "currentPage" },
                        "totalPages": { "bindingPath": "totalPages" },
                        "pageSize": { "bindingPath": "pageSize" },
                        "totalItems": { "bindingPath": "totalItems" },
                        "onPageChange": "setCurrentPage",
                        "onPageSizeChange": "setPageSize"
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "activeTab": {
            "type": "string",
            "defaultValue": "flows"
          },
          "flows": {
            "type": "array",
            "defaultValue": []
          },
          "components": {
            "type": "array",
            "defaultValue": []
          },
          "mcpServers": {
            "type": "array",
            "defaultValue": []
          },
          "selectedFolder": {
            "type": "string",
            "defaultValue": null
          },
          "searchQuery": {
            "type": "string",
            "defaultValue": ""
          },
          "activeFilters": {
            "type": "array",
            "defaultValue": []
          },
          "viewMode": {
            "type": "string",
            "defaultValue": "grid"
          },
          "selectedFlows": {
            "type": "array",
            "defaultValue": []
          },
          "sidebarOpen": {
            "type": "boolean",
            "defaultValue": true
          },
          "totalItems": {
            "type": "number",
            "defaultValue": 0
          },
          "pageSize": {
            "type": "number",
            "defaultValue": 12
          },
          "currentPage": {
            "type": "number",
            "defaultValue": 1
          },
          "isSmallScreen": {
            "type": "boolean",
            "defaultValue": false
          },
          "showFolders": {
            "type": "boolean",
            "defaultValue": true
          }
        },
        "actions": {
          "setActiveTab": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["activeTab"]
          },
          "createNewFlow": {
            "type": "async",
            "handler": "flowService.create",
            "parameters": ["selectedFolder"],
            "onSuccess": "navigateToFlow"
          },
          "selectFlow": {
            "type": "sync",
            "handler": "toggleFlowSelection",
            "parameters": ["flowId"]
          },
          "openFlow": {
            "type": "sync",
            "handler": "navigateToFlow",
            "parameters": ["flowId"]
          },
          "duplicateFlow": {
            "type": "async",
            "handler": "flowService.duplicate",
            "parameters": ["flowId"],
            "onSuccess": "refreshFlows"
          },
          "deleteFlow": {
            "type": "async",
            "handler": "flowService.delete",
            "parameters": ["flowId"],
            "onSuccess": "refreshFlows"
          },
          "setSearchQuery": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["searchQuery"]
          },
          "setViewMode": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["viewMode"]
          },
          "setCurrentPage": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["currentPage"]
          }
        }
      },
      "flow_editor": {
        "name": "FlowEditor",
        "type": "page",
        "content": {
          "elementType": "container",
          "name": "FlowEditorLayout",
          "attrs": { 
            "className": "h-screen bg-background flex flex-col overflow-hidden"
          },
          "children": [
            {
              "elementType": "component",
              "name": "FlowToolbar",
              "dependency": "ui_flow_toolbar",
              "attrs": {
                "className": "border-b border-border bg-muted/30 px-4 py-2 flex items-center justify-between",
                "flowName": { "bindingPath": "currentFlow.name" },
                "executionState": { "bindingPath": "executionState" },
                "isDirty": { "bindingPath": "isDirty" },
                "onSave": "saveFlow",
                "onRun": "executeFlow",
                "onBuild": "buildFlow",
                "onUndo": "undoChange",
                "onRedo": "redoChange",
                "canUndo": { "bindingPath": "canUndo" },
                "canRedo": { "bindingPath": "canRedo" }
              }
            },
            {
              "elementType": "container",
              "name": "EditorWorkspace",
              "attrs": { 
                "className": "flex-1 flex overflow-hidden relative"
              },
              "children": [
                {
                  "elementType": "component",
                  "name": "ComponentSidebar",
                  "dependency": "ui_component_sidebar",
                  "conditional": {
                    "condition": "sidebarOpen",
                    "ifFalse": null
                  },
                  "attrs": {
                    "className": "w-80 border-r border-border bg-card/50 overflow-y-auto",
                    "components": { "bindingPath": "availableComponents" },
                    "searchQuery": { "bindingPath": "componentSearchQuery" },
                    "onComponentDrag": "handleComponentDrag",
                    "onSearchChange": "setComponentSearchQuery"
                  }
                },
                {
                  "elementType": "container",
                  "name": "CanvasArea",
                  "attrs": { 
                    "className": "flex-1 relative bg-background"
                  },
                  "children": [
                    {
                      "elementType": "component",
                      "name": "ReactFlowCanvas",
                      "dependency": "ui_reactflow_wrapper",
                      "attrs": {
                        "className": "w-full h-full",
                        "nodes": { "bindingPath": "nodes" },
                        "edges": { "bindingPath": "edges" },
                        "nodeTypes": { "bindingPath": "nodeTypes" },
                        "edgeTypes": { "bindingPath": "edgeTypes" },
                        "onNodesChange": "handleNodesChange",
                        "onEdgesChange": "handleEdgesChange",
                        "onConnect": "handleConnect",
                        "onNodeClick": "selectNode",
                        "onPaneClick": "deselectAll",
                        "onDrop": "handleDrop",
                        "onDragOver": "handleDragOver",
                        "fitView": true,
                        "attributionPosition": "bottom-left"
                      }
                    },
                    {
                      "elementType": "component",
                      "name": "Minimap",
                      "dependency": "ui_minimap",
                      "conditional": {
                        "condition": "showMinimap",
                        "ifFalse": null
                      },
                      "attrs": {
                        "className": "absolute bottom-4 right-4 w-48 h-32 border border-border rounded-lg bg-background/90 backdrop-blur"
                      }
                    },
                    {
                      "elementType": "component",
                      "name": "CanvasControls",
                      "dependency": "ui_canvas_controls",
                      "attrs": {
                        "className": "absolute top-4 right-4 flex flex-col gap-2",
                        "onZoomIn": "zoomIn",
                        "onZoomOut": "zoomOut",
                        "onFitView": "fitView",
                        "onToggleMinimap": "toggleMinimap",
                        "onToggleSidebar": "toggleSidebar"
                      }
                    },
                    {
                      "elementType": "component",
                      "name": "ExecutionOverlay",
                      "dependency": "ui_execution_overlay",
                      "conditional": {
                        "condition": "executionState === 'running'",
                        "ifFalse": null
                      },
                      "attrs": {
                        "className": "absolute inset-0 bg-background/50 backdrop-blur flex items-center justify-center",
                        "executionState": { "bindingPath": "executionState" },
                        "progress": { "bindingPath": "executionProgress" },
                        "onCancel": "cancelExecution"
                      }
                    }
                  ]
                },
                {
                  "elementType": "component",
                  "name": "PropertyPanel",
                  "dependency": "ui_property_panel",
                  "conditional": {
                    "condition": "selectedNode",
                    "ifFalse": null
                  },
                  "attrs": {
                    "className": "w-80 border-l border-border bg-card/50 overflow-y-auto",
                    "node": { "bindingPath": "selectedNode" },
                    "onNodeUpdate": "updateNode",
                    "onClose": "deselectNode"
                  }
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "flowId": {
            "type": "string",
            "defaultValue": null
          },
          "currentFlow": {
            "type": "object",
            "defaultValue": null
          },
          "nodes": {
            "type": "array",
            "defaultValue": []
          },
          "edges": {
            "type": "array",
            "defaultValue": []
          },
          "selectedNode": {
            "type": "object",
            "defaultValue": null
          },
          "sidebarOpen": {
            "type": "boolean",
            "defaultValue": true
          },
          "showMinimap": {
            "type": "boolean",
            "defaultValue": false
          },
          "executionState": {
            "type": "string",
            "defaultValue": "idle"
          },
          "executionProgress": {
            "type": "number",
            "defaultValue": 0
          },
          "buildStatus": {
            "type": "object",
            "defaultValue": {}
          },
          "isDirty": {
            "type": "boolean",
            "defaultValue": false
          },
          "canUndo": {
            "type": "boolean",
            "defaultValue": false
          },
          "canRedo": {
            "type": "boolean",
            "defaultValue": false
          },
          "availableComponents": {
            "type": "array",
            "defaultValue": []
          },
          "componentSearchQuery": {
            "type": "string",
            "defaultValue": ""
          },
          "nodeTypes": {
            "type": "object",
            "defaultValue": {}
          },
          "edgeTypes": {
            "type": "object",
            "defaultValue": {}
          }
        },
        "actions": {
          "loadFlow": {
            "type": "async",
            "handler": "flowService.load",
            "parameters": ["flowId"],
            "onSuccess": "setCurrentFlow"
          },
          "saveFlow": {
            "type": "async",
            "handler": "flowService.save",
            "parameters": ["currentFlow", "nodes", "edges"],
            "onSuccess": "markClean"
          },
          "buildFlow": {
            "type": "async",
            "handler": "flowService.build",
            "parameters": ["flowId"],
            "onStart": "setExecutionState('building')",
            "onSuccess": "setBuildStatus",
            "onError": "handleBuildError",
            "onComplete": "setExecutionState('idle')"
          },
          "executeFlow": {
            "type": "async",
            "handler": "flowService.execute",
            "parameters": ["flowId", "inputs"],
            "onStart": "setExecutionState('running')",
            "onProgress": "updateExecutionProgress",
            "onSuccess": "handleExecutionSuccess",
            "onError": "handleExecutionError",
            "onComplete": "setExecutionState('completed')"
          },
          "handleNodesChange": {
            "type": "sync",
            "handler": "updateNodes",
            "parameters": ["changes"],
            "onComplete": "markDirty"
          },
          "handleEdgesChange": {
            "type": "sync",
            "handler": "updateEdges",
            "parameters": ["changes"],
            "onComplete": "markDirty"
          },
          "handleConnect": {
            "type": "sync",
            "handler": "addEdge",
            "parameters": ["connection"],
            "onComplete": "markDirty"
          },
          "selectNode": {
            "type": "sync",
            "handler": "setSelectedNode",
            "parameters": ["node"]
          },
          "updateNode": {
            "type": "sync",
            "handler": "updateNodeData",
            "parameters": ["nodeId", "data"],
            "onComplete": "markDirty"
          },
          "undoChange": {
            "type": "sync",
            "handler": "historyService.undo"
          },
          "redoChange": {
            "type": "sync",
            "handler": "historyService.redo"
          }
        }
      },
      "playground_interface": {
        "name": "PlaygroundInterface",
        "type": "page",
        "content": {
          "elementType": "container",
          "name": "PlaygroundLayout",
          "attrs": { 
            "className": "h-screen bg-background flex flex-col overflow-hidden"
          },
          "children": [
            {
              "elementType": "component",
              "name": "PlaygroundHeader",
              "dependency": "ui_playground_header",
              "attrs": {
                "className": "border-b border-border bg-card/50 px-4 py-3",
                "sessionName": { "bindingPath": "currentSession.name" },
                "onSessionRename": "renameSession",
                "onNewSession": "createSession",
                "onSessionsToggle": "toggleSessionSidebar"
              }
            },
            {
              "elementType": "container",
              "name": "PlaygroundContent",
              "attrs": { 
                "className": "flex-1 flex overflow-hidden"
              },
              "children": [
                {
                  "elementType": "component",
                  "name": "SessionSidebar",
                  "dependency": "ui_session_sidebar",
                  "conditional": {
                    "condition": "showSessions",
                    "ifFalse": null
                  },
                  "attrs": {
                    "className": "w-64 border-r border-border bg-muted/5 overflow-y-auto",
                    "sessions": { "bindingPath": "sessions" },
                    "currentSessionId": { "bindingPath": "currentSessionId" },
                    "onSessionSelect": "selectSession",
                    "onSessionDelete": "deleteSession",
                    "onSessionDuplicate": "duplicateSession"
                  }
                },
                {
                  "elementType": "container",
                  "name": "ChatArea",
                  "attrs": { 
                    "className": "flex-1 flex flex-col bg-background"
                  },
                  "children": [
                    {
                      "elementType": "component",
                      "name": "MessageList",
                      "dependency": "ui_message_list",
                      "attrs": {
                        "className": "flex-1 overflow-y-auto p-4 space-y-4",
                        "messages": { "bindingPath": "messages" },
                        "isStreaming": { "bindingPath": "isStreaming" },
                        "streamingMessage": { "bindingPath": "streamingMessage" },
                        "onMessageEdit": "editMessage",
                        "onMessageDelete": "deleteMessage",
                        "onMessageRegenerate": "regenerateMessage"
                      }
                    },
                    {
                      "elementType": "container",
                      "name": "InputArea",
                      "attrs": {
                        "className": "border-t border-border bg-card/30 p-4"
                      },
                      "children": [
                        {
                          "elementType": "component",
                          "name": "FileAttachments",
                          "dependency": "ui_file_attachments",
                          "conditional": {
                            "condition": "attachedFiles.length > 0",
                            "ifFalse": null
                          },
                          "attrs": {
                            "className": "mb-3",
                            "files": { "bindingPath": "attachedFiles" },
                            "onFileRemove": "removeAttachedFile"
                          }
                        },
                        {
                          "elementType": "component",
                          "name": "ChatInput",
                          "dependency": "ui_chat_input",
                          "attrs": {
                            "value": { "bindingPath": "inputValue" },
                            "onChange": "setInputValue",
                            "onSend": "sendMessage",
                            "onFileAttach": "attachFiles",
                            "isDisabled": { "bindingPath": "isStreaming" },
                            "placeholder": "Type your message...",
                            "voiceEnabled": { "bindingPath": "voiceMode.enabled" },
                            "onVoiceToggle": "toggleVoiceMode"
                          }
                        },
                        {
                          "elementType": "component",
                          "name": "VoiceAssistant",
                          "dependency": "ui_voice_assistant",
                          "conditional": {
                            "condition": "voiceMode.enabled && voiceMode.isListening",
                            "ifFalse": null
                          },
                          "attrs": {
                            "className": "mt-3",
                            "isListening": { "bindingPath": "voiceMode.isListening" },
                            "audioLevel": { "bindingPath": "voiceMode.audioLevel" },
                            "transcript": { "bindingPath": "voiceMode.transcript" },
                            "onStopListening": "stopVoiceListening"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "sessionId": {
            "type": "string",
            "defaultValue": null
          },
          "currentSessionId": {
            "type": "string",
            "defaultValue": null
          },
          "currentSession": {
            "type": "object",
            "defaultValue": null
          },
          "messages": {
            "type": "array",
            "defaultValue": []
          },
          "sessions": {
            "type": "array",
            "defaultValue": []
          },
          "showSessions": {
            "type": "boolean",
            "defaultValue": true
          },
          "isStreaming": {
            "type": "boolean",
            "defaultValue": false
          },
          "streamingMessage": {
            "type": "object",
            "defaultValue": null
          },
          "inputValue": {
            "type": "string",
            "defaultValue": ""
          },
          "attachedFiles": {
            "type": "array",
            "defaultValue": []
          },
          "voiceMode": {
            "type": "object",
            "defaultValue": {
              "enabled": false,
              "isListening": false,
              "audioLevel": 0,
              "transcript": "",
              "selectedMicrophone": null,
              "selectedVoice": null,
              "provider": "openai"
            }
          }
        },
        "actions": {
          "sendMessage": {
            "type": "async",
            "handler": "messageService.send",
            "parameters": ["inputValue", "attachedFiles", "currentSessionId"],
            "onStart": "setStreaming(true)",
            "onProgress": "updateStreamingMessage",
            "onSuccess": "addMessage",
            "onError": "handleSendError",
            "onComplete": "setStreaming(false), clearInput()"
          },
          "createSession": {
            "type": "async",
            "handler": "sessionService.create",
            "onSuccess": "addSession, selectSession"
          },
          "selectSession": {
            "type": "async",
            "handler": "sessionService.load",
            "parameters": ["sessionId"],
            "onSuccess": "setCurrentSession, loadMessages"
          },
          "deleteSession": {
            "type": "async",
            "handler": "sessionService.delete",
            "parameters": ["sessionId"],
            "onSuccess": "removeSession"
          },
          "toggleVoiceMode": {
            "type": "sync",
            "handler": "voiceService.toggle",
            "onSuccess": "updateVoiceMode"
          },
          "attachFiles": {
            "type": "sync",
            "handler": "addAttachedFiles",
            "parameters": ["files"]
          },
          "editMessage": {
            "type": "async",
            "handler": "messageService.edit",
            "parameters": ["messageId", "newContent"],
            "onSuccess": "updateMessage"
          },
          "regenerateMessage": {
            "type": "async",
            "handler": "messageService.regenerate",
            "parameters": ["messageId"],
            "onStart": "setStreaming(true)",
            "onSuccess": "updateMessage",
            "onComplete": "setStreaming(false)"
          }
        }
      },
      "settings_page": {
        "name": "SettingsPage",
        "type": "page",
        "content": {
          "elementType": "container",
          "name": "SettingsLayout",
          "attrs": { 
            "className": "min-h-screen bg-background"
          },
          "children": [
            {
              "elementType": "component",
              "name": "Header",
              "dependency": "ui_settings_header",
              "attrs": {
                "className": "border-b border-border bg-card/50 px-6 py-4"
              }
            },
            {
              "elementType": "container",
              "name": "SettingsContent",
              "attrs": { 
                "className": "max-w-7xl mx-auto p-6"
              },
              "children": [
                {
                  "elementType": "div",
                  "name": "SettingsHeader",
                  "attrs": { 
                    "className": "mb-8"
                  },
                  "children": [
                    {
                      "elementType": "h1",
                      "attrs": { 
                        "className": "text-3xl font-bold text-foreground"
                      },
                      "children": [{ "elementType": "text", "content": "Settings" }]
                    },
                    {
                      "elementType": "p",
                      "attrs": { 
                        "className": "text-muted-foreground mt-2"
                      },
                      "children": [{ "elementType": "text", "content": "Manage your account settings and preferences." }]
                    }
                  ]
                },
                {
                  "elementType": "tabs",
                  "name": "SettingsTabs",
                  "attrs": {
                    "value": { "bindingPath": "activeTab" },
                    "onValueChange": "setActiveTab",
                    "className": "flex gap-8"
                  },
                  "children": [
                    {
                      "elementType": "div",
                      "name": "TabsList",
                      "attrs": {
                        "className": "w-64 space-y-1"
                      },
                      "children": [
                        {
                          "elementType": "tabTrigger",
                          "name": "GeneralTab",
                          "attrs": { 
                            "value": "general",
                            "className": "w-full justify-start px-4 py-3 text-left font-medium transition-colors hover:bg-muted/50 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-lg"
                          },
                          "children": [
                            { "elementType": "icon", "name": "settings", "className": "w-5 h-5 mr-3" },
                            { "elementType": "text", "content": "General" }
                          ]
                        },
                        {
                          "elementType": "tabTrigger",
                          "name": "ApiKeysTab",
                          "attrs": { 
                            "value": "api-keys",
                            "className": "w-full justify-start px-4 py-3 text-left font-medium transition-colors hover:bg-muted/50 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-lg"
                          },
                          "children": [
                            { "elementType": "icon", "name": "key", "className": "w-5 h-5 mr-3" },
                            { "elementType": "text", "content": "API Keys" }
                          ]
                        },
                        {
                          "elementType": "tabTrigger",
                          "name": "GlobalVariablesTab",
                          "attrs": { 
                            "value": "global-variables",
                            "className": "w-full justify-start px-4 py-3 text-left font-medium transition-colors hover:bg-muted/50 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-lg"
                          },
                          "children": [
                            { "elementType": "icon", "name": "code", "className": "w-5 h-5 mr-3" },
                            { "elementType": "text", "content": "Global Variables" }
                          ]
                        },
                        {
                          "elementType": "tabTrigger",
                          "name": "MCPServersTab",
                          "attrs": { 
                            "value": "mcp-servers",
                            "className": "w-full justify-start px-4 py-3 text-left font-medium transition-colors hover:bg-muted/50 data-[state=active]:bg-primary data-[state=active]:text-primary-foreground rounded-lg"
                          },
                          "conditional": {
                            "condition": "FEATURE_FLAGS.ENABLE_MCP",
                            "ifFalse": null
                          },
                          "children": [
                            { "elementType": "icon", "name": "server", "className": "w-5 h-5 mr-3" },
                            { "elementType": "text", "content": "MCP Servers" }
                          ]
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "TabsContent",
                      "attrs": {
                        "className": "flex-1 space-y-6"
                      },
                      "children": [
                        {
                          "elementType": "tabContent",
                          "name": "GeneralTabContent",
                          "attrs": { "value": "general" },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "GeneralSettings",
                              "dependency": "ui_general_settings",
                              "attrs": {
                                "settings": { "bindingPath": "generalSettings" },
                                "onSettingChange": "updateGeneralSetting"
                              }
                            }
                          ]
                        },
                        {
                          "elementType": "tabContent",
                          "name": "ApiKeysTabContent",
                          "attrs": { "value": "api-keys" },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "ApiKeysSettings",
                              "dependency": "ui_api_keys_settings",
                              "attrs": {
                                "apiKeys": { "bindingPath": "apiKeys" },
                                "onApiKeyCreate": "createApiKey",
                                "onApiKeyDelete": "deleteApiKey",
                                "onApiKeyToggle": "toggleApiKey"
                              }
                            }
                          ]
                        },
                        {
                          "elementType": "tabContent",
                          "name": "GlobalVariablesTabContent",
                          "attrs": { "value": "global-variables" },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "GlobalVariablesSettings",
                              "dependency": "ui_global_variables_settings",
                              "attrs": {
                                "variables": { "bindingPath": "globalVariables" },
                                "onVariableAdd": "addGlobalVariable",
                                "onVariableUpdate": "updateGlobalVariable",
                                "onVariableDelete": "deleteGlobalVariable"
                              }
                            }
                          ]
                        },
                        {
                          "elementType": "tabContent",
                          "name": "MCPServersTabContent",
                          "attrs": { "value": "mcp-servers" },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "MCPServersSettings",
                              "dependency": "ui_mcp_servers_settings",
                              "attrs": {
                                "servers": { "bindingPath": "mcpServers" },
                                "onServerAdd": "addMCPServer",
                                "onServerRemove": "removeMCPServer",
                                "onServerUpdate": "updateMCPServer"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "activeTab": {
            "type": "string",
            "defaultValue": "general"
          },
          "generalSettings": {
            "type": "object",
            "defaultValue": {
              "theme": "system",
              "language": "en",
              "notifications": true,
              "autoSave": true
            }
          },
          "apiKeys": {
            "type": "array",
            "defaultValue": []
          },
          "globalVariables": {
            "type": "array",
            "defaultValue": []
          },
          "mcpServers": {
            "type": "array",
            "defaultValue": []
          }
        },
        "actions": {
          "setActiveTab": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["activeTab"]
          },
          "updateGeneralSetting": {
            "type": "async",
            "handler": "settingsService.update",
            "parameters": ["key", "value"],
            "onSuccess": "updateGeneralSettings"
          },
          "createApiKey": {
            "type": "async",
            "handler": "apiKeyService.create",
            "parameters": ["keyData"],
            "onSuccess": "addApiKey"
          },
          "deleteApiKey": {
            "type": "async",
            "handler": "apiKeyService.delete",
            "parameters": ["keyId"],
            "onSuccess": "removeApiKey"
          },
          "addGlobalVariable": {
            "type": "async",
            "handler": "variableService.create",
            "parameters": ["variableData"],
            "onSuccess": "addVariable"
          },
          "updateGlobalVariable": {
            "type": "async",
            "handler": "variableService.update",
            "parameters": ["variableId", "updates"],
            "onSuccess": "updateVariable"
          },
          "deleteGlobalVariable": {
            "type": "async",
            "handler": "variableService.delete",
            "parameters": ["variableId"],
            "onSuccess": "removeVariable"
          }
        }
      }
    },
    "modals": {
      "io_modal": {
        "name": "IOModal",
        "type": "modal",
        "content": {
          "elementType": "modal",
          "name": "IOModalContainer",
          "attrs": {
            "isOpen": { "bindingPath": "isOpen" },
            "onClose": "handleClose",
            "size": "xl",
            "className": "max-w-6xl max-h-[90vh]"
          },
          "children": [
            {
              "elementType": "modalHeader",
              "name": "IOModalHeader",
              "attrs": {
                "className": "flex items-center justify-between p-6 border-b border-border"
              },
              "children": [
                {
                  "elementType": "h2",
                  "attrs": { "className": "text-xl font-semibold text-foreground" },
                  "children": [{ "elementType": "text", "content": "Playground" }]
                },
                {
                  "elementType": "div",
                  "name": "HeaderActions",
                  "attrs": { "className": "flex items-center gap-2" },
                  "children": [
                    {
                      "elementType": "button",
                      "name": "FullscreenToggle",
                      "attrs": { 
                        "onClick": "toggleFullscreen",
                        "className": "p-2 hover:bg-muted rounded-md transition-colors"
                      },
                      "children": [
                        { 
                          "elementType": "icon", 
                          "name": { "bindingPath": "isFullscreen ? 'minimize' : 'maximize'" },
                          "className": "w-4 h-4"
                        }
                      ]
                    },
                    {
                      "elementType": "button",
                      "name": "CloseButton",
                      "attrs": { 
                        "onClick": "handleClose",
                        "className": "p-2 hover:bg-muted rounded-md transition-colors"
                      },
                      "children": [
                        { "elementType": "icon", "name": "x", "className": "w-4 h-4" }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "elementType": "modalBody",
              "name": "IOModalBody",
              "attrs": {
                "className": "flex-1 overflow-hidden"
              },
              "children": [
                {
                  "elementType": "tabs",
                  "name": "PlaygroundTabs",
                  "attrs": {
                    "value": { "bindingPath": "activeTab" },
                    "onValueChange": "setActiveTab",
                    "className": "h-full flex flex-col"
                  },
                  "children": [
                    {
                      "elementType": "div",
                      "name": "TabsList",
                      "attrs": {
                        "className": "flex border-b border-border px-6 bg-muted/30"
                      },
                      "children": [
                        {
                          "elementType": "tabTrigger",
                          "name": "ChatTab",
                          "attrs": { 
                            "value": "chat",
                            "className": "px-4 py-3 text-sm font-medium transition-colors data-[state=active]:text-primary data-[state=active]:border-b-2 data-[state=active]:border-primary"
                          },
                          "children": [
                            { "elementType": "icon", "name": "message-circle", "className": "w-4 h-4 mr-2" },
                            { "elementType": "text", "content": "Chat" }
                          ]
                        },
                        {
                          "elementType": "tabTrigger",
                          "name": "InputsTab",
                          "attrs": { 
                            "value": "inputs",
                            "className": "px-4 py-3 text-sm font-medium transition-colors data-[state=active]:text-primary data-[state=active]:border-b-2 data-[state=active]:border-primary"
                          },
                          "children": [
                            { "elementType": "icon", "name": "arrow-down", "className": "w-4 h-4 mr-2" },
                            { "elementType": "text", "content": "Inputs" }
                          ]
                        },
                        {
                          "elementType": "tabTrigger",
                          "name": "OutputsTab",
                          "attrs": { 
                            "value": "outputs",
                            "className": "px-4 py-3 text-sm font-medium transition-colors data-[state=active]:text-primary data-[state=active]:border-b-2 data-[state=active]:border-primary"
                          },
                          "children": [
                            { "elementType": "icon", "name": "arrow-up", "className": "w-4 h-4 mr-2" },
                            { "elementType": "text", "content": "Outputs" }
                          ]
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "TabsContent",
                      "attrs": {
                        "className": "flex-1 overflow-hidden"
                      },
                      "children": [
                        {
                          "elementType": "tabContent",
                          "name": "ChatTabContent",
                          "attrs": { 
                            "value": "chat",
                            "className": "h-full"
                          },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "ChatView",
                              "dependency": "ui_chat_view",
                              "attrs": {
                                "className": "h-full",
                                "messages": { "bindingPath": "messages" },
                                "onMessageSend": "sendMessage",
                                "isStreaming": { "bindingPath": "isStreaming" }
                              }
                            }
                          ]
                        },
                        {
                          "elementType": "tabContent",
                          "name": "InputsTabContent",
                          "attrs": { 
                            "value": "inputs",
                            "className": "h-full overflow-auto p-6"
                          },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "InputFields",
                              "dependency": "ui_input_fields",
                              "attrs": {
                                "inputs": { "bindingPath": "flowInputs" },
                                "values": { "bindingPath": "inputValues" },
                                "onChange": "updateInputValue"
                              }
                            }
                          ]
                        },
                        {
                          "elementType": "tabContent",
                          "name": "OutputsTabContent",
                          "attrs": { 
                            "value": "outputs",
                            "className": "h-full overflow-auto p-6"
                          },
                          "children": [
                            {
                              "elementType": "component",
                              "name": "OutputDisplay",
                              "dependency": "ui_output_display",
                              "attrs": {
                                "outputs": { "bindingPath": "flowOutputs" },
                                "onExport": "exportOutputs",
                                "onCopy": "copyOutput"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "isOpen": {
            "type": "boolean",
            "defaultValue": false
          },
          "activeTab": {
            "type": "string",
            "defaultValue": "chat"
          },
          "isFullscreen": {
            "type": "boolean",
            "defaultValue": false
          },
          "messages": {
            "type": "array",
            "defaultValue": []
          },
          "isStreaming": {
            "type": "boolean",
            "defaultValue": false
          },
          "flowInputs": {
            "type": "array",
            "defaultValue": []
          },
          "inputValues": {
            "type": "object",
            "defaultValue": {}
          },
          "flowOutputs": {
            "type": "array",
            "defaultValue": []
          }
        },
        "actions": {
          "handleClose": {
            "type": "sync",
            "handler": "closeModal"
          },
          "toggleFullscreen": {
            "type": "sync",
            "handler": "toggleModalFullscreen"
          },
          "setActiveTab": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["activeTab"]
          },
          "sendMessage": {
            "type": "async",
            "handler": "messageService.send",
            "parameters": ["message", "inputValues"],
            "onStart": "setStreaming(true)",
            "onSuccess": "addMessage",
            "onComplete": "setStreaming(false)"
          },
          "updateInputValue": {
            "type": "sync",
            "handler": "updateInputValues",
            "parameters": ["inputId", "value"]
          }
        }
      },
      "add_mcp_server_modal": {
        "name": "AddMCPServerModal",
        "type": "modal",
        "content": {
          "elementType": "modal",
          "name": "AddMCPServerModalContainer",
          "attrs": {
            "isOpen": { "bindingPath": "isOpen" },
            "onClose": "handleClose",
            "size": "lg",
            "className": "max-w-2xl"
          },
          "children": [
            {
              "elementType": "modalHeader",
              "name": "MCPServerModalHeader",
              "attrs": {
                "className": "p-6 border-b border-border"
              },
              "children": [
                {
                  "elementType": "h2",
                  "attrs": { "className": "text-xl font-semibold text-foreground flex items-center" },
                  "children": [
                    { "elementType": "icon", "name": "server", "className": "w-5 h-5 mr-3 text-primary" },
                    { "elementType": "text", "content": "Add MCP Server" }
                  ]
                },
                {
                  "elementType": "p",
                  "attrs": { "className": "text-sm text-muted-foreground mt-1" },
                  "children": [
                    { "elementType": "text", "content": "Configure a new Model Context Protocol server to extend your flow capabilities." }
                  ]
                }
              ]
            },
            {
              "elementType": "modalBody",
              "name": "MCPServerModalBody",
              "attrs": {
                "className": "p-6 space-y-6"
              },
              "children": [
                {
                  "elementType": "form",
                  "name": "ServerConfigForm",
                  "attrs": { 
                    "onSubmit": "handleAddServer",
                    "className": "space-y-4"
                  },
                  "children": [
                    {
                      "elementType": "div",
                      "name": "FormGroup",
                      "attrs": { "className": "space-y-2" },
                      "children": [
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "serverName",
                            "className": "text-sm font-medium text-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Server Name" }]
                        },
                        {
                          "elementType": "input",
                          "name": "ServerNameInput",
                          "attrs": {
                            "id": "serverName",
                            "type": "text",
                            "placeholder": "Enter server name",
                            "required": true,
                            "bindingPath": "serverConfig.name",
                            "className": "w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring"
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "FormGroup",
                      "attrs": { "className": "space-y-2" },
                      "children": [
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "serverType",
                            "className": "text-sm font-medium text-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Server Type" }]
                        },
                        {
                          "elementType": "select",
                          "name": "ServerTypeSelect",
                          "attrs": {
                            "id": "serverType",
                            "bindingPath": "serverConfig.type",
                            "className": "w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring",
                            "options": [
                              { "value": "npx", "label": "NPX Package" },
                              { "value": "node", "label": "Node.js Script" },
                              { "value": "python", "label": "Python Script" },
                              { "value": "docker", "label": "Docker Container" }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "FormGroup",
                      "attrs": { "className": "space-y-2" },
                      "children": [
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "command",
                            "className": "text-sm font-medium text-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Command" }]
                        },
                        {
                          "elementType": "textarea",
                          "name": "CommandInput",
                          "attrs": {
                            "id": "command",
                            "placeholder": "npx @modelcontextprotocol/server-name",
                            "bindingPath": "serverConfig.command",
                            "className": "w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring resize-none",
                            "rows": 3
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "FormGroup",
                      "attrs": { "className": "space-y-2" },
                      "children": [
                        {
                          "elementType": "label",
                          "attrs": { 
                            "htmlFor": "envVars",
                            "className": "text-sm font-medium text-foreground"
                          },
                          "children": [{ "elementType": "text", "content": "Environment Variables (JSON)" }]
                        },
                        {
                          "elementType": "textarea",
                          "name": "EnvVarsInput",
                          "attrs": {
                            "id": "envVars",
                            "placeholder": "{\n  \"API_KEY\": \"your-api-key\",\n  \"BASE_URL\": \"https://api.example.com\"\n}",
                            "bindingPath": "serverConfig.envVars",
                            "className": "w-full px-3 py-2 border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring font-mono text-sm resize-none",
                            "rows": 5
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "ValidationSection",
                      "conditional": {
                        "condition": "validationErrors.length > 0",
                        "ifFalse": null
                      },
                      "attrs": {
                        "className": "bg-destructive/15 text-destructive text-sm p-3 rounded-md border border-destructive/20"
                      },
                      "children": [
                        {
                          "elementType": "h4",
                          "attrs": { "className": "font-medium mb-2" },
                          "children": [{ "elementType": "text", "content": "Validation Errors:" }]
                        },
                        {
                          "elementType": "ul",
                          "attrs": { "className": "list-disc list-inside space-y-1" },
                          "children": {
                            "repeat": {
                              "dataSource": "validationErrors",
                              "element": {
                                "elementType": "li",
                                "children": [{ "elementType": "text", "bindingPath": "item" }]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "elementType": "div",
                      "name": "ConnectionStatus",
                      "conditional": {
                        "condition": "connectionStatus",
                        "ifFalse": null
                      },
                      "attrs": {
                        "className": {
                          "bindingPath": "connectionStatus === 'success' ? 'bg-green-50 text-green-700 border-green-200' : 'bg-red-50 text-red-700 border-red-200'",
                          "fallback": "bg-muted text-muted-foreground border-border"
                        }
                      },
                      "children": [
                        {
                          "elementType": "div",
                          "attrs": { "className": "flex items-center p-3 rounded-md border" },
                          "children": [
                            {
                              "elementType": "icon",
                              "name": { "bindingPath": "connectionStatus === 'success' ? 'check-circle' : 'x-circle'" },
                              "className": "w-4 h-4 mr-2"
                            },
                            {
                              "elementType": "text",
                              "bindingPath": "connectionMessage"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "elementType": "modalFooter",
              "name": "MCPServerModalFooter",
              "attrs": {
                "className": "p-6 border-t border-border flex items-center justify-between"
              },
              "children": [
                {
                  "elementType": "button",
                  "name": "TestConnectionButton",
                  "attrs": {
                    "type": "button",
                    "onClick": "testConnection",
                    "disabled": { "bindingPath": "isValidating || !serverConfig.name || !serverConfig.command" },
                    "className": "px-4 py-2 text-sm font-medium text-muted-foreground hover:text-foreground border border-input rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                  },
                  "children": [
                    {
                      "elementType": "icon",
                      "name": "wifi",
                      "className": "w-4 h-4 mr-2"
                    },
                    {
                      "elementType": "text",
                      "content": { "bindingPath": "isValidating ? 'Testing...' : 'Test Connection'" }
                    }
                  ]
                },
                {
                  "elementType": "div",
                  "name": "ActionButtons",
                  "attrs": { "className": "flex items-center gap-3" },
                  "children": [
                    {
                      "elementType": "button",
                      "name": "CancelButton",
                      "attrs": { 
                        "type": "button",
                        "onClick": "handleClose",
                        "className": "px-4 py-2 text-sm font-medium text-muted-foreground hover:text-foreground transition-colors"
                      },
                      "children": [{ "elementType": "text", "content": "Cancel" }]
                    },
                    {
                      "elementType": "button",
                      "name": "AddServerButton",
                      "attrs": { 
                        "type": "submit",
                        "onClick": "handleAddServer",
                        "disabled": { "bindingPath": "isValidating || validationErrors.length > 0" },
                        "className": "bg-primary hover:bg-primary/90 text-primary-foreground px-4 py-2 rounded-md font-medium transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                      },
                      "children": [
                        {
                          "elementType": "text",
                          "content": { "bindingPath": "isValidating ? 'Adding Server...' : 'Add Server'" }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "isOpen": {
            "type": "boolean",
            "defaultValue": false
          },
          "serverConfig": {
            "type": "object",
            "defaultValue": {
              "name": "",
              "type": "npx",
              "command": "",
              "envVars": ""
            }
          },
          "isValidating": {
            "type": "boolean",
            "defaultValue": false
          },
          "validationErrors": {
            "type": "array",
            "defaultValue": []
          },
          "connectionStatus": {
            "type": "string",
            "defaultValue": null
          },
          "connectionMessage": {
            "type": "string",
            "defaultValue": ""
          }
        },
        "actions": {
          "handleClose": {
            "type": "sync",
            "handler": "closeModal, resetForm"
          },
          "handleAddServer": {
            "type": "async",
            "handler": "mcpService.addServer",
            "parameters": ["serverConfig"],
            "onStart": "setValidating(true)",
            "onSuccess": "handleSuccess, closeModal",
            "onError": "handleValidationError",
            "onComplete": "setValidating(false)"
          },
          "testConnection": {
            "type": "async",
            "handler": "mcpService.testConnection",
            "parameters": ["serverConfig"],
            "onStart": "setValidating(true)",
            "onSuccess": "setConnectionStatus('success')",
            "onError": "setConnectionStatus('error')",
            "onComplete": "setValidating(false)"
          },
          "validateConfig": {
            "type": "sync",
            "handler": "validateServerConfig",
            "parameters": ["serverConfig"],
            "onComplete": "setValidationErrors"
          }
        }
      }
    },
    "components": {
      "folder_sidebar": {
        "name": "FolderSidebar",
        "type": "component",
        "content": {
          "elementType": "aside",
          "name": "FolderSidebarContainer",
          "attrs": {
            "className": "w-64 h-full bg-muted/5 border-r border-border flex flex-col"
          },
          "children": [
            {
              "elementType": "div",
              "name": "SidebarHeader",
              "attrs": {
                "className": "p-4 border-b border-border bg-card/30"
              },
              "children": [
                {
                  "elementType": "div",
                  "name": "HeaderContent",
                  "attrs": { "className": "flex items-center justify-between" },
                  "children": [
                    {
                      "elementType": "h3",
                      "attrs": { "className": "font-semibold text-foreground" },
                      "children": [{ "elementType": "text", "content": "Folders" }]
                    },
                    {
                      "elementType": "button",
                      "name": "CreateFolderButton",
                      "attrs": {
                        "onClick": "createFolder",
                        "className": "p-1.5 hover:bg-muted rounded-md transition-colors",
                        "title": "Create new folder"
                      },
                      "children": [
                        { "elementType": "icon", "name": "folder-plus", "className": "w-4 h-4" }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "elementType": "div",
              "name": "FolderSearch",
              "attrs": {
                "className": "p-3 border-b border-border"
              },
              "children": [
                {
                  "elementType": "div",
                  "name": "SearchInputContainer",
                  "attrs": { "className": "relative" },
                  "children": [
                    {
                      "elementType": "input",
                      "name": "FolderSearchInput",
                      "attrs": {
                        "type": "text",
                        "placeholder": "Search folders...",
                        "bindingPath": "searchQuery",
                        "onChange": "setSearchQuery",
                        "className": "w-full pl-8 pr-3 py-2 text-sm border border-input rounded-md focus:outline-none focus:ring-2 focus:ring-ring"
                      }
                    },
                    {
                      "elementType": "icon",
                      "name": "search",
                      "attrs": {
                        "className": "absolute left-2.5 top-1/2 transform -translate-y-1/2 w-3.5 h-3.5 text-muted-foreground"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "elementType": "div",
              "name": "FolderTreeContainer",
              "attrs": {
                "className": "flex-1 overflow-y-auto p-3"
              },
              "children": [
                {
                  "elementType": "component",
                  "name": "FolderTree",
                  "dependency": "ui_folder_tree",
                  "attrs": {
                    "folders": { "bindingPath": "filteredFolders" },
                    "selectedFolder": { "bindingPath": "selectedFolder" },
                    "expandedFolders": { "bindingPath": "expandedFolders" },
                    "onFolderSelect": "selectFolder",
                    "onFolderExpand": "toggleFolderExpanded",
                    "onFolderRename": "renameFolder",
                    "onFolderDelete": "deleteFolder",
                    "onFolderMove": "moveFolder",
                    "dragEnabled": true
                  }
                }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "folders": {
            "type": "array",
            "defaultValue": []
          },
          "selectedFolder": {
            "type": "string",
            "defaultValue": null
          },
          "expandedFolders": {
            "type": "array",
            "defaultValue": []
          },
          "searchQuery": {
            "type": "string",
            "defaultValue": ""
          },
          "filteredFolders": {
            "type": "array",
            "defaultValue": []
          }
        },
        "actions": {
          "selectFolder": {
            "type": "sync",
            "handler": "setSelectedFolder",
            "parameters": ["folderId"]
          },
          "createFolder": {
            "type": "async",
            "handler": "folderService.create",
            "parameters": ["selectedFolder"],
            "onSuccess": "addFolder, expandParent"
          },
          "renameFolder": {
            "type": "async",
            "handler": "folderService.rename",
            "parameters": ["folderId", "newName"],
            "onSuccess": "updateFolder"
          },
          "deleteFolder": {
            "type": "async",
            "handler": "folderService.delete",
            "parameters": ["folderId"],
            "onSuccess": "removeFolder"
          },
          "moveFolder": {
            "type": "async",
            "handler": "folderService.move",
            "parameters": ["folderId", "targetFolderId"],
            "onSuccess": "updateFolderHierarchy"
          },
          "toggleFolderExpanded": {
            "type": "sync",
            "handler": "toggleExpanded",
            "parameters": ["folderId"]
          },
          "setSearchQuery": {
            "type": "sync",
            "handler": "setState",
            "parameters": ["searchQuery"],
            "onComplete": "filterFolders"
          }
        }
      },
      "voice_assistant": {
        "name": "VoiceAssistant",
        "type": "component",
        "content": {
          "elementType": "div",
          "name": "VoiceAssistantContainer",
          "attrs": {
            "className": "flex items-center gap-3 p-4 bg-card/50 border border-border rounded-lg"
          },
          "children": [
            {
              "elementType": "button",
              "name": "VoiceButton",
              "attrs": {
                "onClick": "toggleListening",
                "className": {
                  "bindingPath": "isListening ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-primary hover:bg-primary/90 text-primary-foreground'",
                  "fallback": "bg-primary hover:bg-primary/90 text-primary-foreground"
                }
              },
              "children": [
                {
                  "elementType": "div",
                  "attrs": { "className": "flex items-center justify-center w-10 h-10 rounded-full transition-colors" },
                  "children": [
                    {
                      "elementType": "icon",
                      "name": { "bindingPath": "isListening ? 'mic-off' : 'mic'" },
                      "attrs": { "className": "w-5 h-5" }
                    }
                  ]
                }
              ]
            },
            {
              "elementType": "div",
              "name": "VoiceStatus",
              "attrs": { "className": "flex-1" },
              "children": [
                {
                  "elementType": "div",
                  "name": "StatusText",
                  "attrs": { "className": "text-sm font-medium text-foreground" },
                  "children": [
                    {
                      "elementType": "text",
                      "content": { "bindingPath": "isListening ? 'Listening...' : 'Voice Assistant'" }
                    }
                  ]
                },
                {
                  "elementType": "div",
                  "name": "AudioLevel",
                  "conditional": {
                    "condition": "isListening",
                    "ifFalse": null
                  },
                  "attrs": { "className": "mt-2" },
                  "children": [
                    {
                      "elementType": "component",
                      "name": "AudioWaveform",
                      "dependency": "ui_audio_waveform",
                      "attrs": {
                        "audioLevel": { "bindingPath": "audioLevel" },
                        "className": "h-2 w-32"
                      }
                    }
                  ]
                },
                {
                  "elementType": "div",
                  "name": "Transcript",
                  "conditional": {
                    "condition": "transcript",
                    "ifFalse": null
                  },
                  "attrs": { "className": "mt-2 text-xs text-muted-foreground italic" },
                  "children": [
                    {
                      "elementType": "text",
                      "bindingPath": "transcript"
                    }
                  ]
                }
              ]
            },
            {
              "elementType": "button",
              "name": "SettingsButton",
              "attrs": {
                "onClick": "openSettings",
                "className": "p-2 hover:bg-muted rounded-md transition-colors",
                "title": "Voice settings"
              },
              "children": [
                { "elementType": "icon", "name": "settings", "className": "w-4 h-4" }
              ]
            }
          ]
        },
        "stateDefinitions": {
          "isListening": {
            "type": "boolean",
            "defaultValue": false
          },
          "audioLevel": {
            "type": "number",
            "defaultValue": 0
          },
          "transcript": {
            "type": "string",
            "defaultValue": ""
          },
          "selectedMicrophone": {
            "type": "string",
            "defaultValue": null
          },
          "selectedVoice": {
            "type": "string",
            "defaultValue": null
          },
          "voiceProvider": {
            "type": "string",
            "defaultValue": "openai"
          }
        },
        "actions": {
          "toggleListening": {
            "type": "async",
            "handler": "voiceService.toggleListening",
            "onStart": "setListening(!isListening)",
            "onSuccess": "updateVoiceState",
            "onError": "handleVoiceError"
          },
          "openSettings": {
            "type": "sync",
            "handler": "openVoiceSettings"
          },
          "updateAudioLevel": {
            "type": "sync",
            "handler": "setAudioLevel",
            "parameters": ["level"]
          },
          "updateTranscript": {
            "type": "sync",
            "handler": "setTranscript",
            "parameters": ["text"]
          }
        }
      }
    }
  }
}